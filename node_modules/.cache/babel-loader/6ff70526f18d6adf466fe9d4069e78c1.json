{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\";\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box } from \"monday-ui-react-core\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [countInput, setCountInput] = useState(0);\n  const handleInput = () => {\n    setListItems([...listItems, /*#__PURE__*/_jsxDEV(ListItem, {}, nameInput, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }, this)]);\n  };\n  const updateNameValue = evt => {\n    setNameInput(evt.target.value);\n  };\n  const updateCountValue = evt => {\n    setCountInput(evt.target.value);\n  };\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n    });\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3\",\n        children: /*#__PURE__*/_jsxDEV(ListInput, {\n          name: updateNameValue(),\n          count: updateCountValue(),\n          clickFunction: handleInput()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: listItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {}, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MF9l+IEgECiSffXsnGENWOrG6J4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","List","ListItem","ListInput","Row","Col","Box","jsxDEV","_jsxDEV","monday","App","_s","context","setContext","listItems","setListItems","nameInput","setNameInput","countInput","setCountInput","handleInput","fileName","_jsxFileName","lineNumber","columnNumber","updateNameValue","evt","target","value","updateCountValue","execute","listen","res","data","attentionBoxText","user","id","className","children","name","count","clickFunction","map","item","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\"\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box } from \"monday-ui-react-core\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([])\n  const [nameInput, setNameInput] = useState(\"\")\n  const [countInput, setCountInput] = useState(0)\n\n  const handleInput = () => {\n    setListItems([...listItems, <ListItem key={nameInput}></ListItem>])\n  }\n\n  const updateNameValue = (evt) => {\n    setNameInput(evt.target.value);\n  }\n\n  const updateCountValue = (evt) => {\n    setCountInput(evt.target.value);\n  }\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n    });\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <div className=\"col-12 py-3\"><ListInput name={updateNameValue()} count={updateCountValue()} clickFunction={handleInput()}></ListInput></div>\n        <div className=\"col-12\">\n          {listItems.map(item => (\n          <ListItem key={0}></ListItem>\n        ))}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}