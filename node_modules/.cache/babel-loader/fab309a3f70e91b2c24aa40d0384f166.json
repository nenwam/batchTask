{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\";\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box, Divider } from \"monday-ui-react-core\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [countInput, setCountInput] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [colOptions, setColOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput));\n    setListItems([...listItems, /*#__PURE__*/_jsxDEV(ListItem, {\n      itemName: nameInput,\n      itemCount: countInput,\n      handleTotalCount: changeTotalCount\n    }, nameInput, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }, this)]);\n    const query = `mutation {\n      change_simple_column_value (board_id: ${context.boardId}, item_id: ${context.itemId}, column_id: \"${columnId}\", value: \"${JSON.stringify(newValue)}\") {\n        id\n      }\n    }`;\n    monday.api(query).then(res => {\n      console.log(\"Column updated successfully: \", res);\n    }).catch(err => {\n      console.log(\"Error updating column: \", err);\n    });\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    });\n  };\n  const updateNameValue = evt => {\n    setNameInput(evt);\n  };\n  const updateCountValue = evt => {\n    setCountInput(evt);\n  };\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      console.log(\"res: \", res);\n      setContext(res.data);\n    });\n    if (context) {\n      console.log(\"Context: \", context);\n      const boardId = context.boardId;\n      const query = `query {\n        boards(ids: ${boardId}) {\n          columns {\n            id\n            title\n          }\n        }\n      }`;\n      monday.api(query).then(res => {\n        const columns = res.data.boards[0].columns;\n        console.log(\"Columns: \", columns);\n        const cols = columns.map(column => {\n          return {\n            label: column.title,\n            value: column.id\n          };\n        });\n        console.log(\"cols: \", cols);\n        setColOptions(cols);\n      }).catch(err => {\n        console.log(\"Error fetching columns: \", err);\n      });\n    }\n    console.log(\"inputTotal:\", parseInt(totalCount));\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3\",\n        children: /*#__PURE__*/_jsxDEV(ListInput, {\n          nameHandler: evt => updateNameValue(evt),\n          countHandler: evt => updateCountValue(evt),\n          totalCount: totalCount,\n          dropdownOptions: colOptions,\n          dropdownHandler: evt => handleOptionsSelection(evt),\n          clickFunction: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: listItems.map(item => item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SYwMb15VmtpwC5xTXhyq2e/rf60=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","List","ListItem","ListInput","Row","Col","Box","Divider","jsxDEV","_jsxDEV","monday","setToken","App","_s","context","setContext","listItems","setListItems","nameInput","setNameInput","countInput","setCountInput","totalCount","setTotalCount","colOptions","setColOptions","selectedOption","setSelectedOption","handleInput","parseInt","itemName","itemCount","handleTotalCount","changeTotalCount","fileName","_jsxFileName","lineNumber","columnNumber","query","boardId","itemId","columnId","JSON","stringify","newValue","api","then","res","console","log","catch","err","handleOptionsSelection","evt","isChecked","prevTotalCount","updateNameValue","updateCountValue","execute","listen","data","columns","boards","cols","map","column","label","title","value","id","attentionBoxText","user","className","children","nameHandler","countHandler","dropdownOptions","dropdownHandler","clickFunction","item","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\"\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box, Divider } from \"monday-ui-react-core\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([])\n  const [nameInput, setNameInput] = useState(\"\")\n  const [countInput, setCountInput] = useState(0)\n  const [totalCount, setTotalCount] = useState(0)\n  const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState(\"\")  \n\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput))\n    setListItems([...listItems, <ListItem key={nameInput} itemName={nameInput} itemCount={countInput} handleTotalCount={changeTotalCount}></ListItem>])\n\n    const query = `mutation {\n      change_simple_column_value (board_id: ${context.boardId}, item_id: ${context.itemId}, column_id: \"${columnId}\", value: \"${JSON.stringify(newValue)}\") {\n        id\n      }\n    }`;\n    \n    monday.api(query)\n      .then((res) => {\n        console.log(\"Column updated successfully: \", res);\n      })\n      .catch((err) => {\n        console.log(\"Error updating column: \", err);\n      });\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt)  \n  }\n\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    })\n  }\n\n\n  const updateNameValue = (evt) => {\n    setNameInput(evt);\n  }\n\n\n  const updateCountValue = (evt) => {\n    setCountInput(evt);\n  }\n\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      console.log(\"res: \", res)\n      setContext(res.data);\n    });\n\n    if (context) {\n      console.log(\"Context: \", context)\n      const boardId = context.boardId;\n      \n      const query = `query {\n        boards(ids: ${boardId}) {\n          columns {\n            id\n            title\n          }\n        }\n      }`;\n      monday.api(query).then((res) => {\n        const columns = res.data.boards[0].columns;\n        console.log(\"Columns: \", columns);\n        const cols = columns.map(column => {\n            return {label: column.title, value: column.id}\n        })\n        console.log(\"cols: \", cols)\n        setColOptions(cols)\n      }).catch((err) => {\n        console.log(\"Error fetching columns: \", err);\n      });\n    }\n    \n    \n    console.log(\"inputTotal:\", parseInt(totalCount))\n    \n  }, []);\n\n\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <div className=\"col-12 py-3\">\n          <ListInput \n            nameHandler={evt => updateNameValue(evt)} \n            countHandler={evt => updateCountValue(evt)} \n            totalCount={totalCount} \n            dropdownOptions={colOptions}\n            dropdownHandler={evt => handleOptionsSelection(evt)}\n            clickFunction={handleInput}>\n          </ListInput>\n        </div>\n        <Divider></Divider>\n        <div className=\"col-12\">\n          {listItems.map(item => (\n          item\n        ))}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}