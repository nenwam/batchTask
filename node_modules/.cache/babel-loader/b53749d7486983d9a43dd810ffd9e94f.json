{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"./modules/List.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Divider } from \"monday-ui-react-core\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  // const [nameInput, setNameInput] = useState(\"\")\n  // const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({});\n  const [optionSelected, setOptionSelected] = useState(false);\n  const handleInput = (name, count) => {\n    console.log(\"count: \", totalCount);\n    const countAsNum = parseInt(count);\n    // const newTotalCount = totalCount + countAsNum\n    // console.log(\"new total: \", newTotalCount)\n    setTotalCount(prevTotalCount => {\n      return prevTotalCount + countAsNum;\n    });\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const newItem = {\n      uniqueKey: Math.random().toString(36).substr(2, 9),\n      itemName: name,\n      itemCount: countAsNum\n    };\n    console.log(\"Key: \", uniqueKey);\n    setListItems([...listItems, newItem]);\n    // setListItems([...listItems, <ListItem key={uniqueKey} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n    // setNameInput(\"\")\n    // setCountInput()\n    console.log(\"handleInput Option: \", selectedOption);\n  };\n  const handleTotalReset = () => {\n    setTotalCount(0);\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n    storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(evt));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName));\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName);\n      // storageInstance.setItem('listItems', JSON.stringify(newListItems));  -- NEWEST\n      // localStorage.setItem('listItems', JSON.stringify(newListItems));\n      return newListItems;\n    });\n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      // storageInstance.setItem('totalCount', newTotalCount); -- NEWEST\n      // localStorage.setItem('totalCount', newTotalCount);\n      return newTotalCount;\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof isChecked);\n    console.log(\"itemCount type: \", typeof itemCount);\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    });\n    // setTimeout(() => {}, 2000)\n\n    console.log(\"changeTotal Option: \", selectedOption);\n  };\n\n  // const updateNameValue = (evt) => {\n  //   setNameInput(evt);\n  // }\n\n  // const updateCountValue = (evt) => {\n  //   setCountInput(evt);\n  // }\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\");\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    // let isMounted = true\n\n    // const handleContext = (res) => {\n\n    //   if (!isMounted) return\n\n    //   console.log(\"useEffect storage res: \", res)\n    //   setContext(res.data);\n\n    //   storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n    //     console.log(\"Item Response: \", response)\n    //     setListItems(JSON.parse(response.data.value) || []);  \n    //   });\n    //   storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n    //     console.log(\"Count Response: \", response)\n    //     setTotalCount(JSON.parse(response.data.value) || []);\n    //   });\n    //   storageInstance.getItem('selectedOption_' + res.data.itemId).then(response => {\n    //     console.log(\"Option Response: \", response)\n    //     setSelectedOption(JSON.parse(response.data.value) || []);\n    //   });\n\n    //   // const localListItems = JSON.parse(localStorage.getItem('listItems_' + res.data.itemId)) || []\n    //   // setListItems(localListItems)\n    //   // const localTotalCount = parseInt(localStorage.getItem('totalCount_' + res.data.itemId)) || 0\n    //   // setTotalCount(localTotalCount)\n    //   // const localSelectedOption = JSON.parse(localStorage.getItem('selectedOption_' + res.data.itemId)) || {}\n    //   // setSelectedOption(localSelectedOption)\n\n    // }\n\n    // monday.listen(\"context\", handleContext);\n\n    // return () => {\n    //   isMounted = false\n    // }\n\n    // WIthout cleanup\n\n    monday.listen(\"context\", res => {\n      console.log(\"useEffect storage res: \", res);\n      setContext(res.data);\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        // console.log(\"Item Response: \", response)\n        setListItems(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        console.log(\"Count Response: \", response);\n        setTotalCount(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('selectedOption_' /* + res.data.itemId*/).then(response => {\n        console.log(\"Option Response: \", response);\n        setSelectedOption(JSON.parse(response.data.value) || []);\n      });\n\n      // const localListItems = JSON.parse(localStorage.getItem('listItems_' + res.data.itemId)) || []\n      // setListItems(localListItems)\n      // const localTotalCount = parseInt(localStorage.getItem('totalCount_' + res.data.itemId)) || 0\n      // setTotalCount(localTotalCount)\n      // const localSelectedOption = JSON.parse(localStorage.getItem('selectedOption_' + res.data.itemId)) || {}\n      // setSelectedOption(localSelectedOption)\n    });\n  }, [/*listItems, colOptions*/]);\n  useEffect(() => {\n    // Need to make it so that the add item deletes the previous item input and so that the subitems can be selected rather than just items\n    console.log(\"----App.js UseEffect #2----\");\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption);\n      const boardId = context.boardId;\n      console.log(\"using boardID: \", boardId);\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      monday.api(query).then(res => {\n        console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n      }).catch(err => {\n        console.log(\"Error updating column: \", err);\n      });\n    }\n  }, [totalCount /*selectedOption,context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n  }, [listItems /*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #4----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n      // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n  }, [totalCount /*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(selectedOption));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value);\n    }\n  }, [selectedOption /*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\");\n    if (context) {\n      const storedSelectedOption = storageInstance.getItem('selectedOption_' /* + context.itemId*/).then(response => {\n        if (response.data && response.data.value) {\n          const defaultSelectedOption = JSON.parse(storedSelectedOption);\n          handleOptionsSelection(defaultSelectedOption);\n        }\n      });\n      // const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n      // if (storedSelectedOption) {\n      //   // Set it as the default selected option\n      //   // You may need to adapt this part to match the data structure of your `Dropdown` component\n      //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n      //   handleOptionsSelection(defaultSelectedOption);\n      // }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3\",\n        children: context && /*#__PURE__*/_jsxDEV(ListInput\n        // nameHandler={evt => updateNameValue(evt)} \n        // nameValue={nameInput}\n        // countHandler={evt => updateCountValue(evt)} \n        // countValue={countInput}\n        , {\n          totalCount: totalCount,\n          dropdownHandler: evt => handleOptionsSelection(evt),\n          clickFunction: handleInput,\n          resetTotalFunction: handleTotalReset,\n          parentContext: context,\n          disabledCheck: selectedOption.value !== undefined ? false : true,\n          selectedVal: selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: context && /*#__PURE__*/_jsxDEV(List, {\n          items: listItems,\n          handleDelete: handleItemDelete,\n          parentContext: context,\n          handleTotalCount: changeTotalCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/qMylmDLr2mz1O8PE/IzkScEYgo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","List","ListInput","Divider","jsxDEV","_jsxDEV","monday","setToken","storageInstance","storage","instance","App","_s","context","setContext","listItems","setListItems","totalCount","setTotalCount","selectedOption","setSelectedOption","optionSelected","setOptionSelected","handleInput","name","count","console","log","countAsNum","parseInt","prevTotalCount","uniqueKey","Math","random","toString","substr","newItem","itemName","itemCount","handleTotalReset","handleOptionsSelection","evt","setItem","JSON","stringify","handleItemDelete","isChecked","prevListItems","newListItems","filter","item","map","newTotalCount","changeTotalCount","execute","listen","res","data","getItem","itemId","then","response","parse","value","boardId","query","api","catch","err","storedSelectedOption","defaultSelectedOption","className","children","dropdownHandler","clickFunction","resetTotalFunction","parentContext","disabledCheck","undefined","selectedVal","fileName","_jsxFileName","lineNumber","columnNumber","items","handleDelete","handleTotalCount","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"./modules/List.js\"\nimport ListInput from \"./modules/ListInput.js\";\nimport { Divider } from \"monday-ui-react-core\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  // const [nameInput, setNameInput] = useState(\"\")\n  // const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({}); \n  const [optionSelected, setOptionSelected] = useState(false);\n\n\n\n  const handleInput = (name, count) => {\n    console.log(\"count: \", totalCount)\n    const countAsNum = parseInt(count)\n    // const newTotalCount = totalCount + countAsNum\n    // console.log(\"new total: \", newTotalCount)\n    setTotalCount(prevTotalCount => {\n      return prevTotalCount + countAsNum \n    })\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const newItem = { uniqueKey: Math.random().toString(36).substr(2, 9), itemName: name, itemCount: countAsNum };\n    console.log(\"Key: \", uniqueKey)\n    setListItems([...listItems, newItem])\n    // setListItems([...listItems, <ListItem key={uniqueKey} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n    // setNameInput(\"\")\n    // setCountInput()\n    console.log(\"handleInput Option: \", selectedOption)\n  }\n\n  const handleTotalReset = () => {\n    setTotalCount(0)\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt) \n    storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(evt));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt) \n  }\n\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName))\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName)\n      // storageInstance.setItem('listItems', JSON.stringify(newListItems));  -- NEWEST\n      // localStorage.setItem('listItems', JSON.stringify(newListItems));\n      return newListItems;\n    });\n  \n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      // storageInstance.setItem('totalCount', newTotalCount); -- NEWEST\n      // localStorage.setItem('totalCount', newTotalCount);\n      return newTotalCount;\n    });\n  }\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof(isChecked))\n    console.log(\"itemCount type: \", typeof(itemCount))\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    })\n    // setTimeout(() => {}, 2000)\n\n    console.log(\"changeTotal Option: \", selectedOption)  \n  }\n\n\n  // const updateNameValue = (evt) => {\n  //   setNameInput(evt);\n  // }\n\n\n  // const updateCountValue = (evt) => {\n  //   setCountInput(evt);\n  // }\n\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\")\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    // let isMounted = true\n\n    // const handleContext = (res) => {\n\n    //   if (!isMounted) return\n\n    //   console.log(\"useEffect storage res: \", res)\n    //   setContext(res.data);\n\n    //   storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n    //     console.log(\"Item Response: \", response)\n    //     setListItems(JSON.parse(response.data.value) || []);  \n    //   });\n    //   storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n    //     console.log(\"Count Response: \", response)\n    //     setTotalCount(JSON.parse(response.data.value) || []);\n    //   });\n    //   storageInstance.getItem('selectedOption_' + res.data.itemId).then(response => {\n    //     console.log(\"Option Response: \", response)\n    //     setSelectedOption(JSON.parse(response.data.value) || []);\n    //   });\n\n    //   // const localListItems = JSON.parse(localStorage.getItem('listItems_' + res.data.itemId)) || []\n    //   // setListItems(localListItems)\n    //   // const localTotalCount = parseInt(localStorage.getItem('totalCount_' + res.data.itemId)) || 0\n    //   // setTotalCount(localTotalCount)\n    //   // const localSelectedOption = JSON.parse(localStorage.getItem('selectedOption_' + res.data.itemId)) || {}\n    //   // setSelectedOption(localSelectedOption)\n\n    // }\n\n    // monday.listen(\"context\", handleContext);\n\n    // return () => {\n    //   isMounted = false\n    // }\n\n    // WIthout cleanup\n\n    monday.listen(\"context\", (res) => {\n      console.log(\"useEffect storage res: \", res)\n      setContext(res.data);\n\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        // console.log(\"Item Response: \", response)\n        setListItems(JSON.parse(response.data.value) || []);  \n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        console.log(\"Count Response: \", response)\n        setTotalCount(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('selectedOption_'/* + res.data.itemId*/).then(response => {\n        console.log(\"Option Response: \", response)\n        setSelectedOption(JSON.parse(response.data.value) || []);\n      });\n\n      // const localListItems = JSON.parse(localStorage.getItem('listItems_' + res.data.itemId)) || []\n      // setListItems(localListItems)\n      // const localTotalCount = parseInt(localStorage.getItem('totalCount_' + res.data.itemId)) || 0\n      // setTotalCount(localTotalCount)\n      // const localSelectedOption = JSON.parse(localStorage.getItem('selectedOption_' + res.data.itemId)) || {}\n      // setSelectedOption(localSelectedOption)\n    });\n\n    \n  }, [/*listItems, colOptions*/]);\n\n  useEffect(() => { // Need to make it so that the add item deletes the previous item input and so that the subitems can be selected rather than just items\n    console.log(\"----App.js UseEffect #2----\")\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption)\n      const boardId = context.boardId\n      console.log(\"using boardID: \", boardId)\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      \n      monday.api(query)\n        .then((res) => {\n          console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n        })\n        .catch((err) => {\n          console.log(\"Error updating column: \", err);\n        });\n    }\n  }, [totalCount, /*selectedOption,context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n    \n  }, [listItems/*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #4----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n      // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n    \n  }, [totalCount/*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(selectedOption));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value)\n    }\n    \n    \n  }, [selectedOption/*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\")\n    if (context) {\n      const storedSelectedOption = storageInstance.getItem('selectedOption_'/* + context.itemId*/).then(response => {\n        if (response.data && response.data.value) {\n          const defaultSelectedOption = JSON.parse(storedSelectedOption);\n          handleOptionsSelection(defaultSelectedOption);\n        }\n      })\n      // const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n      // if (storedSelectedOption) {\n      //   // Set it as the default selected option\n      //   // You may need to adapt this part to match the data structure of your `Dropdown` component\n      //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n      //   handleOptionsSelection(defaultSelectedOption);\n      // }\n    }\n    \n  }, [])\n\n\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row mt-5\">\n        <div className=\"col-12 py-3\">\n          {context && <ListInput \n            // nameHandler={evt => updateNameValue(evt)} \n            // nameValue={nameInput}\n            // countHandler={evt => updateCountValue(evt)} \n            // countValue={countInput}\n            totalCount={totalCount} \n            dropdownHandler={evt => handleOptionsSelection(evt)}\n            clickFunction={handleInput}\n            resetTotalFunction={handleTotalReset}\n            parentContext={context}\n            disabledCheck={selectedOption.value !== undefined ? false : true }\n            selectedVal={selectedOption}>\n          </ListInput>}\n        </div>\n        <Divider></Divider>\n        <div className=\"col-12\">\n          { context && <List items={listItems} handleDelete={handleItemDelete} parentContext={context} handleTotalCount={changeTotalCount}></List>}\n        </div> \n      </div>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}