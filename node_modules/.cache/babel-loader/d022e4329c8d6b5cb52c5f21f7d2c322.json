{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const useData = () => {\n  _s();\n  return useContext(DataContext);\n};\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [totalBatches, setTotalBatches] = useState(0);\n  useEffect(() => {\n    // Fetch the initial totalBatches value from storage\n    storageInstance.getItem('totalBatches_').then(response => {\n      if (response.data && response.data.value) {\n        const initialTotalBatches = JSON.parse(response.data.value);\n        setTotalBatches(initialTotalBatches);\n      }\n    }).catch(err => {\n      console.error(\"Error fetching initial totalBatches:\", err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      totalBatches,\n      setTotalBatches\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"ppj3oCOqPkXrAmxkaqg4pA1PQtc=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","DataContext","useData","_s","DataProvider","_ref","_s2","children","totalBatches","setTotalBatches","useEffect","storageInstance","getItem","then","response","data","value","initialTotalBatches","JSON","parse","catch","err","console","error","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/DataContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst DataContext = createContext();\n\nexport const useData = () => useContext(DataContext);\n\nexport const DataProvider = ({ children }) => {\n  const [totalBatches, setTotalBatches] = useState(0);\n\n  useEffect(() => {\n    // Fetch the initial totalBatches value from storage\n    storageInstance.getItem('totalBatches_').then(response => {\n      if (response.data && response.data.value) {\n        const initialTotalBatches = JSON.parse(response.data.value);\n        setTotalBatches(initialTotalBatches);\n      }\n    }).catch(err => {\n      console.error(\"Error fetching initial totalBatches:\", err);\n    });\n  }, []);\n\n  return (\n    <DataContext.Provider value={{ totalBatches, setTotalBatches }}>\n      {children}\n    </DataContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGC,IAAA,IAAkB;EAAAC,GAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEnDa,SAAS,CAAC,MAAM;IACd;IACAC,eAAe,CAACC,OAAO,CAAC,eAAe,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACxD,IAAIA,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;QACxC,MAAMC,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;QAC3DP,eAAe,CAACQ,mBAAmB,CAAC;MACtC;IACF,CAAC,CAAC,CAACG,KAAK,CAACC,GAAG,IAAI;MACdC,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEF,GAAG,CAAC;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACR,KAAK,EAAE;MAAER,YAAY;MAAEC;IAAgB,CAAE;IAAAF,QAAA,EAC5DA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,GAAA,CApBWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}