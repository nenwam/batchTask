{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"./modules/List.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Divider, Loader } from \"monday-ui-react-core\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  // const [nameInput, setNameInput] = useState(\"\")\n  // const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({});\n  const [printerOptions, setPrinterOptions] = useState({});\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [shouldLoad, setShouldLoad] = useState(false);\n  const [initialShouldLoad, setInitialShouldLoad] = useState(false);\n  const handleInput = useHandler((name, count) => {\n    console.log(\"count: \", totalCount);\n    const countAsNum = parseInt(count);\n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount);\n      return parseInt(prevTotalCount) + countAsNum;\n    });\n    const currentDate = new Date();\n    const currentTime = currentDate.toLocaleTimeString('en-US', {\n      timeStyle: 'short',\n      hour12: true\n    });\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const printerDisplay = printerOptions.label == undefined ? \"Printer N/A\" : printerOptions.label;\n    const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear() + \"\\n | \" + printerDisplay;\n    const newItem = {\n      uniqueKey: Math.random().toString(36).substr(2, 9),\n      itemName: itemDisplayPos,\n      itemCount: countAsNum\n    };\n    console.log(\"Key: \", uniqueKey);\n    setListItems([...listItems, newItem]);\n    console.log(\"handleInput Option: \", selectedOption);\n  }, []);\n  const handleTotalReset = () => {\n    setTotalCount(0);\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n    setShouldLoad(true);\n    storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(evt)).catch(error => {\n      console.log(error);\n      setShouldLoad(false);\n    }).finally(() => {\n      setShouldLoad(false);\n    });\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handlePrinterSelection = evt => {\n    setPrinterOptions(evt);\n    setShouldLoad(true);\n    storageInstance.setItem('printerOptions_' + context.itemId, JSON.stringify(evt)).catch(error => {\n      console.log(error);\n      setShouldLoad(false);\n    }).finally(() => {\n      setShouldLoad(false);\n    });\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName));\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName);\n      return newListItems;\n    });\n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      return newTotalCount;\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof isChecked);\n    console.log(\"itemCount type: \", typeof itemCount);\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    });\n    console.log(\"changeTotal Option: \", selectedOption);\n  };\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\");\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n    monday.listen(\"context\", res => {\n      console.log(\"useEffect storage res: \", res);\n      setContext(res.data);\n\n      // setShouldLoad(true)\n\n      storageInstance.getItem('listItems_' + res.data.itemId).then(result1 => {\n        setListItems(JSON.parse(result1.data.value) || []);\n        return storageInstance.getItem('listItems_' + res.data.itemId);\n      }).then(result2 => {\n        setListItems(JSON.parse(result2.data.value) || []);\n        return storageInstance.getItem('totalCount_' + res.data.itemId);\n      }).then(result3 => {\n        const parsedCount = parseInt(result3.data.value);\n        setTotalCount(parsedCount || 0);\n        return storageInstance.getItem('selectedOption_' /* + res.data.itemId*/);\n      }).then(result4 => {\n        setSelectedOption(JSON.parse(result4.data.value) || []);\n        return storageInstance.getItem('printerOption_' + res.data.itemId);\n      }).then(result5 => {\n        setPrinterOptions(JSON.parse(result5.data.value) || []);\n      }).catch(error => {\n        console.log(error);\n        // setShouldLoad(false)\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n\n      // storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n      //   setListItems(JSON.parse(response.data.value) || []);  \n      // }).catch(error => {\n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // })\n\n      // storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n      //   console.log(\"Count Response: \", response.data.value)\n      //   const parsedCount = parseInt(response.data.value)\n      //   setTotalCount(parsedCount || 0);\n      // }).catch(error => { \n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // })\n\n      // storageInstance.getItem('selectedOption_'/* + res.data.itemId*/).then(response => {\n      //   console.log(\"Option Response: \", response)\n      //   setSelectedOption(JSON.parse(response.data.value) || []);\n      // }).catch(error => { \n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // })\n\n      // storageInstance.getItem('printerOption_' + res.data.itemId).then(response => {\n      //   console.log(\"Printer Response: \", response.data.value)\n      //   setPrinterOptions(JSON.parse(response.data.value) || []);\n      // }).catch(error => { \n      //   console.log(error)\n      // }).finally(() => {\n      //   setShouldLoad(false)\n      // });\n    });\n  }, []);\n\n  // useEffect(() => { \n  //   console.log(\"----App.js UseEffect #2----\")\n  //   if (selectedOption && context && totalCount != null) {\n  //     console.log(\"Inner Context: \", selectedOption)\n  //     const boardId = context.boardId\n  //     console.log(\"using boardID: \", boardId)\n  //     const query = `mutation {\n  //       change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n  //         id\n  //       }\n  //     }`;\n\n  //     monday.api(query)\n  //       .then((res) => {\n  //         console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n  //       })\n  //       .catch((err) => {\n  //         console.log(\"Error updating column: \", err);\n  //       });\n  //   }\n\n  // }, [totalCount]);\n\n  // Update listItems in the board storage when it changes\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #3----\")\n  //   if (context) {\n  //     console.log(\"Context: \", context)\n  //     setShouldLoad(true)\n  //     storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)\n  //     ).catch(error => { \n  //       console.log(error)\n  //       setShouldLoad(false)\n  //     }).finally(() => { \n  //       setShouldLoad(false)\n  //     });\n\n  //   }\n\n  // }, [listItems]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      setShouldLoad(true);\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)).then(result1 => {\n        return storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n      }).catch(error => {\n        console.log(error);\n        // setShouldLoad(false)\n      }).finally(() => {\n        setShouldLoad(false);\n      });\n\n      // storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString()\n      // ).catch(error => { \n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // }).finally(() => { \n      //   setShouldLoad(false)\n      // });\n    }\n\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption);\n      const boardId = context.boardId;\n      console.log(\"using boardID: \", boardId);\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      monday.api(query).then(res => {\n        console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n      }).catch(err => {\n        console.log(\"Error updating column: \", err);\n      });\n    }\n  }, [listItems, totalCount]);\n\n  // Update totalCount in the board storage when it changes\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #4----\")\n  //   if (context) {\n  //     console.log(\"Context: \", context)\n  //     setShouldLoad(true)\n  //     storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString()\n  //     ).catch(error => { \n  //       console.log(error)\n  //       setShouldLoad(false)\n  //     }).finally(() => { \n  //       setShouldLoad(false)\n  //     });\n  //     // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n\n  //   }\n\n  // }, [totalCount]);\n\n  // Update selectedOption in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      // setShouldLoad(true)\n      storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(selectedOption)).catch(error => {\n        console.log(error);\n        // setShouldLoad(false)\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n      console.log(\"Option: \", selectedOption.value);\n    }\n  }, [selectedOption]);\n\n  // Update printerOptions in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      // setShouldLoad(true)\n      storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions)).catch(error => {\n        console.log(error);\n        // setShouldLoad(false)\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n      console.log(\"Option: \", printerOptions.value);\n    }\n  }, [printerOptions]);\n\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #7----\")\n  //   if (context) {\n  //     const storedSelectedOption = storageInstance.getItem('selectedOption_'/* + context.itemId*/).then(response => {\n  //       if (response.data && response.data.value) {\n  //         const defaultSelectedOption = JSON.parse(storedSelectedOption);\n  //         handleOptionsSelection(defaultSelectedOption);\n  //       }\n  //     })\n  //     // const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n  //     // if (storedSelectedOption) {\n  //     //   // Set it as the default selected option\n  //     //   // You may need to adapt this part to match the data structure of your `Dropdown` component\n  //     //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n  //     //   handleOptionsSelection(defaultSelectedOption);\n  //     // }\n  //   }\n\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3 mt-5\",\n        children: context && /*#__PURE__*/_jsxDEV(ListInput\n        // nameHandler={evt => updateNameValue(evt)} \n        // nameValue={nameInput}\n        // countHandler={evt => updateCountValue(evt)} \n        // countValue={countInput}\n        , {\n          totalCount: totalCount,\n          dropdownHandler: evt => handleOptionsSelection(evt),\n          printerHandler: evt => handlePrinterSelection(evt),\n          clickFunction: handleInput,\n          resetTotalFunction: handleTotalReset,\n          parentContext: context,\n          disabledCheck: selectedOption.value !== undefined ? false : true,\n          selectedVal: selectedOption,\n          printerVal: printerOptions,\n          shouldLoad: shouldLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          items: listItems,\n          handleDelete: handleItemDelete,\n          parentContext: context,\n          handleTotalCount: changeTotalCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wHBQMHJNHH19522dvwEHJdFmOW4=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","List","ListInput","Divider","Loader","jsxDEV","_jsxDEV","monday","setToken","storageInstance","storage","instance","App","_s","context","setContext","listItems","setListItems","totalCount","setTotalCount","selectedOption","setSelectedOption","printerOptions","setPrinterOptions","optionSelected","setOptionSelected","shouldLoad","setShouldLoad","initialShouldLoad","setInitialShouldLoad","handleInput","useHandler","name","count","console","log","countAsNum","parseInt","prevTotalCount","currentDate","Date","currentTime","toLocaleTimeString","timeStyle","hour12","uniqueKey","Math","random","toString","substr","printerDisplay","label","undefined","itemDisplayPos","length","getMonth","getDate","getFullYear","newItem","itemName","itemCount","handleTotalReset","handleOptionsSelection","evt","setItem","JSON","stringify","catch","error","finally","handlePrinterSelection","itemId","handleItemDelete","isChecked","prevListItems","newListItems","filter","item","map","newTotalCount","changeTotalCount","execute","listen","res","data","getItem","then","result1","parse","value","result2","result3","parsedCount","result4","result5","boardId","query","api","err","className","children","dropdownHandler","printerHandler","clickFunction","resetTotalFunction","parentContext","disabledCheck","selectedVal","printerVal","fileName","_jsxFileName","lineNumber","columnNumber","items","handleDelete","handleTotalCount","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"./modules/List.js\"\nimport ListInput from \"./modules/ListInput.js\";\nimport { Divider, Loader } from \"monday-ui-react-core\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  // const [nameInput, setNameInput] = useState(\"\")\n  // const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({}); \n  const [printerOptions, setPrinterOptions] = useState({})\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [shouldLoad, setShouldLoad] = useState(false);\n  const [initialShouldLoad, setInitialShouldLoad] = useState(false);\n\n\n\n  const handleInput = useHandler((name, count) => {\n    console.log(\"count: \", totalCount)\n    const countAsNum = parseInt(count)\n    \n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount)\n      return parseInt(prevTotalCount) + countAsNum \n    })\n    const currentDate = new Date()\n    const currentTime = currentDate.toLocaleTimeString('en-US', {timeStyle: 'short', hour12: true})\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const printerDisplay = printerOptions.label == undefined ? \"Printer N/A\" : printerOptions.label\n    const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + \n      (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear() + \"\\n | \" + printerDisplay\n    const newItem = { uniqueKey: Math.random().toString(36).substr(2, 9), itemName: itemDisplayPos, itemCount: countAsNum };\n    console.log(\"Key: \", uniqueKey)\n    setListItems([...listItems, newItem])\n    \n    \n\n    console.log(\"handleInput Option: \", selectedOption)\n  }, [])\n\n  const handleTotalReset = () => {\n    setTotalCount(0)\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt) \n    setShouldLoad(true)\n    storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(evt)\n    ).catch(error => {\n      console.log(error)\n      setShouldLoad(false)\n    }).finally(() => { \n      setShouldLoad(false)\n    });\n    console.log(\"handleOptions Option: \", evt) \n  }\n\n  const handlePrinterSelection = (evt) => {\n    setPrinterOptions(evt)\n    setShouldLoad(true)\n    storageInstance.setItem('printerOptions_' + context.itemId, JSON.stringify(evt)\n    ).catch(error => {\n      console.log(error)\n      setShouldLoad(false)\n    }).finally(() => {  \n      setShouldLoad(false)\n    });\n    console.log(\"handleOptions Option: \", evt)\n  }\n\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName))\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName)\n      return newListItems;\n    });\n  \n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      return newTotalCount;\n    });\n  }\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof(isChecked))\n    console.log(\"itemCount type: \", typeof(itemCount))\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    })\n\n    console.log(\"changeTotal Option: \", selectedOption)  \n  }\n\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\")\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    monday.listen(\"context\", (res) => {\n      console.log(\"useEffect storage res: \", res)\n      setContext(res.data);\n\n      // setShouldLoad(true)\n\n      storageInstance.getItem('listItems_' + res.data.itemId).then(result1 => {\n        setListItems(JSON.parse(result1.data.value) || []);  \n        return storageInstance.getItem('listItems_' + res.data.itemId)\n      }).then(result2 => {\n        setListItems(JSON.parse(result2.data.value) || []);\n        return storageInstance.getItem('totalCount_' + res.data.itemId)\n      }).then(result3 => {\n        const parsedCount = parseInt(result3.data.value)\n        setTotalCount(parsedCount || 0);\n        return storageInstance.getItem('selectedOption_'/* + res.data.itemId*/)\n      }).then(result4 => { \n        setSelectedOption(JSON.parse(result4.data.value) || []);\n        return storageInstance.getItem('printerOption_' + res.data.itemId)\n      }).then(result5 => { \n        setPrinterOptions(JSON.parse(result5.data.value) || []);\n      }).catch(error => { \n        console.log(error)\n        // setShouldLoad(false)\n      }).finally(() => { \n        // setShouldLoad(false)\n      })\n\n      // storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n      //   setListItems(JSON.parse(response.data.value) || []);  \n      // }).catch(error => {\n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // })\n\n      // storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n      //   console.log(\"Count Response: \", response.data.value)\n      //   const parsedCount = parseInt(response.data.value)\n      //   setTotalCount(parsedCount || 0);\n      // }).catch(error => { \n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // })\n\n      // storageInstance.getItem('selectedOption_'/* + res.data.itemId*/).then(response => {\n      //   console.log(\"Option Response: \", response)\n      //   setSelectedOption(JSON.parse(response.data.value) || []);\n      // }).catch(error => { \n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // })\n\n      // storageInstance.getItem('printerOption_' + res.data.itemId).then(response => {\n      //   console.log(\"Printer Response: \", response.data.value)\n      //   setPrinterOptions(JSON.parse(response.data.value) || []);\n      // }).catch(error => { \n      //   console.log(error)\n      // }).finally(() => {\n      //   setShouldLoad(false)\n      // });\n\n    });\n\n    \n  }, []);\n\n  // useEffect(() => { \n  //   console.log(\"----App.js UseEffect #2----\")\n  //   if (selectedOption && context && totalCount != null) {\n  //     console.log(\"Inner Context: \", selectedOption)\n  //     const boardId = context.boardId\n  //     console.log(\"using boardID: \", boardId)\n  //     const query = `mutation {\n  //       change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n  //         id\n  //       }\n  //     }`;\n      \n  //     monday.api(query)\n  //       .then((res) => {\n  //         console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n  //       })\n  //       .catch((err) => {\n  //         console.log(\"Error updating column: \", err);\n  //       });\n  //   }\n    \n    \n  // }, [totalCount]);\n\n  // Update listItems in the board storage when it changes\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #3----\")\n  //   if (context) {\n  //     console.log(\"Context: \", context)\n  //     setShouldLoad(true)\n  //     storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)\n  //     ).catch(error => { \n  //       console.log(error)\n  //       setShouldLoad(false)\n  //     }).finally(() => { \n  //       setShouldLoad(false)\n  //     });\n      \n  //   }\n    \n  // }, [listItems]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      setShouldLoad(true)\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)\n      ).then(result1 => { \n        return storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString())\n      }).catch(error => { \n        console.log(error)\n        // setShouldLoad(false)\n      }).finally(() => { \n        setShouldLoad(false)\n      });\n\n      // storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString()\n      // ).catch(error => { \n      //   console.log(error)\n      //   // setShouldLoad(false)\n      // }).finally(() => { \n      //   setShouldLoad(false)\n      // });\n      \n    }\n\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption)\n      const boardId = context.boardId\n      console.log(\"using boardID: \", boardId)\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      \n      monday.api(query)\n        .then((res) => {\n          console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n        })\n        .catch((err) => {\n          console.log(\"Error updating column: \", err);\n        });\n    }\n    \n  }, [listItems, totalCount]);\n\n  // Update totalCount in the board storage when it changes\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #4----\")\n  //   if (context) {\n  //     console.log(\"Context: \", context)\n  //     setShouldLoad(true)\n  //     storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString()\n  //     ).catch(error => { \n  //       console.log(error)\n  //       setShouldLoad(false)\n  //     }).finally(() => { \n  //       setShouldLoad(false)\n  //     });\n  //     // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n      \n  //   }\n    \n  // }, [totalCount]);\n\n  // Update selectedOption in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      // setShouldLoad(true)\n      storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(selectedOption)\n      ).catch(error => { \n        console.log(error)\n        // setShouldLoad(false)\n      }).finally(() => { \n        // setShouldLoad(false)\n      });\n      console.log(\"Option: \", selectedOption.value)\n    }\n    \n    \n  }, [selectedOption]);\n\n  // Update printerOptions in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      // setShouldLoad(true)\n      storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions)\n      ).catch(error => { \n        console.log(error)\n        // setShouldLoad(false)\n      }).finally(() => { \n        // setShouldLoad(false)\n      });\n      console.log(\"Option: \", printerOptions.value)\n    }\n  }, [printerOptions])\n\n\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #7----\")\n  //   if (context) {\n  //     const storedSelectedOption = storageInstance.getItem('selectedOption_'/* + context.itemId*/).then(response => {\n  //       if (response.data && response.data.value) {\n  //         const defaultSelectedOption = JSON.parse(storedSelectedOption);\n  //         handleOptionsSelection(defaultSelectedOption);\n  //       }\n  //     })\n  //     // const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n  //     // if (storedSelectedOption) {\n  //     //   // Set it as the default selected option\n  //     //   // You may need to adapt this part to match the data structure of your `Dropdown` component\n  //     //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n  //     //   handleOptionsSelection(defaultSelectedOption);\n  //     // }\n  //   }\n    \n  // }, [])\n\n\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row mt-5\">\n        <div className=\"col-12 py-3 mt-5\">\n          {context && <ListInput \n            // nameHandler={evt => updateNameValue(evt)} \n            // nameValue={nameInput}\n            // countHandler={evt => updateCountValue(evt)} \n            // countValue={countInput}\n            totalCount={totalCount} \n            dropdownHandler={evt => handleOptionsSelection(evt)}\n            printerHandler={evt => handlePrinterSelection(evt)}\n            clickFunction={handleInput}\n            resetTotalFunction={handleTotalReset}\n            parentContext={context}\n            disabledCheck={selectedOption.value !== undefined ? false : true }\n            selectedVal={selectedOption}\n            printerVal={printerOptions}\n            shouldLoad={shouldLoad}\n            >\n          </ListInput>}\n        </div>\n        <Divider></Divider>\n        <div className=\"col-12\">\n          <List items={listItems} handleDelete={handleItemDelete} parentContext={context} handleTotalCount={changeTotalCount}></List>\n        </div> \n      </div>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAO,oCAAoC;AAC3C;AACA,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,OAAO,EAAEC,MAAM,QAAQ,sBAAsB;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;AAC1BO,MAAM,CAACC,QAAQ,CAAC,qOAAqO,CAAC;AACtP,MAAMC,eAAe,GAAGF,MAAM,CAACG,OAAO,CAACC,QAAQ;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA;EACA,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC/C;EACA,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAIjE,MAAMgC,WAAW,GAAGC,UAAU,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC9CC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEjB,UAAU,CAAC;IAClC,MAAMkB,UAAU,GAAGC,QAAQ,CAACJ,KAAK,CAAC;IAElCd,aAAa,CAACmB,cAAc,IAAI;MAC9BJ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEG,cAAc,CAAC;MAC1C,OAAOD,QAAQ,CAACC,cAAc,CAAC,GAAGF,UAAU;IAC9C,CAAC,CAAC;IACF,MAAMG,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,MAAMC,WAAW,GAAGF,WAAW,CAACG,kBAAkB,CAAC,OAAO,EAAE;MAACC,SAAS,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IAC/F,MAAMC,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,MAAMC,cAAc,GAAG5B,cAAc,CAAC6B,KAAK,IAAIC,SAAS,GAAG,aAAa,GAAG9B,cAAc,CAAC6B,KAAK;IAC/F,MAAME,cAAc,GAAG,GAAG,IAAIrC,SAAS,CAACsC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAGb,WAAW,GAAG,KAAK,IAC9EF,WAAW,CAACgB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGhB,WAAW,CAACiB,OAAO,CAAC,CAAC,GAAG,GAAG,GAAGjB,WAAW,CAACkB,WAAW,CAAC,CAAC,GAAG,OAAO,GAAGP,cAAc;IACzH,MAAMQ,OAAO,GAAG;MAAEb,SAAS,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAAEU,QAAQ,EAAEN,cAAc;MAAEO,SAAS,EAAExB;IAAW,CAAC;IACvHF,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEU,SAAS,CAAC;IAC/B5B,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE0C,OAAO,CAAC,CAAC;IAIrCxB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEf,cAAc,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B1C,aAAa,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAM2C,sBAAsB,GAAIC,GAAG,IAAK;IACtC1C,iBAAiB,CAAC0C,GAAG,CAAC;IACtBpC,aAAa,CAAC,IAAI,CAAC;IACnBlB,eAAe,CAACuD,OAAO,CAAC,iBAAiB,wBAAuBC,IAAI,CAACC,SAAS,CAACH,GAAG,CAClF,CAAC,CAACI,KAAK,CAACC,KAAK,IAAI;MACflC,OAAO,CAACC,GAAG,CAACiC,KAAK,CAAC;MAClBzC,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC,CAAC0C,OAAO,CAAC,MAAM;MACf1C,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;IACFO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE4B,GAAG,CAAC;EAC5C,CAAC;EAED,MAAMO,sBAAsB,GAAIP,GAAG,IAAK;IACtCxC,iBAAiB,CAACwC,GAAG,CAAC;IACtBpC,aAAa,CAAC,IAAI,CAAC;IACnBlB,eAAe,CAACuD,OAAO,CAAC,iBAAiB,GAAGlD,OAAO,CAACyD,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACH,GAAG,CAC9E,CAAC,CAACI,KAAK,CAACC,KAAK,IAAI;MACflC,OAAO,CAACC,GAAG,CAACiC,KAAK,CAAC;MAClBzC,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC,CAAC0C,OAAO,CAAC,MAAM;MACf1C,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;IACFO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE4B,GAAG,CAAC;EAC5C,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAACb,QAAQ,EAAEC,SAAS,EAAEa,SAAS,KAAK;IAE3DxD,YAAY,CAACyD,aAAa,IAAI;MAC5B,MAAMC,YAAY,GAAGD,aAAa,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAClB,QAAQ,KAAKA,QAAQ,CAAC;MAC7Ee,aAAa,CAACI,GAAG,CAACD,IAAI,IAAI3C,OAAO,CAACC,GAAG,CAAC0C,IAAI,CAAClB,QAAQ,CAAC,CAAC;MACrD;MACAzB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEwB,QAAQ,CAAC;MAClC,OAAOgB,YAAY;IACrB,CAAC,CAAC;IAEFxD,aAAa,CAACmB,cAAc,IAAI;MAC9B,IAAIyC,aAAa;MACjB,IAAI,CAACN,SAAS,EAAE;QACdM,aAAa,GAAGzC,cAAc,GAAGD,QAAQ,CAACuB,SAAS,CAAC;MACtD,CAAC,MAAM;QACLmB,aAAa,GAAGzC,cAAc;MAChC;MACA;MACA,OAAOyC,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACP,SAAS,EAAEb,SAAS,KAAK;IACjD1B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,OAAOsC,SAAU,CAAC;IAClDvC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,OAAOyB,SAAU,CAAC;IAClDzC,aAAa,CAACmB,cAAc,IAAI;MAC9B,IAAImC,SAAS,EAAE;QACb,OAAOpC,QAAQ,CAACC,cAAc,CAAC,GAAGD,QAAQ,CAACuB,SAAS,CAAC;MACvD,CAAC,MAAM;QACL,OAAOvB,QAAQ,CAACC,cAAc,CAAC,GAAGD,QAAQ,CAACuB,SAAS,CAAC;MACvD;IACF,CAAC,CAAC;IAEF1B,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEf,cAAc,CAAC;EACrD,CAAC;EAGDrB,SAAS,CAAC,MAAM;IACdmC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C;IACA;IACA5B,MAAM,CAAC0E,OAAO,CAAC,qBAAqB,CAAC;IAErC1E,MAAM,CAAC2E,MAAM,CAAC,SAAS,EAAGC,GAAG,IAAK;MAChCjD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEgD,GAAG,CAAC;MAC3CpE,UAAU,CAACoE,GAAG,CAACC,IAAI,CAAC;;MAEpB;;MAEA3E,eAAe,CAAC4E,OAAO,CAAC,YAAY,GAAGF,GAAG,CAACC,IAAI,CAACb,MAAM,CAAC,CAACe,IAAI,CAACC,OAAO,IAAI;QACtEtE,YAAY,CAACgD,IAAI,CAACuB,KAAK,CAACD,OAAO,CAACH,IAAI,CAACK,KAAK,CAAC,IAAI,EAAE,CAAC;QAClD,OAAOhF,eAAe,CAAC4E,OAAO,CAAC,YAAY,GAAGF,GAAG,CAACC,IAAI,CAACb,MAAM,CAAC;MAChE,CAAC,CAAC,CAACe,IAAI,CAACI,OAAO,IAAI;QACjBzE,YAAY,CAACgD,IAAI,CAACuB,KAAK,CAACE,OAAO,CAACN,IAAI,CAACK,KAAK,CAAC,IAAI,EAAE,CAAC;QAClD,OAAOhF,eAAe,CAAC4E,OAAO,CAAC,aAAa,GAAGF,GAAG,CAACC,IAAI,CAACb,MAAM,CAAC;MACjE,CAAC,CAAC,CAACe,IAAI,CAACK,OAAO,IAAI;QACjB,MAAMC,WAAW,GAAGvD,QAAQ,CAACsD,OAAO,CAACP,IAAI,CAACK,KAAK,CAAC;QAChDtE,aAAa,CAACyE,WAAW,IAAI,CAAC,CAAC;QAC/B,OAAOnF,eAAe,CAAC4E,OAAO,CAAC,iBAAiB,uBAAsB,CAAC;MACzE,CAAC,CAAC,CAACC,IAAI,CAACO,OAAO,IAAI;QACjBxE,iBAAiB,CAAC4C,IAAI,CAACuB,KAAK,CAACK,OAAO,CAACT,IAAI,CAACK,KAAK,CAAC,IAAI,EAAE,CAAC;QACvD,OAAOhF,eAAe,CAAC4E,OAAO,CAAC,gBAAgB,GAAGF,GAAG,CAACC,IAAI,CAACb,MAAM,CAAC;MACpE,CAAC,CAAC,CAACe,IAAI,CAACQ,OAAO,IAAI;QACjBvE,iBAAiB,CAAC0C,IAAI,CAACuB,KAAK,CAACM,OAAO,CAACV,IAAI,CAACK,KAAK,CAAC,IAAI,EAAE,CAAC;MACzD,CAAC,CAAC,CAACtB,KAAK,CAACC,KAAK,IAAI;QAChBlC,OAAO,CAACC,GAAG,CAACiC,KAAK,CAAC;QAClB;MACF,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM;QACf;MAAA,CACD,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEF,CAAC,CAAC;EAGJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEAtE,SAAS,CAAC,MAAM;IACdmC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,IAAIrB,OAAO,EAAE;MACXoB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAErB,OAAO,CAAC;MACjCa,aAAa,CAAC,IAAI,CAAC;MACnBlB,eAAe,CAACuD,OAAO,CAAC,YAAY,GAAGlD,OAAO,CAACyD,MAAM,EAAEN,IAAI,CAACC,SAAS,CAAClD,SAAS,CAC/E,CAAC,CAACsE,IAAI,CAACC,OAAO,IAAI;QAChB,OAAO9E,eAAe,CAACuD,OAAO,CAAC,aAAa,GAAGlD,OAAO,CAACyD,MAAM,EAAErD,UAAU,CAAC8B,QAAQ,CAAC,CAAC,CAAC;MACvF,CAAC,CAAC,CAACmB,KAAK,CAACC,KAAK,IAAI;QAChBlC,OAAO,CAACC,GAAG,CAACiC,KAAK,CAAC;QAClB;MACF,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM;QACf1C,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;IAEF;;IAEA,IAAIP,cAAc,IAAIN,OAAO,IAAII,UAAU,IAAI,IAAI,EAAE;MACnDgB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEf,cAAc,CAAC;MAC9C,MAAM2E,OAAO,GAAGjF,OAAO,CAACiF,OAAO;MAC/B7D,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE4D,OAAO,CAAC;MACvC,MAAMC,KAAK,GAAI;AACrB,gDAAgDD,OAAQ,cAAajF,OAAO,CAACyD,MAAO,iBAAgBnD,cAAc,CAACqE,KAAM,cAAaxB,IAAI,CAACC,SAAS,CAAChD,UAAU,CAAE;AACjK;AACA;AACA,QAAQ;MAEFX,MAAM,CAAC0F,GAAG,CAACD,KAAK,CAAC,CACdV,IAAI,CAAEH,GAAG,IAAK;QACbjD,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEgD,GAAG,EAAE,OAAO,EAAEjE,UAAU,CAAC;MACxE,CAAC,CAAC,CACDiD,KAAK,CAAE+B,GAAG,IAAK;QACdhE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE+D,GAAG,CAAC;MAC7C,CAAC,CAAC;IACN;EAEF,CAAC,EAAE,CAAClF,SAAS,EAAEE,UAAU,CAAC,CAAC;;EAE3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACAnB,SAAS,CAAC,MAAM;IACdmC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,IAAIrB,OAAO,EAAE;MACXoB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAErB,OAAO,CAAC;MACjC;MACAL,eAAe,CAACuD,OAAO,CAAC,iBAAiB,wBAAuBC,IAAI,CAACC,SAAS,CAAC9C,cAAc,CAC7F,CAAC,CAAC+C,KAAK,CAACC,KAAK,IAAI;QACflC,OAAO,CAACC,GAAG,CAACiC,KAAK,CAAC;QAClB;MACF,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM;QACf;MAAA,CACD,CAAC;MACFnC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEf,cAAc,CAACqE,KAAK,CAAC;IAC/C;EAGF,CAAC,EAAE,CAACrE,cAAc,CAAC,CAAC;;EAEpB;EACArB,SAAS,CAAC,MAAM;IACdmC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,IAAIrB,OAAO,EAAE;MACXoB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAErB,OAAO,CAAC;MACjC;MACAL,eAAe,CAACuD,OAAO,CAAC,gBAAgB,GAAGlD,OAAO,CAACyD,MAAM,EAAEN,IAAI,CAACC,SAAS,CAAC5C,cAAc,CACxF,CAAC,CAAC6C,KAAK,CAACC,KAAK,IAAI;QACflC,OAAO,CAACC,GAAG,CAACiC,KAAK,CAAC;QAClB;MACF,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM;QACf;MAAA,CACD,CAAC;MACFnC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEb,cAAc,CAACmE,KAAK,CAAC;IAC/C;EACF,CAAC,EAAE,CAACnE,cAAc,CAAC,CAAC;;EAGpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAIA,oBACEhB,OAAA;IAAK6F,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B9F,OAAA;MAAK6F,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB9F,OAAA;QAAK6F,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9BtF,OAAO,iBAAIR,OAAA,CAACJ;QACX;QACA;QACA;QACA;QAAA;UACAgB,UAAU,EAAEA,UAAW;UACvBmF,eAAe,EAAEtC,GAAG,IAAID,sBAAsB,CAACC,GAAG,CAAE;UACpDuC,cAAc,EAAEvC,GAAG,IAAIO,sBAAsB,CAACP,GAAG,CAAE;UACnDwC,aAAa,EAAEzE,WAAY;UAC3B0E,kBAAkB,EAAE3C,gBAAiB;UACrC4C,aAAa,EAAE3F,OAAQ;UACvB4F,aAAa,EAAEtF,cAAc,CAACqE,KAAK,KAAKrC,SAAS,GAAG,KAAK,GAAG,IAAM;UAClEuD,WAAW,EAAEvF,cAAe;UAC5BwF,UAAU,EAAEtF,cAAe;UAC3BI,UAAU,EAAEA;QAAW;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACN1G,OAAA,CAACH,OAAO;QAAA0G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eACnB1G,OAAA;QAAK6F,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrB9F,OAAA,CAACL,IAAI;UAACgH,KAAK,EAAEjG,SAAU;UAACkG,YAAY,EAAE1C,gBAAiB;UAACiC,aAAa,EAAE3F,OAAQ;UAACqG,gBAAgB,EAAEnC;QAAiB;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnG,EAAA,CApXID,GAAG;AAAAwG,EAAA,GAAHxG,GAAG;AAqXT,eAAeA,GAAG;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}