{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/batchtask/batchTask/src/modules/ListInputMod.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { TextField, Button, Label, Dropdown, Loader, Divider, Dialog, DialogContentContainer, IconButton, ExpandCollapse } from \"monday-ui-react-core\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport List from \"./List\";\nimport { Info } from \"monday-ui-react-core/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nconst storageInstance = monday.storage.instance;\n\n// Helper function to validate numeric inputs\nconst isValidNumericId = id => {\n  return typeof id === 'number' && Number.isInteger(id) && id > 0;\n};\n\n// Helper function to validate column selection\nconst isValidColumnOption = (option, availableColumns) => {\n  if (!option || !option.value) return false;\n  return availableColumns.some(col => col.value === option.value);\n};\nconst ListInputMod = _ref => {\n  _s();\n  let {\n    dropdownHandler,\n    clickFunction,\n    resetTotalFunction,\n    selectedVal,\n    disabledCheck\n  } = _ref;\n  const [context, setContext] = useState();\n  console.log(\"Context from parent: \", context);\n  const [listItems, setListItems] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [totalBatches, setTotalBatches] = useState(null); // Initialize as null instead of 0\n  const [selectedOption, setSelectedOption] = useState({});\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [shouldLoad, setShouldLoad] = useState(false);\n  const [initialShouldLoad, setInitialShouldLoad] = useState(false);\n  const [colOptions, setColOptions] = useState([]);\n  const [batchesQuota, setBatchesQuota] = useState(null);\n  const countRef = useRef();\n  useEffect(() => {\n    const query = `query {\n        app_subscription {\n          plan_id\n          is_trial\n          billing_period\n          days_left\n        }\n      }`;\n    monday.api(query).then(res => {\n      console.log(\"App subscription data:\", res);\n      if (res.data.app_subscription && Object.keys(res.data.app_subscription).length > 0) {\n        console.log(\"App subscription found, setting quota to \", res.data.app_subscription.plan_id);\n        setBatchesQuota(res.data.app_subscription.plan_id);\n      } else {\n        console.log(\"No app subscription found, setting quota to 100\");\n        setBatchesQuota(100);\n      }\n    }).catch(err => {\n      console.log(\"Error fetching app subscription:\", err);\n      setBatchesQuota(100);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\");\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n    monday.listen(\"context\", res => {\n      console.log(\"useEffect storage res: \", res);\n      setContext(res.data);\n\n      // Get all storage items in parallel\n      Promise.all([storageInstance.getItem('listItems_' + res.data.itemId), storageInstance.getItem('totalCount_' + res.data.itemId), storageInstance.getItem('selectedOption_'), storageInstance.getItem('totalBatches')]).then(_ref2 => {\n        let [listItemsResult, totalCountResult, selectedOptionResult, totalBatchesResult] = _ref2;\n        setListItems(JSON.parse(listItemsResult.data.value) || []);\n        setTotalCount(parseInt(totalCountResult.data.value) || 0);\n        setSelectedOption(JSON.parse(selectedOptionResult.data.value) || []);\n        const parsedBatches = parseInt(totalBatchesResult.data.value);\n        setTotalBatches(isNaN(parsedBatches) ? 0 : parsedBatches);\n      }).catch(error => {\n        console.log(\"Error fetching storage items:\", error);\n      });\n    });\n\n    // Get initial total batches only if not already set\n    if (totalBatches === null) {\n      storageInstance.getItem('totalBatches').then(result => {\n        if (result && result.data && result.data.value) {\n          const parsedBatches = parseInt(result.data.value);\n          setTotalBatches(isNaN(parsedBatches) ? 0 : parsedBatches);\n        } else {\n          setTotalBatches(0);\n        }\n      }).catch(error => {\n        console.log(\"Error getting initial total batches:\", error);\n        setTotalBatches(0);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (context) {\n      console.log(\"Parent Context 2\", context);\n      console.log(\"Context: \", context);\n      const boardId = context.boardId;\n\n      // Validate boardId before using in query\n      if (!isValidNumericId(boardId)) {\n        console.error(\"Invalid board ID\");\n        return;\n      }\n      console.log(\"using boardID: \", boardId);\n      const query = `query {\n            boards(ids: ${boardId}) {\n                columns {\n                    id\n                    title\n                }\n            }\n            }`;\n      monday.api(query).then(res => {\n        console.log(\"ListInput res: \", res);\n        const columns = res.data.boards[0].columns;\n        console.log(\"Columns: \", columns);\n        const filter = 'numbers';\n        const cols = columns.map(column => {\n          return {\n            label: column.title,\n            value: column.id\n          };\n        });\n        console.log(\"cols: \", cols);\n        const filteredCols = cols.filter(col => col.value.includes(filter)).map(col => {\n          return {\n            label: col.label,\n            value: col.value\n          };\n        });\n        setColOptions(filteredCols);\n        storageInstance.setItem(`colOptions`, JSON.stringify(cols)).then(res => {\n          console.log(\"colOptions stored in board storage: \", res);\n        });\n      }).catch(err => {\n        console.log(\"Error fetching columns: \", err);\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n    }\n  }, [context]);\n  const handleInput = count => {\n    console.log(\"count: \", totalCount);\n    const countAsNum = parseInt(count);\n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount);\n      return parseInt(prevTotalCount) + countAsNum;\n    });\n\n    // Increment total batches counter when adding a new batch\n    setTotalBatches(prevTotalBatches => prevTotalBatches + 1);\n    const currentDate = new Date();\n    const currentTime = currentDate.toLocaleTimeString('en-US', {\n      timeStyle: 'short',\n      hour12: true\n    });\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear();\n    const newItem = {\n      uniqueKey: Math.random().toString(36).substr(2, 9),\n      itemName: itemDisplayPos,\n      itemCount: countAsNum\n    };\n    console.log(\"Key: \", uniqueKey);\n    setListItems([...listItems, newItem]);\n    console.log(\"handleInput Option: \", selectedOption);\n  };\n  const handleTotalReset = () => {\n    setTotalCount(0);\n  };\n  const handleOptionsSelection = evt => {\n    // Validate that the selected option is one of our known columns\n    if (isValidColumnOption(evt, colOptions)) {\n      setSelectedOption(evt);\n    } else {\n      console.error(\"Invalid column selection\");\n    }\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName));\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName);\n      return newListItems;\n    });\n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      return newTotalCount;\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof isChecked);\n    console.log(\"itemCount type: \", typeof itemCount);\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    });\n    console.log(\"changeTotal Option: \", selectedOption);\n  };\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      setShouldLoad(true);\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)).catch(error => {\n        console.log(error);\n        setShouldLoad(false);\n      }).finally(() => {\n        console.log(\"Loading...\");\n        setTimeout(() => {\n          setShouldLoad(false);\n        }, 1000);\n      });\n    }\n  }, [listItems]);\n  useEffect(() => {\n    if (context) {\n      // setShouldLoad(true)\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString()).catch(error => {\n        console.log(error);\n        // setShouldLoad(false)\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n    }\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption);\n      const boardId = context.boardId;\n      const itemId = context.itemId;\n\n      // Validate IDs and selected column before constructing query\n      if (!isValidNumericId(boardId) || !isValidNumericId(itemId)) {\n        console.error(\"Invalid board ID or item ID\");\n        return;\n      }\n      if (!isValidColumnOption(selectedOption, colOptions)) {\n        console.error(\"Invalid column selection\");\n        return;\n      }\n      console.log(\"using boardID: \", boardId);\n      const query = `mutation {\n              change_simple_column_value (board_id: ${boardId}, item_id: ${itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n                id\n              }\n            }`;\n      monday.api(query).then(res => {\n        console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n      }).catch(err => {\n        console.log(\"Error updating column: \", err);\n      });\n    }\n  }, [totalCount]);\n\n  // Update total batches in board storage when it changes\n  useEffect(() => {\n    if (totalBatches !== null) {\n      storageInstance.setItem('totalBatches', totalBatches.toString()).then(() => {\n        console.log(\"Successfully stored total batches:\", totalBatches);\n      }).catch(error => {\n        console.log(\"Error storing total batches:\", error);\n      });\n    }\n  }, [totalBatches]);\n\n  // Update selectedOption in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      //   setShouldLoad(true)\n      storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(selectedOption)).catch(error => {\n        console.log(error);\n        setShouldLoad(false);\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n      console.log(\"Option: \", selectedOption.value);\n    }\n  }, [selectedOption]);\n  const handleClick = () => {\n    const countVal = parseInt(countRef.current.value);\n    handleInput(countVal);\n    monday.execute(\"valueCreatedForUser\");\n  };\n  const handleDeductClick = () => {\n    const countVal = parseInt(countRef.current.value);\n    handleInput(-countVal);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [console.log(\"Loading Remount\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleTotalReset,\n          size: Button.sizes.SMALL,\n          color: Button.colors.NEGATIVE,\n          children: \"Reset Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col d-flex align-items-center justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"grey\",\n            marginBottom: 0,\n            marginRight: \"8px\"\n          },\n          children: \"Version 2.1.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          content: /*#__PURE__*/_jsxDEV(DialogContentContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Quick Start Guide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"1. Select a column to track your total.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"(Ensure this column is a number type and empty)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"2. Add or deduct batches from the input fields.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"20px\",\n                fontSize: \"12px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://rallyessentials.com/batchtask/terms-of-service/\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                style: {\n                  marginRight: \"15px\"\n                },\n                children: \"Terms of Service\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://rallyessentials.com/batchtask/privacy-policy/\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Privacy Policy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }, this),\n          hideTrigger: ['click'],\n          modifiers: [{\n            name: 'preventOverflow',\n            options: {\n              mainAxis: false\n            }\n          }],\n          position: \"left\",\n          showTrigger: ['click'],\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            active: true,\n            icon: Info,\n            kind: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter Batches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              text: totalCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(ExpandCollapse, {\n              title: \"Plan Details\",\n              className: \"monday-style-expand-collapse\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                text: `Total Batches: ${totalBatches}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 29\n              }, this), batchesQuota && /*#__PURE__*/_jsxDEV(Label, {\n                text: `Batches Quota: ${batchesQuota}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Target column\",\n              onChange: evt => handleOptionsSelection(evt),\n              options: colOptions,\n              value: selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          ref: countRef,\n          type: \"number\",\n          value: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: shouldLoad || batchesQuota && totalBatches >= batchesQuota,\n          onClick: handleClick,\n          size: Button.sizes.SMALL,\n          color: Button.colors.POSITIVE,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: shouldLoad ? true : false,\n          onClick: handleDeductClick,\n          size: Button.sizes.SMALL,\n          color: Button.colors.NEGATIVE,\n          children: \"Deduct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: shouldLoad ? /*#__PURE__*/_jsxDEV(Loader, {\n          size: Loader.sizes.SMALL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 36\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        items: listItems,\n        handleDelete: handleItemDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 9\n  }, this);\n};\n_s(ListInputMod, \"xzgpujyB4/2TcfoXhv1MmLUDFfc=\");\n_c = ListInputMod;\nexport default ListInputMod;\nvar _c;\n$RefreshReg$(_c, \"ListInputMod\");","map":{"version":3,"names":["React","TextField","Button","Label","Dropdown","Loader","Divider","Dialog","DialogContentContainer","IconButton","ExpandCollapse","mondaySdk","useState","useEffect","useRef","useMemo","List","Info","jsxDEV","_jsxDEV","monday","storageInstance","storage","instance","isValidNumericId","id","Number","isInteger","isValidColumnOption","option","availableColumns","value","some","col","ListInputMod","_ref","_s","dropdownHandler","clickFunction","resetTotalFunction","selectedVal","disabledCheck","context","setContext","console","log","listItems","setListItems","totalCount","setTotalCount","totalBatches","setTotalBatches","selectedOption","setSelectedOption","optionSelected","setOptionSelected","shouldLoad","setShouldLoad","initialShouldLoad","setInitialShouldLoad","colOptions","setColOptions","batchesQuota","setBatchesQuota","countRef","query","api","then","res","data","app_subscription","Object","keys","length","plan_id","catch","err","execute","listen","Promise","all","getItem","itemId","_ref2","listItemsResult","totalCountResult","selectedOptionResult","totalBatchesResult","JSON","parse","parseInt","parsedBatches","isNaN","error","result","boardId","columns","boards","filter","cols","map","column","label","title","filteredCols","includes","setItem","stringify","finally","handleInput","count","countAsNum","prevTotalCount","prevTotalBatches","currentDate","Date","currentTime","toLocaleTimeString","timeStyle","hour12","uniqueKey","Math","random","toString","substr","itemDisplayPos","getMonth","getDate","getFullYear","newItem","itemName","itemCount","handleTotalReset","handleOptionsSelection","evt","handleItemDelete","isChecked","prevListItems","newListItems","item","newTotalCount","changeTotalCount","setTimeout","handleClick","countVal","current","handleDeductClick","className","children","onClick","size","sizes","SMALL","color","colors","NEGATIVE","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","marginRight","content","marginTop","fontSize","href","target","rel","hideTrigger","modifiers","name","options","mainAxis","position","showTrigger","active","icon","kind","text","placeholder","onChange","ref","type","disabled","POSITIVE","items","handleDelete","_c","$RefreshReg$"],"sources":["/Users/connor/Documents/batchtask/batchTask/src/modules/ListInputMod.js"],"sourcesContent":["import React from \"react\";\nimport { TextField, Button, Label, Dropdown, Loader, Divider, Dialog, DialogContentContainer, IconButton, ExpandCollapse } from \"monday-ui-react-core\"\nimport mondaySdk from \"monday-sdk-js\";\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport List from \"./List\"\nimport { Info } from \"monday-ui-react-core/icons\";\n\nconst monday = mondaySdk();\nconst storageInstance = monday.storage.instance;\n\n// Helper function to validate numeric inputs\nconst isValidNumericId = (id) => {\n  return typeof id === 'number' && Number.isInteger(id) && id > 0;\n};\n\n// Helper function to validate column selection\nconst isValidColumnOption = (option, availableColumns) => {\n  if (!option || !option.value) return false;\n  return availableColumns.some(col => col.value === option.value);\n};\n\nconst ListInputMod = ({dropdownHandler, clickFunction, resetTotalFunction, selectedVal, disabledCheck}) => {\n    const [context, setContext] = useState()\n    console.log(\"Context from parent: \", context)\n    const [listItems, setListItems] = useState([]);\n    const [totalCount, setTotalCount] = useState(0);\n    const [totalBatches, setTotalBatches] = useState(null); // Initialize as null instead of 0\n    const [selectedOption, setSelectedOption] = useState({}); \n    const [optionSelected, setOptionSelected] = useState(false);\n    const [shouldLoad, setShouldLoad] = useState(false);\n    const [initialShouldLoad, setInitialShouldLoad] = useState(false);\n    const [colOptions, setColOptions] = useState([])\n    const [batchesQuota, setBatchesQuota] = useState(null);\n    const countRef = useRef();\n    \n    useEffect(() => {\n      const query = `query {\n        app_subscription {\n          plan_id\n          is_trial\n          billing_period\n          days_left\n        }\n      }`;\n\n      monday.api(query)\n        .then(res => {\n          console.log(\"App subscription data:\", res);\n          if (res.data.app_subscription && Object.keys(res.data.app_subscription).length > 0) {\n            console.log(\"App subscription found, setting quota to \", res.data.app_subscription.plan_id)\n            setBatchesQuota(res.data.app_subscription.plan_id);\n          } else {\n            console.log(\"No app subscription found, setting quota to 100\")\n            setBatchesQuota(100);\n          }\n        })\n        .catch(err => {\n          console.log(\"Error fetching app subscription:\", err);\n          setBatchesQuota(100);\n        });\n    }, []);\n    \n    useEffect(() => {\n        console.log(\"----App.js UseEffect #1----\")\n        // Notice this method notifies the monday platform that user gains a first value in an app.\n        // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n        monday.execute(\"valueCreatedForUser\");\n    \n        monday.listen(\"context\", (res) => {\n          console.log(\"useEffect storage res: \", res)\n          setContext(res.data);\n    \n          // Get all storage items in parallel\n          Promise.all([\n            storageInstance.getItem('listItems_' + res.data.itemId),\n            storageInstance.getItem('totalCount_' + res.data.itemId),\n            storageInstance.getItem('selectedOption_'),\n            storageInstance.getItem('totalBatches')\n          ]).then(([listItemsResult, totalCountResult, selectedOptionResult, totalBatchesResult]) => {\n            setListItems(JSON.parse(listItemsResult.data.value) || []);\n            setTotalCount(parseInt(totalCountResult.data.value) || 0);\n            setSelectedOption(JSON.parse(selectedOptionResult.data.value) || []);\n            const parsedBatches = parseInt(totalBatchesResult.data.value);\n            setTotalBatches(isNaN(parsedBatches) ? 0 : parsedBatches);\n          }).catch(error => {\n            console.log(\"Error fetching storage items:\", error);\n          });\n        });\n        \n        // Get initial total batches only if not already set\n        if (totalBatches === null) {\n          storageInstance.getItem('totalBatches')\n            .then(result => {\n              if (result && result.data && result.data.value) {\n                const parsedBatches = parseInt(result.data.value);\n                setTotalBatches(isNaN(parsedBatches) ? 0 : parsedBatches);\n              } else {\n                setTotalBatches(0);\n              }\n            })\n            .catch(error => {\n              console.log(\"Error getting initial total batches:\", error);\n              setTotalBatches(0);\n            });\n        }\n        \n      }, []);\n\n      useEffect(() => {\n        if (context) {\n          console.log(\"Parent Context 2\", context)\n\n            console.log(\"Context: \", context)\n            const boardId = context.boardId;\n            \n            // Validate boardId before using in query\n            if (!isValidNumericId(boardId)) {\n              console.error(\"Invalid board ID\");\n              return;\n            }\n            \n            console.log(\"using boardID: \", boardId)\n            \n            const query = `query {\n            boards(ids: ${boardId}) {\n                columns {\n                    id\n                    title\n                }\n            }\n            }`;\n            monday.api(query).then((res) => {\n                console.log(\"ListInput res: \", res);\n                const columns = res.data.boards[0].columns;\n                console.log(\"Columns: \", columns);\n                const filter = 'numbers'\n                const cols = columns.map(column => {                      \n                    return {label: column.title, value: column.id}\n                })\n                console.log(\"cols: \", cols)\n                const filteredCols = cols\n                .filter(col => col.value.includes(filter))\n                .map(col => {\n                    return {label: col.label, value: col.value}\n                })\n                setColOptions(filteredCols)\n                storageInstance.setItem(`colOptions`, JSON.stringify(cols)).then((res) => {\n                    console.log(\"colOptions stored in board storage: \", res);\n                })\n            }).catch((err) => {\n                console.log(\"Error fetching columns: \", err);\n            }).finally(() => {\n                // setShouldLoad(false)\n            });\n        }\n        \n      }, [context])\n\n\n    const handleInput = (count) => {\n        console.log(\"count: \", totalCount)\n        const countAsNum = parseInt(count)\n        \n        setTotalCount(prevTotalCount => {\n          console.log(\"new total: \", prevTotalCount)\n          return parseInt(prevTotalCount) + countAsNum \n        })\n\n        // Increment total batches counter when adding a new batch\n        setTotalBatches(prevTotalBatches => prevTotalBatches + 1);\n\n        const currentDate = new Date()\n        const currentTime = currentDate.toLocaleTimeString('en-US', {timeStyle: 'short', hour12: true})\n        const uniqueKey = Math.random().toString(36).substr(2, 9);\n        const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + \n          (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear()\n        const newItem = { uniqueKey: Math.random().toString(36).substr(2, 9), itemName: itemDisplayPos, itemCount: countAsNum };\n        console.log(\"Key: \", uniqueKey)\n        setListItems([...listItems, newItem])\n        \n        console.log(\"handleInput Option: \", selectedOption)\n      }\n    \n      const handleTotalReset = () => {\n        setTotalCount(0)\n      }\n    \n      const handleOptionsSelection = (evt) => {\n        // Validate that the selected option is one of our known columns\n        if (isValidColumnOption(evt, colOptions)) {\n          setSelectedOption(evt);\n        } else {\n          console.error(\"Invalid column selection\");\n        }\n      }\n    \n      const handleItemDelete = (itemName, itemCount, isChecked) => {\n    \n        setListItems(prevListItems => {\n          const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n          prevListItems.map(item => console.log(item.itemName))\n          // Update localStorage to store the new list items\n          console.log(\"New Items\", itemName)\n          return newListItems;\n        });\n      \n        setTotalCount(prevTotalCount => {\n          let newTotalCount;\n          if (!isChecked) {\n            newTotalCount = prevTotalCount - parseInt(itemCount);\n          } else {\n            newTotalCount = prevTotalCount;\n          }\n          // Update localStorage to store the new total count\n          return newTotalCount;\n        });\n      }\n    \n      const changeTotalCount = (isChecked, itemCount) => {\n        console.log(\"isChecked type: \", typeof(isChecked))\n        console.log(\"itemCount type: \", typeof(itemCount))\n        setTotalCount(prevTotalCount => {\n          if (isChecked) {\n            return parseInt(prevTotalCount) - parseInt(itemCount);\n          } else {\n            return parseInt(prevTotalCount) + parseInt(itemCount);\n          }\n        })\n    \n        console.log(\"changeTotal Option: \", selectedOption)  \n      }\n    \n      useEffect(() => {\n        console.log(\"----App.js UseEffect #3----\")\n        if (context) {\n          console.log(\"Context: \", context)\n          setShouldLoad(true)\n          storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)\n          ).catch(error => { \n            console.log(error)\n            setShouldLoad(false)\n          }).finally(() => { \n            console.log(\"Loading...\")\n            setTimeout(() => {\n                setShouldLoad(false)\n            }, 1000)\n          });\n          \n        }\n    \n        \n        \n      }, [listItems]);\n\n      useEffect(() => {\n        if (context) {\n            // setShouldLoad(true)\n            storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString())\n            .catch(error => { \n                console.log(error)\n                // setShouldLoad(false)\n            }).finally(() => { \n                // setShouldLoad(false)\n            });\n        }\n\n        if (selectedOption && context && totalCount != null) {\n            console.log(\"Inner Context: \", selectedOption)\n            const boardId = context.boardId;\n            const itemId = context.itemId;\n            \n            // Validate IDs and selected column before constructing query\n            if (!isValidNumericId(boardId) || !isValidNumericId(itemId)) {\n              console.error(\"Invalid board ID or item ID\");\n              return;\n            }\n\n            if (!isValidColumnOption(selectedOption, colOptions)) {\n              console.error(\"Invalid column selection\");\n              return;\n            }\n\n            console.log(\"using boardID: \", boardId)\n            const query = `mutation {\n              change_simple_column_value (board_id: ${boardId}, item_id: ${itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n                id\n              }\n            }`;\n            \n            monday.api(query)\n              .then((res) => {\n                console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n              })\n              .catch((err) => {\n                console.log(\"Error updating column: \", err);\n              });\n          }\n      }, [totalCount])\n\n      // Update total batches in board storage when it changes\n      useEffect(() => {\n        if (totalBatches !== null) {\n          storageInstance.setItem('totalBatches', totalBatches.toString())\n            .then(() => {\n              console.log(\"Successfully stored total batches:\", totalBatches);\n            })\n            .catch(error => {\n              console.log(\"Error storing total batches:\", error);\n            });\n        }\n      }, [totalBatches]);\n    \n      // Update selectedOption in the board storage when it changes\n      useEffect(() => {\n        console.log(\"----App.js UseEffect #5----\")\n        if (context) {\n          console.log(\"Context: \", context)\n        //   setShouldLoad(true)\n          storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(selectedOption)\n          ).catch(error => { \n            console.log(error)\n            setShouldLoad(false)\n          }).finally(() => { \n            // setShouldLoad(false)\n          });\n          console.log(\"Option: \", selectedOption.value)\n        }\n        \n        \n      }, [selectedOption]);\n\n    const handleClick = () => {\n        const countVal = parseInt(countRef.current.value)\n        handleInput(countVal)\n        monday.execute(\"valueCreatedForUser\");\n    }\n\n    const handleDeductClick = () => {\n        const countVal = parseInt(countRef.current.value)\n        handleInput(-countVal)\n    }\n\n    return (\n        <div className=\"container\">\n            {console.log(\"Loading Remount\")}\n            <div className=\"row pb-3\">\n                <div className=\"col\">\n                    <Button onClick={handleTotalReset} size={Button.sizes.SMALL} color={Button.colors.NEGATIVE}>Reset Total</Button>\n                </div>\n                <div className=\"col d-flex align-items-center justify-content-end\">\n                    <p style={{color: \"grey\", marginBottom: 0, marginRight: \"8px\"}}>Version 2.1.1</p>\n                    <Dialog\n                        content={\n                            <DialogContentContainer>\n                                <h5>Quick Start Guide</h5>\n                                <p>1. Select a column to track your total.</p>\n                                <p>(Ensure this column is a number type and empty)</p>\n                                <p>2. Add or deduct batches from the input fields.</p>\n                                <div style={{marginTop: \"20px\", fontSize: \"12px\"}}>\n                                    <a href=\"https://rallyessentials.com/batchtask/terms-of-service/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{marginRight: \"15px\"}}>Terms of Service</a>\n                                    <a href=\"https://rallyessentials.com/batchtask/privacy-policy/\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>\n                                </div>\n                            </DialogContentContainer>\n                        }\n                        hideTrigger={['click']}\n                        modifiers={[\n                            {\n                                name: 'preventOverflow',\n                                options: {\n                                    mainAxis: false\n                                }\n                            }\n                        ]}\n                        position=\"left\"\n                        showTrigger={['click']}\n                    >\n                        <IconButton\n                            active\n                            icon={Info}\n                            kind=\"secondary\"\n                        />\n                    </Dialog>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <h4>Enter Batches</h4>\n                </div>  \n                <div className=\"col-3\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Label text={totalCount}></Label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                          <ExpandCollapse\n                            title=\"Plan Details\"\n                            className=\"monday-style-expand-collapse\"\n                          >\n                            <Label text={`Total Batches: ${totalBatches}`} />\n                            {batchesQuota && <Label text={`Batches Quota: ${batchesQuota}`} />}\n                          </ExpandCollapse>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                          <Dropdown placeholder=\"Target column\" onChange={evt => handleOptionsSelection(evt)} options={colOptions} value={selectedOption}></Dropdown>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div className=\"row pt-4\">\n                <div className=\"col-4\">\n                    <TextField ref={countRef} type=\"number\" value=\"0\" />  \n                </div>\n                <div className=\"col\">\n                    <Button disabled={shouldLoad || (batchesQuota && totalBatches >= batchesQuota)} onClick={handleClick} size={Button.sizes.SMALL} color={Button.colors.POSITIVE}>Add</Button>\n                </div>\n                <div className=\"col\">\n                    <Button disabled={shouldLoad ? true : false} onClick={handleDeductClick} size={Button.sizes.SMALL} color={Button.colors.NEGATIVE}>Deduct</Button>\n                </div>\n                <div className=\"col-1\">\n                    { shouldLoad ? <Loader size={Loader.sizes.SMALL}></Loader> : null }\n                </div>\n            </div>\n            <Divider></Divider>\n            <div className=\"col-12\">\n                <List items={listItems} handleDelete={handleItemDelete}></List>\n            </div> \n        </div>\n    );\n}\n\nexport default ListInputMod"],"mappings":"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"},"metadata":{},"sourceType":"module"}