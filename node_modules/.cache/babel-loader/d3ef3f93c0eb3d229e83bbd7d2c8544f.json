{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/pages/BatchTask.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"../modules/List.js\";\nimport ListInput from \"../modules/ListInput.js\";\nimport { Divider, Label } from \"monday-ui-react-core\";\nimport { Link, useNavigate, useHistory } from \"react-router-dom\";\nimport { useData } from '../modules/DataContext';\nimport { useDispatch } from 'react-redux';\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n// monday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\nconst BatchTask = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  // const [nameInput, setNameInput] = useState(\"\")\n  // const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({});\n  const [printerOptions, setPrinterOptions] = useState({});\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [totalBatches, setTotalBatches] = useState();\n  const [shouldUpdate, setShouldUpdate] = useState(false);\n  // const {totalBatches, setTotalBatches} = useData();\n  const channel = new BroadcastChannel('monday_app_channel');\n  const handleInput = (name, count) => {\n    console.log(\"count: \", totalCount);\n    const countAsNum = parseInt(count);\n    // const newTotalCount = totalCount + countAsNum\n\n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount);\n      return parseInt(prevTotalCount) + countAsNum;\n    });\n    const currentDate = new Date();\n    const currentTime = currentDate.toLocaleTimeString('en-US', {\n      timeStyle: 'short',\n      hour12: true\n    });\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear();\n    const newItem = {\n      uniqueKey: Math.random().toString(36).substr(2, 9),\n      itemName: itemDisplayPos,\n      itemCount: countAsNum\n    };\n    console.log(\"Key: \", uniqueKey);\n    setListItems([...listItems, newItem]);\n    setTotalBatches(prevTotalItems => {\n      return prevTotalItems + 1;\n    });\n    channel.postMessage({\n      updatedData: 1\n    });\n    console.log(\"BatchTask totalBatches: \", totalBatches);\n\n    // setListItems([...listItems, <ListItem key={uniqueKey} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n    // setNameInput(\"\")\n    // setCountInput()\n    console.log(\"handleInput Option: \", selectedOption);\n  };\n  const handleTotalReset = () => {\n    setTotalCount(0);\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n    storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(evt));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handlePrinterSelection = evt => {\n    setPrinterOptions(evt);\n    storageInstance.setItem('printerOptions_' + context.itemId, JSON.stringify(evt));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName));\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName);\n      // storageInstance.setItem('listItems', JSON.stringify(newListItems));  -- NEWEST\n      // localStorage.setItem('listItems', JSON.stringify(newListItems));\n      return newListItems;\n    });\n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      // storageInstance.setItem('totalCount', newTotalCount); -- NEWEST\n      // localStorage.setItem('totalCount', newTotalCount);\n      return newTotalCount;\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof isChecked);\n    console.log(\"itemCount type: \", typeof itemCount);\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    });\n    // setTimeout(() => {}, 2000)\n\n    console.log(\"changeTotal Option: \", selectedOption);\n  };\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\");\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n    monday.listen(\"context\", res => {\n      console.log(\"useEffect storage res: \", res);\n      setContext(res.data);\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        // console.log(\"Item Response: \", response)\n        setListItems(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        console.log(\"Count Response: \", response.data.value);\n        const parsedCount = parseInt(response.data.value);\n        setTotalCount(parsedCount || 0);\n      });\n      storageInstance.getItem('selectedOption_' /* + res.data.itemId*/).then(response => {\n        console.log(\"Option Response: \", response);\n        setSelectedOption(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('printerOption_' + res.data.itemId).then(response => {\n        console.log(\"Printer Response: \", response.data.value);\n        setPrinterOptions(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalBatches_').then(response => {\n        console.log(\"Total Batches Response res: \", response);\n        console.log(\"Total Batches Response: \", response.data.value);\n        setTotalBatches(JSON.parse(response.data.value));\n      });\n    });\n  }, [/*listItems, colOptions*/]);\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #2----\");\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption);\n      const boardId = context.boardId;\n      console.log(\"using boardID: \", boardId);\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      monday.api(query).then(res => {\n        console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n      }).catch(err => {\n        console.log(\"Error updating column: \", err);\n      });\n    }\n  }, [totalCount /*, selectedOption,context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n  }, [listItems /*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #4----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n      // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n  }, [totalCount /*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(selectedOption));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value);\n    }\n  }, [selectedOption /*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", printerOptions.value);\n    }\n  }, [printerOptions]);\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #7----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('totalBatches_', JSON.stringify(totalBatches));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n\n    console.log(\"Total Batches: \", totalBatches);\n  }, [totalBatches]);\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #8----\");\n    if (context) {\n      const storedSelectedOption = storageInstance.getItem('selectedOption_' /* + context.itemId*/).then(response => {\n        if (response.data && response.data.value) {\n          const defaultSelectedOption = JSON.parse(storedSelectedOption);\n          handleOptionsSelection(defaultSelectedOption);\n        }\n      });\n      // const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n      // if (storedSelectedOption) {\n      //   // Set it as the default selected option\n      //   // You may need to adapt this part to match the data structure of your `Dropdown` component\n      //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n      //   handleOptionsSelection(defaultSelectedOption);\n      // }\n    }\n  }, []);\n  const testSub = () => {\n    // const query = \"query { app_subscription { billing_period days_left is_trial plan_id renewal_date } }\";\n    const query = \"query { app_subscription { plan_id } }\";\n    monday.api(query).then(res => {\n      console.log(\"Subscription: \", res);\n    }).catch(err => {\n      console.log(\"Error finding subscription: \", err);\n    });\n  };\n  testSub();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3 mt-5\",\n        children: context && /*#__PURE__*/_jsxDEV(ListInput\n        // nameHandler={evt => updateNameValue(evt)} \n        // nameValue={nameInput}\n        // countHandler={evt => updateCountValue(evt)} \n        // countValue={countInput}\n        , {\n          totalCount: totalCount,\n          dropdownHandler: evt => handleOptionsSelection(evt),\n          printerHandler: evt => handlePrinterSelection(evt),\n          clickFunction: handleInput,\n          resetTotalFunction: handleTotalReset,\n          parentContext: context,\n          disabledCheck: selectedOption.value !== undefined ? false : true,\n          selectedVal: selectedOption,\n          printerVal: printerOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), context && context.user.isViewOnly ? /*#__PURE__*/_jsxDEV(Label, {\n        color: \"negative\",\n        text: \"As a viewer, you are unable to use this app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 47\n      }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: context && /*#__PURE__*/_jsxDEV(List, {\n          items: listItems,\n          handleDelete: handleItemDelete,\n          parentContext: context,\n          handleTotalCount: changeTotalCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(BatchTask, \"eE8Q82t5WlCtVaJZ3J5Tkhb0fbk=\");\n_c = BatchTask;\nexport default BatchTask;\nvar _c;\n$RefreshReg$(_c, \"BatchTask\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","List","ListInput","Divider","Label","Link","useNavigate","useHistory","useData","useDispatch","jsxDEV","_jsxDEV","monday","storageInstance","storage","instance","BatchTask","_s","context","setContext","listItems","setListItems","totalCount","setTotalCount","selectedOption","setSelectedOption","printerOptions","setPrinterOptions","optionSelected","setOptionSelected","totalBatches","setTotalBatches","shouldUpdate","setShouldUpdate","channel","BroadcastChannel","handleInput","name","count","console","log","countAsNum","parseInt","prevTotalCount","currentDate","Date","currentTime","toLocaleTimeString","timeStyle","hour12","uniqueKey","Math","random","toString","substr","itemDisplayPos","length","getMonth","getDate","getFullYear","newItem","itemName","itemCount","prevTotalItems","postMessage","updatedData","handleTotalReset","handleOptionsSelection","evt","setItem","JSON","stringify","handlePrinterSelection","itemId","handleItemDelete","isChecked","prevListItems","newListItems","filter","item","map","newTotalCount","changeTotalCount","execute","listen","res","data","getItem","then","response","parse","value","parsedCount","boardId","query","api","catch","err","storedSelectedOption","defaultSelectedOption","testSub","className","children","dropdownHandler","printerHandler","clickFunction","resetTotalFunction","parentContext","disabledCheck","undefined","selectedVal","printerVal","fileName","_jsxFileName","lineNumber","columnNumber","user","isViewOnly","color","text","items","handleDelete","handleTotalCount","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/pages/BatchTask.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"../modules/List.js\"\nimport ListInput from \"../modules/ListInput.js\";\nimport { Divider, Label } from \"monday-ui-react-core\"\nimport {Link , useNavigate, useHistory } from \"react-router-dom\";\nimport { useData } from '../modules/DataContext';\nimport { useDispatch } from 'react-redux'\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\n// monday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\n\nconst BatchTask = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  // const [nameInput, setNameInput] = useState(\"\")\n  // const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({}); \n  const [printerOptions, setPrinterOptions] = useState({})\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [totalBatches, setTotalBatches] = useState();\n  const [shouldUpdate, setShouldUpdate] = useState(false);\n  // const {totalBatches, setTotalBatches} = useData();\n  const channel = new BroadcastChannel('monday_app_channel');\n\n  \n\n  const handleInput = (name, count) => {\n    console.log(\"count: \", totalCount)\n    const countAsNum = parseInt(count)\n    // const newTotalCount = totalCount + countAsNum\n    \n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount)\n      return parseInt(prevTotalCount) + countAsNum \n    })\n    const currentDate = new Date()\n    const currentTime = currentDate.toLocaleTimeString('en-US', {timeStyle: 'short', hour12: true})\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + \n      (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear()\n    const newItem = { uniqueKey: Math.random().toString(36).substr(2, 9), itemName: itemDisplayPos, itemCount: countAsNum };\n    console.log(\"Key: \", uniqueKey)\n    setListItems([...listItems, newItem])\n    setTotalBatches(prevTotalItems => {\n      return prevTotalItems + 1\n    })\n    channel.postMessage({ updatedData: 1 });\n    console.log(\"BatchTask totalBatches: \", totalBatches)\n    \n    // setListItems([...listItems, <ListItem key={uniqueKey} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n    // setNameInput(\"\")\n    // setCountInput()\n    console.log(\"handleInput Option: \", selectedOption)\n  }\n\n  const handleTotalReset = () => {\n    setTotalCount(0)\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt) \n    storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(evt));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt) \n  }\n\n  const handlePrinterSelection = (evt) => {\n    setPrinterOptions(evt)\n    storageInstance.setItem('printerOptions_' + context.itemId, JSON.stringify(evt));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt)\n  }\n\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName))\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName)\n      // storageInstance.setItem('listItems', JSON.stringify(newListItems));  -- NEWEST\n      // localStorage.setItem('listItems', JSON.stringify(newListItems));\n      return newListItems;\n    });\n  \n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      // storageInstance.setItem('totalCount', newTotalCount); -- NEWEST\n      // localStorage.setItem('totalCount', newTotalCount);\n      return newTotalCount;\n    });\n  }\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof(isChecked))\n    console.log(\"itemCount type: \", typeof(itemCount))\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    })\n    // setTimeout(() => {}, 2000)\n\n    console.log(\"changeTotal Option: \", selectedOption)  \n  }\n\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\")\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    monday.listen(\"context\", (res) => {\n      console.log(\"useEffect storage res: \", res)\n      setContext(res.data);\n\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        // console.log(\"Item Response: \", response)\n        setListItems(JSON.parse(response.data.value) || []);  \n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        console.log(\"Count Response: \", response.data.value)\n        const parsedCount = parseInt(response.data.value)\n        setTotalCount(parsedCount || 0);\n      });\n      storageInstance.getItem('selectedOption_'/* + res.data.itemId*/).then(response => {\n        console.log(\"Option Response: \", response)\n        setSelectedOption(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('printerOption_' + res.data.itemId).then(response => {\n        console.log(\"Printer Response: \", response.data.value)\n        setPrinterOptions(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalBatches_').then(response => { \n        console.log(\"Total Batches Response res: \", response)\n        console.log(\"Total Batches Response: \", response.data.value)\n        setTotalBatches(JSON.parse(response.data.value));\n      });\n    });\n\n    \n  }, [/*listItems, colOptions*/]);\n\n  useEffect(() => { \n    console.log(\"----App.js UseEffect #2----\")\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption)\n      const boardId = context.boardId\n      console.log(\"using boardID: \", boardId)\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      \n      monday.api(query)\n        .then((res) => {\n          console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n        })\n        .catch((err) => {\n          console.log(\"Error updating column: \", err);\n        });\n    }\n  }, [totalCount/*, selectedOption,context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n    \n  }, [listItems/*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #4----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n      // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n    \n  }, [totalCount/*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(selectedOption));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value)\n    }\n    \n    \n  }, [selectedOption/*, context*/]);\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", printerOptions.value)\n    }\n  }, [printerOptions])\n\n  useEffect(() => {\n    \n    console.log(\"----App.js UseEffect #7----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('totalBatches_', JSON.stringify(totalBatches));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n      \n    }\n    console.log(\"Total Batches: \", totalBatches)\n  }, [totalBatches])\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #8----\")\n    if (context) {\n      const storedSelectedOption = storageInstance.getItem('selectedOption_'/* + context.itemId*/).then(response => {\n        if (response.data && response.data.value) {\n          const defaultSelectedOption = JSON.parse(storedSelectedOption);\n          handleOptionsSelection(defaultSelectedOption);\n        }\n      })\n      // const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n      // if (storedSelectedOption) {\n      //   // Set it as the default selected option\n      //   // You may need to adapt this part to match the data structure of your `Dropdown` component\n      //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n      //   handleOptionsSelection(defaultSelectedOption);\n      // }\n    }\n    \n  }, [])\n\n  const testSub = () => {\n\n    // const query = \"query { app_subscription { billing_period days_left is_trial plan_id renewal_date } }\";\n    const query = \"query { app_subscription { plan_id } }\";\n    monday.api(query)\n    .then((res) => {\n      console.log(\"Subscription: \", res);\n    })\n    .catch((err) => {\n      console.log(\"Error finding subscription: \", err);\n    });\n    \n  }\n\n  testSub()\n\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row mt-5\">\n        <div className=\"col-12 py-3 mt-5\">\n          {context && <ListInput \n            // nameHandler={evt => updateNameValue(evt)} \n            // nameValue={nameInput}\n            // countHandler={evt => updateCountValue(evt)} \n            // countValue={countInput}\n            totalCount={totalCount} \n            dropdownHandler={evt => handleOptionsSelection(evt)}\n            printerHandler={evt => handlePrinterSelection(evt)}\n            clickFunction={handleInput}\n            resetTotalFunction={handleTotalReset}\n            parentContext={context}\n            disabledCheck={selectedOption.value !== undefined ? false : true }\n            selectedVal={selectedOption}\n            printerVal={printerOptions}>\n          </ListInput>}\n        </div>\n        {context && context.user.isViewOnly ? <Label color=\"negative\" text=\"As a viewer, you are unable to use this app\"></Label> : null}\n        <Divider></Divider>\n        <div className=\"col-12\">\n          \n          {context && <List items={listItems} handleDelete={handleItemDelete} parentContext={context} handleTotalCount={changeTotalCount}></List>}\n        </div> \n      </div>\n    </div>\n  );\n};\nexport default BatchTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}