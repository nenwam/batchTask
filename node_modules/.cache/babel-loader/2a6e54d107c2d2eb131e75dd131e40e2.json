{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _require = require(\"./../constants.js\"),\n  MONDAY_API_URL = _require.MONDAY_API_URL,\n  MONDAY_OAUTH_TOKEN_URL = _require.MONDAY_OAUTH_TOKEN_URL;\nvar fetch = require(\"./fetch\");\nvar COULD_NOT_PARSE_JSON_RESPONSE_ERROR = \"Could not parse JSON from monday.com's GraphQL API response\";\nvar TOKEN_IS_REQUIRED_ERROR = \"Token is required\";\nvar API_TIMEOUT_ERROR = \"Received timeout from monday.com's GraphQL API\";\nfunction apiRequest(url, data, token) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return fetch.nodeFetch(url, {\n    method: options.method || \"POST\",\n    body: JSON.stringify(data || {}),\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\nfunction execute(_x, _x2) {\n  return _execute.apply(this, arguments);\n}\nfunction _execute() {\n  _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, token) {\n    var options,\n      url,\n      path,\n      fullUrl,\n      response,\n      responseStatusCode,\n      responseContentType,\n      responseText,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            if (!(!token && options.url !== MONDAY_OAUTH_TOKEN_URL)) {\n              _context.next = 3;\n              break;\n            }\n            throw new Error(TOKEN_IS_REQUIRED_ERROR);\n          case 3:\n            url = options.url || MONDAY_API_URL;\n            path = options.path || \"\";\n            fullUrl = \"\".concat(url).concat(path);\n            _context.next = 8;\n            return apiRequest(fullUrl, data, token, options);\n          case 8:\n            response = _context.sent;\n            responseStatusCode = response.status;\n            responseContentType = response.headers.get(\"content-type\");\n            if (!(!responseContentType || !responseContentType.includes(\"application/json\"))) {\n              _context.next = 18;\n              break;\n            }\n            if (!(responseStatusCode === 504)) {\n              _context.next = 14;\n              break;\n            }\n            throw new Error(API_TIMEOUT_ERROR);\n          case 14:\n            _context.next = 16;\n            return response.text();\n          case 16:\n            responseText = _context.sent;\n            throw new Error(responseText);\n          case 18:\n            _context.prev = 18;\n            _context.next = 21;\n            return response.json();\n          case 21:\n            return _context.abrupt(\"return\", _context.sent);\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](18);\n            throw new Error(COULD_NOT_PARSE_JSON_RESPONSE_ERROR);\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[18, 24]]);\n  }));\n  return _execute.apply(this, arguments);\n}\nmodule.exports = {\n  execute: execute,\n  COULD_NOT_PARSE_JSON_RESPONSE_ERROR: COULD_NOT_PARSE_JSON_RESPONSE_ERROR,\n  TOKEN_IS_REQUIRED_ERROR: TOKEN_IS_REQUIRED_ERROR,\n  API_TIMEOUT_ERROR: API_TIMEOUT_ERROR\n};","map":{"version":3,"names":["_require","require","MONDAY_API_URL","MONDAY_OAUTH_TOKEN_URL","fetch","COULD_NOT_PARSE_JSON_RESPONSE_ERROR","TOKEN_IS_REQUIRED_ERROR","API_TIMEOUT_ERROR","apiRequest","url","data","token","options","arguments","length","undefined","nodeFetch","method","body","JSON","stringify","headers","Authorization","execute","_x","_x2","_execute","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","path","fullUrl","response","responseStatusCode","responseContentType","responseText","_args","wrap","_callee$","_context","prev","next","Error","concat","sent","status","get","includes","text","json","abrupt","t0","stop","module","exports"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/node_modules/monday-sdk-js/src/monday-api-client/monday-api-client.js"],"sourcesContent":["const { MONDAY_API_URL, MONDAY_OAUTH_TOKEN_URL } = require(\"./../constants.js\");\nconst fetch = require(\"./fetch\");\n\nconst COULD_NOT_PARSE_JSON_RESPONSE_ERROR = \"Could not parse JSON from monday.com's GraphQL API response\";\nconst TOKEN_IS_REQUIRED_ERROR = \"Token is required\";\nconst API_TIMEOUT_ERROR = \"Received timeout from monday.com's GraphQL API\";\n\nfunction apiRequest(url, data, token, options = {}) {\n  return fetch.nodeFetch(url, {\n    method: options.method || \"POST\",\n    body: JSON.stringify(data || {}),\n    headers: {\n      Authorization: token,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n}\n\nasync function execute(data, token, options = {}) {\n  if (!token && options.url !== MONDAY_OAUTH_TOKEN_URL) throw new Error(TOKEN_IS_REQUIRED_ERROR);\n\n  const url = options.url || MONDAY_API_URL;\n  const path = options.path || \"\";\n  const fullUrl = `${url}${path}`;\n  let response = await apiRequest(fullUrl, data, token, options);\n\n  const responseStatusCode = response.status;\n  const responseContentType = response.headers.get(\"content-type\");\n  if (!responseContentType || !responseContentType.includes(\"application/json\")) {\n    if (responseStatusCode === 504) {\n      throw new Error(API_TIMEOUT_ERROR);\n    }\n\n    const responseText = await response.text();\n    throw new Error(responseText);\n  }\n\n  try {\n    return await response.json();\n  } catch (err) {\n    throw new Error(COULD_NOT_PARSE_JSON_RESPONSE_ERROR);\n  }\n}\n\nmodule.exports = { execute, COULD_NOT_PARSE_JSON_RESPONSE_ERROR, TOKEN_IS_REQUIRED_ERROR, API_TIMEOUT_ERROR };\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}