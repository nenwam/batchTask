{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\";\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box, Divider } from \"monday-ui-react-core\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [countInput, setCountInput] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput));\n    setListItems([...listItems, /*#__PURE__*/_jsxDEV(ListItem, {\n      itemName: nameInput,\n      itemCount: countInput,\n      handleTotalCount: changeTotalCount\n    }, nameInput, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }, this)]);\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    });\n  };\n  const updateNameValue = evt => {\n    setNameInput(evt);\n    const boardId = context.boardId;\n    console.log(context);\n    const query = `query {\n      boards(ids: ${boardId}) {\n        columns {\n          id\n          title\n        }\n      }\n    }`;\n    monday.api(query).then(res => {\n      const columns = res.data.boards[0].columns;\n      console.log(\"Columns: \", columns);\n      const cols = columns.map(column => {\n        cols.add({\n          label: column.title,\n          value: column.id\n        });\n      });\n    }).catch(err => {\n      console.log(\"Error fetching columns: \", err);\n    });\n  };\n  const updateCountValue = evt => {\n    setCountInput(evt);\n  };\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      setContext(res.data);\n    });\n    console.log(\"inputTotal:\", parseInt(totalCount));\n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3\",\n        children: /*#__PURE__*/_jsxDEV(ListInput, {\n          nameHandler: evt => updateNameValue(evt),\n          countHandler: evt => updateCountValue(evt),\n          totalCount: totalCount,\n          clickFunction: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: listItems.map(item => item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ByBSBT5741jO095C6Z2sD0GUa30=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","List","ListItem","ListInput","Row","Col","Box","Divider","jsxDEV","_jsxDEV","monday","setToken","App","_s","context","setContext","listItems","setListItems","nameInput","setNameInput","countInput","setCountInput","totalCount","setTotalCount","handleInput","parseInt","itemName","itemCount","handleTotalCount","changeTotalCount","fileName","_jsxFileName","lineNumber","columnNumber","isChecked","prevTotalCount","updateNameValue","evt","boardId","console","log","query","api","then","res","columns","data","boards","cols","map","column","add","label","title","value","id","catch","err","updateCountValue","execute","listen","attentionBoxText","user","className","children","nameHandler","countHandler","clickFunction","item","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\"\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box, Divider } from \"monday-ui-react-core\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([])\n  const [nameInput, setNameInput] = useState(\"\")\n  const [countInput, setCountInput] = useState(0)\n  const [totalCount, setTotalCount] = useState(0)\n\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput))\n    setListItems([...listItems, <ListItem key={nameInput} itemName={nameInput} itemCount={countInput} handleTotalCount={changeTotalCount}></ListItem>])\n  }\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    })\n  }\n\n  const updateNameValue = (evt) => {\n    setNameInput(evt);\n    const boardId = context.boardId;\n    console.log(context)\n    const query = `query {\n      boards(ids: ${boardId}) {\n        columns {\n          id\n          title\n        }\n      }\n    }`;\n    monday.api(query).then((res) => {\n      const columns = res.data.boards[0].columns;\n      console.log(\"Columns: \", columns);\n      const cols = columns.map(column => {\n          cols.add({label: column.title, value: column.id})\n      })\n    }).catch((err) => {\n      console.log(\"Error fetching columns: \", err);\n    });\n  }\n\n  const updateCountValue = (evt) => {\n    setCountInput(evt);\n  }\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n    });\n    \n    console.log(\"inputTotal:\", parseInt(totalCount))\n    \n  }, []);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <div className=\"col-12 py-3\">\n          <ListInput \n            nameHandler={evt => updateNameValue(evt)} \n            countHandler={evt => updateCountValue(evt)} \n            totalCount={totalCount} \n            \n            clickFunction={handleInput}>\n          </ListInput>\n        </div>\n        <Divider></Divider>\n        <div className=\"col-12\">\n          {listItems.map(item => (\n          item\n        ))}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}