{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\";\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box, Divider } from \"monday-ui-react-core\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [countInput, setCountInput] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [colOptions, setColOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState({});\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput));\n    setListItems([...listItems, /*#__PURE__*/_jsxDEV(ListItem, {\n      itemName: nameInput,\n      itemCount: countInput,\n      handleDelete: handleItemDelete,\n      handleTotalCount: changeTotalCount\n    }, nameInput, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }, this)]);\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n    console.log(evt);\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => prevListItems.filter(item => item.key !== itemName));\n    setTotalCount(prevTotalCount => {\n      if (!isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else if (isChecked) {\n        return prevTotalCount;\n      }\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    });\n    console.log(selectedOption.value);\n    const query = `mutation {\n      change_simple_column_value (board_id: ${context.boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n        id\n      }\n    }`;\n    monday.api(query).then(res => {\n      console.log(\"Column updated successfully: \", res);\n    }).catch(err => {\n      console.log(\"Error updating column: \", err);\n    });\n  };\n  const updateNameValue = evt => {\n    setNameInput(evt);\n  };\n  const updateCountValue = evt => {\n    setCountInput(evt);\n  };\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      // console.log(\"res: \", res)\n      setContext(res.data);\n    });\n    if (context) {\n      console.log(\"Context: \", context);\n      const boardId = context.boardId;\n      const query = `query {\n        boards(ids: ${boardId}) {\n          columns {\n            id\n            title\n          }\n        }\n      }`;\n      monday.api(query).then(res => {\n        console.log(\"res: \", res);\n        const columns = res.data.boards[0].columns;\n        console.log(\"Columns: \", columns);\n        const cols = columns.map(column => {\n          return {\n            label: column.title,\n            value: column.id\n          };\n        });\n        console.log(\"cols: \", cols);\n        setColOptions(cols);\n      }).catch(err => {\n        console.log(\"Error fetching columns: \", err);\n      });\n    }\n\n    // console.log(\"inputTotal:\", parseInt(totalCount))\n  }, [listItems]);\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${context ? context.user.id : \"still loading\"}.\n  Let's start building your amazing app, which will change the world!`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3\",\n        children: /*#__PURE__*/_jsxDEV(ListInput, {\n          nameHandler: evt => updateNameValue(evt),\n          countHandler: evt => updateCountValue(evt),\n          totalCount: totalCount,\n          dropdownOptions: colOptions,\n          dropdownHandler: evt => handleOptionsSelection(evt),\n          clickFunction: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          items: listItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"c89V75hSp3Eoo6slw+nML3ltAjU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","AttentionBox","List","ListItem","ListInput","Row","Col","Box","Divider","jsxDEV","_jsxDEV","monday","setToken","App","_s","context","setContext","listItems","setListItems","nameInput","setNameInput","countInput","setCountInput","totalCount","setTotalCount","colOptions","setColOptions","selectedOption","setSelectedOption","handleInput","parseInt","itemName","itemCount","handleDelete","handleItemDelete","handleTotalCount","changeTotalCount","fileName","_jsxFileName","lineNumber","columnNumber","handleOptionsSelection","evt","console","log","isChecked","prevListItems","filter","item","key","prevTotalCount","value","query","boardId","itemId","JSON","stringify","api","then","res","catch","err","updateNameValue","updateCountValue","execute","listen","data","columns","boards","cols","map","column","label","title","id","attentionBoxText","user","className","children","nameHandler","countHandler","dropdownOptions","dropdownHandler","clickFunction","items","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\"\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box, Divider } from \"monday-ui-react-core\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([])\n  const [nameInput, setNameInput] = useState(\"\")\n  const [countInput, setCountInput] = useState(0)\n  const [totalCount, setTotalCount] = useState(0)\n  const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({})  \n\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput))\n    setListItems([...listItems, <ListItem key={nameInput} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt) \n    console.log(evt) \n  }\n\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => prevListItems.filter(item => item.key !== itemName));\n    setTotalCount(prevTotalCount => {\n      if (!isChecked) {\n        return prevTotalCount - parseInt(itemCount)\n      } else if (isChecked) {\n        return prevTotalCount\n      }\n      \n    });\n  }\n\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    })\n\n    console.log(selectedOption.value)\n\n    const query = `mutation {\n      change_simple_column_value (board_id: ${context.boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n        id\n      }\n    }`;\n    \n    monday.api(query)\n      .then((res) => {\n        console.log(\"Column updated successfully: \", res);\n      })\n      .catch((err) => {\n        console.log(\"Error updating column: \", err);\n      });\n  }\n\n\n  const updateNameValue = (evt) => {\n    setNameInput(evt);\n  }\n\n\n  const updateCountValue = (evt) => {\n    setCountInput(evt);\n  }\n\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      // console.log(\"res: \", res)\n      setContext(res.data);\n    });\n\n    if (context) {\n      console.log(\"Context: \", context)\n      const boardId = context.boardId;\n      \n      const query = `query {\n        boards(ids: ${boardId}) {\n          columns {\n            id\n            title\n          }\n        }\n      }`;\n      monday.api(query).then((res) => {\n        console.log(\"res: \", res);\n        const columns = res.data.boards[0].columns;\n        console.log(\"Columns: \", columns);\n        const cols = columns.map(column => {\n            return {label: column.title, value: column.id}\n        })\n        console.log(\"cols: \", cols)\n        setColOptions(cols)\n      }).catch((err) => {\n        console.log(\"Error fetching columns: \", err);\n      });\n    }\n    \n    \n    // console.log(\"inputTotal:\", parseInt(totalCount))\n    \n  }, [listItems]);\n\n\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <div className=\"col-12 py-3\">\n          <ListInput \n            nameHandler={evt => updateNameValue(evt)} \n            countHandler={evt => updateCountValue(evt)} \n            totalCount={totalCount} \n            dropdownOptions={colOptions}\n            dropdownHandler={evt => handleOptionsSelection(evt)}\n            clickFunction={handleInput}>\n          </ListInput>\n        </div>\n        <Divider></Divider>\n        <div className=\"col-12\">\n          <List items={listItems}></List>\n        </div> \n      </div>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}