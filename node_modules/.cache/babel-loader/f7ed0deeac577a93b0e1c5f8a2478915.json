{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"../modules/List.js\";\nimport ListInput from \"../modules/ListInput.js\";\nimport { Divider, Label, Loader } from \"monday-ui-react-core\";\nimport { Link, useNavigate, useHistory } from \"react-router-dom\";\nimport { useData } from '../modules/DataContext';\nimport { useDispatch } from 'react-redux';\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\n// monday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\nconst BatchTask = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [selectedOption, setSelectedOption] = useState({});\n  const [printerOptions, setPrinterOptions] = useState({});\n  const [themeSetting, setThemeSetting] = useState();\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [totalBatches, setTotalBatches] = useState();\n  const [shouldLoad, setShouldLoad] = useState(false);\n  const handleInput = (name, count) => {\n    console.log(\"count: \", totalCount);\n    const countAsNum = parseInt(count);\n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount);\n      return parseInt(prevTotalCount) + countAsNum;\n    });\n    const currentDate = new Date();\n    const currentTime = currentDate.toLocaleTimeString('en-US', {\n      timeStyle: 'short',\n      hour12: true\n    });\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear();\n    const newItem = {\n      uniqueKey: Math.random().toString(36).substr(2, 9),\n      itemName: itemDisplayPos,\n      itemCount: countAsNum\n    };\n    console.log(\"Key: \", uniqueKey);\n    setListItems([...listItems, newItem]);\n    setTotalBatches(prevTotalItems => {\n      return prevTotalItems + 1;\n    });\n    setShouldLoad(true);\n    console.log(\"BatchTask totalBatches: \", totalBatches);\n    console.log(\"handleInput Option: \", selectedOption);\n  };\n  const handleTotalReset = () => {\n    setTotalCount(0);\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n    storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(evt));\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handlePrinterSelection = evt => {\n    setPrinterOptions(evt);\n    storageInstance.setItem('printerOptions_' + context.itemId, JSON.stringify(evt));\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setShouldLoad(true);\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName));\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName);\n      return newListItems;\n    });\n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      return newTotalCount;\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof isChecked);\n    console.log(\"itemCount type: \", typeof itemCount);\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    });\n    console.log(\"changeTotal Option: \", selectedOption);\n  };\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\");\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n    monday.listen(\"context\", res => {\n      console.log(\"useEffect storage res: \", res);\n      setContext(res.data);\n      setThemeSetting(res.data.theme);\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        setListItems(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        console.log(\"Count Response: \", response.data.value);\n        const parsedCount = parseInt(response.data.value);\n        setTotalCount(parsedCount || 0);\n      });\n      storageInstance.getItem('selectedOption_' /* + res.data.itemId*/).then(response => {\n        console.log(\"Option Response: \", response);\n        setSelectedOption(JSON.parse(response.data.value) || []);\n        // if (response.data && response.data.value) {\n        //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n        //   handleOptionsSelection(defaultSelectedOption);\n        // }\n      });\n\n      storageInstance.getItem('printerOption_' + res.data.itemId).then(response => {\n        console.log(\"Printer Response: \", response.data.value);\n        setPrinterOptions(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalBatches_').then(response => {\n        console.log(\"Total Batches Response res: \", response);\n        console.log(\"Total Batches Response: \", response.data.value);\n        setTotalBatches(JSON.parse(response.data.value));\n      });\n      storageInstance.getItem('themeSetting_').then(response => {\n        console.log(\"Theme Response: \", response);\n        console.log(\"Theme Response: \", response.data.value);\n        setThemeSetting(JSON.parse(response.data.value));\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #2----\");\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption);\n      const boardId = context.boardId;\n      console.log(\"using boardID: \", boardId);\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      monday.api(query).then(res => {\n        console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n      }).catch(err => {\n        console.log(\"Error updating column: \", err);\n      });\n    }\n    setShouldLoad(false);\n  }, [totalCount]);\n\n  // Update listItems in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n  }, [listItems]);\n\n  // Update totalCount in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #4----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n  }, [totalCount]);\n\n  // Update selectedOption in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value);\n    }\n  }, [selectedOption]);\n\n  // Update printerOptions in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions));\n      console.log(\"Option: \", printerOptions.value);\n    }\n  }, [printerOptions]);\n\n  // Update totalBatches in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #7----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('totalBatches_', JSON.stringify(totalBatches));\n    }\n    console.log(\"Total Batches: \", totalBatches);\n  }, [totalBatches]);\n\n  // Update themeSetting in the board storage when it changes (for dark/light/black mode)\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #8----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('themeSetting_', JSON.stringify(themeSetting));\n    }\n    console.log(\"Total Batches: \", themeSetting);\n  }, [themeSetting]);\n\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #8----\")\n  //   if (context) {\n  //     const storedSelectedOption = storageInstance.getItem('selectedOption_'/* + context.itemId*/).then(response => {\n  //       if (response.data && response.data.value) {\n  //         const defaultSelectedOption = JSON.parse(storedSelectedOption);\n  //         handleOptionsSelection(defaultSelectedOption);\n  //       }\n  //     })\n  //   }\n\n  // }, [])\n\n  const testSub = () => {\n    // const query = \"query { app_subscription { billing_period days_left is_trial plan_id renewal_date } }\";\n    const query = \"query { app_subscription { plan_id } }\";\n    monday.api(query).then(res => {\n      console.log(\"Subscription: \", res);\n    }).catch(err => {\n      console.log(\"Error finding subscription: \", err);\n    });\n  };\n\n  // testSub()\n\n  const renderedData = `\n  <div className=\"App container mt-5\">\n  <div className=\"row pt-5\">\n    <div className=\"col-12 py-3\">\n      {context && <ListInput \n        // nameHandler={evt => updateNameValue(evt)} \n        // nameValue={nameInput}\n        // countHandler={evt => updateCountValue(evt)} \n        // countValue={countInput}\n        totalCount={totalCount} \n        dropdownHandler={evt => handleOptionsSelection(evt)}\n        clickFunction={handleInput}\n        resetTotalFunction={handleTotalReset}\n        parentContext={context}\n        disabledCheck={selectedOption.value !== undefined ? false : true }\n        selectedVal={selectedOption}\n        batches={totalBatches}>\n      </ListInput>}\n    </div>\n    {context && context.user.isViewOnly ? <Label color=\"negative\" text=\"As a viewer, you are unable to use this app\"></Label> : null}\n    <Divider></Divider>\n    <div className=\"col-12\">\n      \n      {context && !shouldLoad ? <List items={listItems} handleDelete={handleItemDelete} parentContext={context} handleTotalCount={changeTotalCount}></List> : <Loader hasBackground size={40} />}\n    </div> \n    <div className=\"row\">\n      <div className=\"col text-center\">\n          <p><a href=\"https://rallyessentials.com/get-in-touch/\">Send us your feedback</a></p>\n      </div>\n      <div className=\"col text-center\">\n          <p><a href=\"#\">Documentation</a></p>\n      </div>\n      <div className=\"col text-center\">\n          <p><a href=\"https://rallyessentials.com/get-in-touch/\">Email Support</a></p>\n      </div>\n  </div>\n  </div>\n  \n</div>\n  `;\n  return renderedData;\n};\n_s(BatchTask, \"llMobk6/9vxIoMX2H6JXHgbIWa4=\");\n_c = BatchTask;\nexport default BatchTask;\nvar _c;\n$RefreshReg$(_c, \"BatchTask\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","List","ListInput","Divider","Label","Loader","Link","useNavigate","useHistory","useData","useDispatch","monday","storageInstance","storage","instance","BatchTask","_s","context","setContext","listItems","setListItems","totalCount","setTotalCount","selectedOption","setSelectedOption","printerOptions","setPrinterOptions","themeSetting","setThemeSetting","optionSelected","setOptionSelected","totalBatches","setTotalBatches","shouldLoad","setShouldLoad","handleInput","name","count","console","log","countAsNum","parseInt","prevTotalCount","currentDate","Date","currentTime","toLocaleTimeString","timeStyle","hour12","uniqueKey","Math","random","toString","substr","itemDisplayPos","length","getMonth","getDate","getFullYear","newItem","itemName","itemCount","prevTotalItems","handleTotalReset","handleOptionsSelection","evt","setItem","JSON","stringify","handlePrinterSelection","itemId","handleItemDelete","isChecked","prevListItems","newListItems","filter","item","map","newTotalCount","changeTotalCount","execute","listen","res","data","theme","getItem","then","response","parse","value","parsedCount","boardId","query","api","catch","err","testSub","renderedData","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/pages/BatchTask.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"../modules/List.js\"\nimport ListInput from \"../modules/ListInput.js\";\nimport { Divider, Label, Loader } from \"monday-ui-react-core\"\nimport {Link , useNavigate, useHistory } from \"react-router-dom\";\nimport { useData } from '../modules/DataContext';\nimport { useDispatch } from 'react-redux'\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\n// monday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\nconst storageInstance = monday.storage.instance;\n\nconst BatchTask = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [selectedOption, setSelectedOption] = useState({}); \n  const [printerOptions, setPrinterOptions] = useState({})\n  const [themeSetting, setThemeSetting] = useState();\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [totalBatches, setTotalBatches] = useState();\n  const [shouldLoad, setShouldLoad] = useState(false);\n\n  \n\n  const handleInput = (name, count) => {\n    console.log(\"count: \", totalCount)\n    const countAsNum = parseInt(count)\n    \n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount)\n      return parseInt(prevTotalCount) + countAsNum \n    })\n    const currentDate = new Date()\n    const currentTime = currentDate.toLocaleTimeString('en-US', {timeStyle: 'short', hour12: true})\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const itemDisplayPos = \"B\" + (listItems.length + 1) + \" | \" + currentTime + \" - \" + \n      (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear()\n    const newItem = { uniqueKey: Math.random().toString(36).substr(2, 9), itemName: itemDisplayPos, itemCount: countAsNum };\n    console.log(\"Key: \", uniqueKey)\n    setListItems([...listItems, newItem])\n    setTotalBatches(prevTotalItems => {\n      return prevTotalItems + 1\n    })\n    setShouldLoad(true)\n    console.log(\"BatchTask totalBatches: \", totalBatches)\n    console.log(\"handleInput Option: \", selectedOption)\n  }\n\n  const handleTotalReset = () => {\n    setTotalCount(0)\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt) \n    storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(evt));\n    console.log(\"handleOptions Option: \", evt) \n  }\n\n  const handlePrinterSelection = (evt) => {\n    setPrinterOptions(evt)\n    storageInstance.setItem('printerOptions_' + context.itemId, JSON.stringify(evt));\n    console.log(\"handleOptions Option: \", evt)\n  }\n\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setShouldLoad(true)\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName))\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName)\n\n      return newListItems;\n    });\n  \n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n\n      return newTotalCount;\n    });\n  }\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof(isChecked))\n    console.log(\"itemCount type: \", typeof(itemCount))\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    })\n\n    console.log(\"changeTotal Option: \", selectedOption)  \n  }\n\n\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\")\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    monday.listen(\"context\", (res) => {\n      console.log(\"useEffect storage res: \", res)\n      setContext(res.data);\n      setThemeSetting(res.data.theme)\n\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        setListItems(JSON.parse(response.data.value) || []);  \n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        console.log(\"Count Response: \", response.data.value)\n        const parsedCount = parseInt(response.data.value)\n        setTotalCount(parsedCount || 0);\n      });\n      storageInstance.getItem('selectedOption_'/* + res.data.itemId*/).then(response => {\n        console.log(\"Option Response: \", response)\n        setSelectedOption(JSON.parse(response.data.value) || []);\n        // if (response.data && response.data.value) {\n        //   const defaultSelectedOption = JSON.parse(storedSelectedOption);\n        //   handleOptionsSelection(defaultSelectedOption);\n        // }\n      });\n      storageInstance.getItem('printerOption_' + res.data.itemId).then(response => {\n        console.log(\"Printer Response: \", response.data.value)\n        setPrinterOptions(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalBatches_').then(response => { \n        console.log(\"Total Batches Response res: \", response)\n        console.log(\"Total Batches Response: \", response.data.value)\n        setTotalBatches(JSON.parse(response.data.value));\n      });\n      storageInstance.getItem('themeSetting_').then(response => {\n        console.log(\"Theme Response: \", response)\n        console.log(\"Theme Response: \", response.data.value)\n        setThemeSetting(JSON.parse(response.data.value));\n      })\n    });\n\n    \n  }, []);\n\n  useEffect(() => { \n    console.log(\"----App.js UseEffect #2----\")\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption)\n      const boardId = context.boardId\n      console.log(\"using boardID: \", boardId)\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      \n      monday.api(query)\n        .then((res) => {\n          console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n        })\n        .catch((err) => {\n          console.log(\"Error updating column: \", err);\n        });\n    }\n    setShouldLoad(false)\n  }, [totalCount]);\n\n  // Update listItems in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n    \n  }, [listItems]);\n\n  // Update totalCount in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #4----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n    \n  }, [totalCount]);\n\n\n  // Update selectedOption in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value)\n    }\n    \n    \n  }, [selectedOption]);\n\n\n  // Update printerOptions in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions));\n      console.log(\"Option: \", printerOptions.value)\n    }\n  }, [printerOptions])\n\n\n  // Update totalBatches in the board storage when it changes\n  useEffect(() => {\n    \n    console.log(\"----App.js UseEffect #7----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('totalBatches_', JSON.stringify(totalBatches));\n    }\n    console.log(\"Total Batches: \", totalBatches)\n  }, [totalBatches])\n\n  // Update themeSetting in the board storage when it changes (for dark/light/black mode)\n  useEffect(() => {\n    \n    console.log(\"----App.js UseEffect #8----\")\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('themeSetting_', JSON.stringify(themeSetting));\n    }\n    console.log(\"Total Batches: \", themeSetting)\n  }, [themeSetting])\n\n\n\n  // useEffect(() => {\n  //   console.log(\"----App.js UseEffect #8----\")\n  //   if (context) {\n  //     const storedSelectedOption = storageInstance.getItem('selectedOption_'/* + context.itemId*/).then(response => {\n  //       if (response.data && response.data.value) {\n  //         const defaultSelectedOption = JSON.parse(storedSelectedOption);\n  //         handleOptionsSelection(defaultSelectedOption);\n  //       }\n  //     })\n  //   }\n    \n  // }, [])\n\n  const testSub = () => {\n\n    // const query = \"query { app_subscription { billing_period days_left is_trial plan_id renewal_date } }\";\n    const query = \"query { app_subscription { plan_id } }\";\n    monday.api(query)\n    .then((res) => {\n      console.log(\"Subscription: \", res);\n    })\n    .catch((err) => {\n      console.log(\"Error finding subscription: \", err);\n    });\n    \n  }\n\n  // testSub()\n\n  const renderedData = `\n  <div className=\"App container mt-5\">\n  <div className=\"row pt-5\">\n    <div className=\"col-12 py-3\">\n      {context && <ListInput \n        // nameHandler={evt => updateNameValue(evt)} \n        // nameValue={nameInput}\n        // countHandler={evt => updateCountValue(evt)} \n        // countValue={countInput}\n        totalCount={totalCount} \n        dropdownHandler={evt => handleOptionsSelection(evt)}\n        clickFunction={handleInput}\n        resetTotalFunction={handleTotalReset}\n        parentContext={context}\n        disabledCheck={selectedOption.value !== undefined ? false : true }\n        selectedVal={selectedOption}\n        batches={totalBatches}>\n      </ListInput>}\n    </div>\n    {context && context.user.isViewOnly ? <Label color=\"negative\" text=\"As a viewer, you are unable to use this app\"></Label> : null}\n    <Divider></Divider>\n    <div className=\"col-12\">\n      \n      {context && !shouldLoad ? <List items={listItems} handleDelete={handleItemDelete} parentContext={context} handleTotalCount={changeTotalCount}></List> : <Loader hasBackground size={40} />}\n    </div> \n    <div className=\"row\">\n      <div className=\"col text-center\">\n          <p><a href=\"https://rallyessentials.com/get-in-touch/\">Send us your feedback</a></p>\n      </div>\n      <div className=\"col text-center\">\n          <p><a href=\"#\">Documentation</a></p>\n      </div>\n      <div className=\"col text-center\">\n          <p><a href=\"https://rallyessentials.com/get-in-touch/\">Email Support</a></p>\n      </div>\n  </div>\n  </div>\n  \n</div>\n  `\n  \n  return (\n    \n    renderedData\n    \n  );\n};\nexport default BatchTask;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}