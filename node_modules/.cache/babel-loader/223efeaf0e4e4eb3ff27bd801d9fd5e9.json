{"ast":null,"code":"var _jsxFileName = \"/Users/connor/Documents/batchtask/batchTask/src/modules/ListInputMod.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { TextField, Button, Label, Dropdown, Loader, Divider } from \"monday-ui-react-core\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport List from \"./List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\n// monday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTI1MjEwNSwiYWFpIjoxMSwidWlkIjo1MDY1MzM4MSwiaWFkIjoiMjAyMy0xMC0yM1QyMToyNzo1Ni4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTkzNTI3OTYsInJnbiI6InVzZTEifQ.IxSCkDC63caJ9dP_HobxQpVMEWXSJUDi-vcyRozQnKA\");\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\"); // rally essentials key\nconst storageInstance = monday.storage.instance;\nconst ListInputMod = _ref => {\n  _s();\n  let {\n    dropdownHandler,\n    printerHandler,\n    clickFunction,\n    resetTotalFunction,\n    selectedVal,\n    printerVal,\n    disabledCheck\n  } = _ref;\n  const [context, setContext] = useState();\n  console.log(\"Context from parent: \", context);\n  const [isInitialized, setIsInitialized] = useState(false); // NEW\n  const [listItems, setListItems] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [selectedOption, setSelectedOption] = useState({});\n  const [printerOptions, setPrinterOptions] = useState({});\n  const [optionSelected, setOptionSelected] = useState(false);\n  const [shouldLoad, setShouldLoad] = useState(false);\n  const [initialShouldLoad, setInitialShouldLoad] = useState(false);\n  const [colOptions, setColOptions] = useState([]);\n  const nameRef = useRef();\n  const countRef = useRef();\n  const [multiplier, setMultiplier] = useState(1);\n  const printerList = useMemo(() => [{\n    label: \"Printer 1 (LEC2-640)\",\n    value: \"printer1\"\n  }, {\n    label: \"Printer 2 (LEC2-640)\",\n    value: \"printer2\"\n  }, {\n    label: \"Printer 3 (LEC2-640)\",\n    value: \"printer3\"\n  }, {\n    label: \"Printer 4 (LEC2-640)\",\n    value: \"printer4\"\n  }, {\n    label: \"Printer 5 (LEC2-640)\",\n    value: \"printer5\"\n  }, {\n    label: \"Printer 6 (MG-640)\",\n    value: \"printer6\"\n  }, {\n    label: \"Printer 7 (MG-640)\",\n    value: \"printer7\"\n  }, {\n    label: \"Printer 8 (MG-640)\",\n    value: \"printer8\"\n  }, {\n    label: \"Printer 9 (MG-640)\",\n    value: \"printer9\"\n  }, {\n    label: \"Printer 10 (MG-640)\",\n    value: \"printer10\"\n  }, {\n    label: \"Printer 11 (LG-640)\",\n    value: \"printer11\"\n  }, {\n    label: \"Printer 12 (LG-540)\",\n    value: \"printer12\"\n  }, {\n    label: \"Printer 13 (LG-640)\",\n    value: \"printer13\"\n  }, {\n    label: \"Printer 14 (LG-640)\",\n    value: \"printer14\"\n  }], []);\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #1----\");\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n    monday.listen(\"context\", res => {\n      console.log(\"useEffect storage res: \", res);\n      setContext(res.data);\n\n      // setShouldLoad(true)\n\n      storageInstance.getItem('listItems_' + res.data.itemId).then(result1 => {\n        setListItems(JSON.parse(result1.data.value) || []);\n        return storageInstance.getItem('listItems_' + res.data.itemId);\n      }).then(result2 => {\n        console.log(\"Loading Initial...\");\n        setListItems(JSON.parse(result2.data.value) || []);\n        return storageInstance.getItem('totalCount_' + res.data.itemId);\n      }).then(result3 => {\n        const parsedCount = parseInt(result3.data.value);\n        setTotalCount(parsedCount || 0);\n        return storageInstance.getItem('selectedOption_' /* + res.data.itemId*/);\n      }).then(result4 => {\n        setSelectedOption(JSON.parse(result4.data.value) || []);\n        return storageInstance.getItem('printerOption_' + res.data.itemId);\n      }).then(result5 => {\n        setPrinterOptions(JSON.parse(result5.data.value) || []);\n      }).catch(error => {\n        console.log(error);\n        // setShouldLoad(false)\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n      console.log(\"ListInput: \", context);\n    });\n  }, []);\n  useEffect(() => {\n    if (context) {\n      console.log(\"Parent Context 2\", context);\n      console.log(\"Context: \", context);\n      const boardId = context.boardId;\n      console.log(\"using boardID: \", context.boardId);\n      const query = `query {\n            boards(ids: ${boardId}) {\n                columns {\n                    id\n                    title\n                }\n            }\n            }`;\n      monday.api(query).then(res => {\n        console.log(\"ListInput res: \", res);\n        const columns = res.data.boards[0].columns;\n        console.log(\"Columns: \", columns);\n        const filter = 'numbers';\n        const cols = columns.map(column => {\n          return {\n            label: column.title,\n            value: column.id\n          };\n        });\n        console.log(\"cols: \", cols);\n        const filteredCols = cols.filter(col => col.value.includes(filter)).map(col => {\n          return {\n            label: col.label,\n            value: col.value\n          };\n        });\n        setColOptions(filteredCols);\n        storageInstance.setItem(`colOptions`, JSON.stringify(cols)).then(res => {\n          console.log(\"colOptions stored in board storage: \", res);\n        });\n      }).catch(err => {\n        console.log(\"Error fetching columns: \", err);\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n    }\n  }, [context]);\n\n  // NEW\n  // New useEffect to fetch existing value from the output column\n  useEffect(() => {\n    if (selectedOption && context) {\n      // Fetch the existing value from the selected output column for the current item\n      const itemId = context.itemId;\n      const columnId = selectedOption.value;\n\n      // Build the query to get the column value\n      const query = `query {\n          items (ids: ${itemId}) {\n            column_values (ids: \"${columnId}\") {\n              value\n              text\n            }\n          }\n        }`;\n      monday.api(query).then(res => {\n        console.log(\"Output Column Value: \", res);\n        const columnValue = res.data.items[0].column_values[0].value;\n        if (columnValue) {\n          // Parse the value (it might be JSON)\n          let existingCount = 0;\n          try {\n            existingCount = JSON.parse(columnValue);\n          } catch (e) {\n            existingCount = parseInt(columnValue);\n          }\n          if (isNaN(existingCount)) {\n            existingCount = 0;\n          }\n          setTotalCount(existingCount);\n        } else {\n          setTotalCount(0);\n        }\n      }).catch(err => {\n        console.error(\"Error fetching column value: \", err);\n      }).finally(() => {\n        setIsInitialized(true);\n      });\n    }\n  }, [selectedOption, context]);\n  const handleInput = (name, count) => {\n    console.log(\"count: \", totalCount);\n    const countAsNum = parseInt(count);\n\n    // Loop to add multiple batches\n    const newItems = [];\n    for (let i = 0; i < multiplier; i++) {\n      // NEW: Loop based on multiplier\n      const totalToAdd = countAsNum; // Each batch will have the same quantity\n      const currentDate = new Date();\n      const currentTime = currentDate.toLocaleTimeString('en-US', {\n        timeStyle: 'short',\n        hour12: true\n      });\n      const uniqueKey = Math.random().toString(36).substr(2, 9);\n      const printerDisplay = printerOptions.label == undefined ? \"Printer N/A\" : printerOptions.label;\n      const itemDisplayPos = \"B\" + (listItems.length + (i + 1)) + \" | \" + currentTime + \" - \" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear() + \"\\n | \" + printerDisplay;\n      newItems.push({\n        uniqueKey,\n        itemName: itemDisplayPos,\n        itemCount: totalToAdd\n      }); // Create new item for each batch\n    }\n\n    setListItems([...listItems, ...newItems]); // Add all new items at once\n\n    setTotalCount(prevTotalCount => {\n      console.log(\"new total: \", prevTotalCount);\n      return parseInt(prevTotalCount) + countAsNum * multiplier; // Update total count\n    });\n\n    console.log(\"handleInput Option: \", selectedOption);\n  };\n  const handleTotalReset = () => {\n    setTotalCount(0);\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n  };\n  const handlePrinterSelection = evt => {\n    setPrinterOptions(evt);\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName));\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName);\n      return newListItems;\n    });\n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      return newTotalCount;\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    console.log(\"isChecked type: \", typeof isChecked);\n    console.log(\"itemCount type: \", typeof itemCount);\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return parseInt(prevTotalCount) - parseInt(itemCount);\n      } else {\n        return parseInt(prevTotalCount) + parseInt(itemCount);\n      }\n    });\n    console.log(\"changeTotal Option: \", selectedOption);\n  };\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #3----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      setShouldLoad(true);\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)).catch(error => {\n        console.log(error);\n        setShouldLoad(false);\n      }).finally(() => {\n        console.log(\"Loading...\");\n        setTimeout(() => {\n          setShouldLoad(false);\n        }, 1000);\n      });\n    }\n  }, [listItems]);\n  useEffect(() => {\n    if (isInitialized) {\n      if (context) {\n        // setShouldLoad(true)\n        storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString()).catch(error => {\n          console.log(error);\n          // setShouldLoad(false)\n        }).finally(() => {\n          // setShouldLoad(false)\n        });\n      }\n      if (selectedOption && context && totalCount != null) {\n        console.log(\"Inner Context: \", selectedOption);\n        const boardId = context.boardId;\n        console.log(\"using boardID: \", boardId);\n        const query = `mutation {\n              change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n                id\n              }\n            }`;\n        monday.api(query).then(res => {\n          console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n        }).catch(err => {\n          console.log(\"Error updating column: \", err);\n        });\n      }\n    }\n  }, [totalCount, isInitialized]);\n\n  // Update selectedOption in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #5----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      //   setShouldLoad(true)\n      storageInstance.setItem('selectedOption_' /* + context.itemId*/, JSON.stringify(selectedOption)).catch(error => {\n        console.log(error);\n        setShouldLoad(false);\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n      console.log(\"Option: \", selectedOption.value);\n    }\n  }, [selectedOption]);\n\n  // Update printerOptions in the board storage when it changes\n  useEffect(() => {\n    console.log(\"----App.js UseEffect #6----\");\n    if (context) {\n      console.log(\"Context: \", context);\n      //   setShouldLoad(true)\n      storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions)).catch(error => {\n        console.log(error);\n        setShouldLoad(false);\n      }).finally(() => {\n        // setShouldLoad(false)\n      });\n      console.log(\"Option: \", printerOptions.value);\n    }\n  }, [printerOptions]);\n  const handleClick = () => {\n    const nameVal = nameRef.current.value;\n    const countVal = parseInt(countRef.current.value);\n    handleInput(nameVal, countVal);\n  };\n  const handleDeductClick = () => {\n    const nameVal = nameRef.current.value;\n    const countVal = parseInt(countRef.current.value);\n    handleInput(nameVal, -countVal);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [console.log(\"Loading Remount\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleTotalReset,\n          size: Button.sizes.SMALL,\n          color: Button.colors.NEGATIVE,\n          children: \"Reset Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"grey\"\n          },\n          children: \"Version 2.1.1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter Batches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              text: totalCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Target column\",\n          onChange: evt => handleOptionsSelection(evt),\n          options: colOptions,\n          value: selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Printer\",\n          onChange: evt => handlePrinterSelection(evt),\n          options: printerList,\n          value: printerOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          disabled: true,\n          ref: nameRef,\n          type: \"text\",\n          placeholder: \"Batch name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Multiplier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            value: multiplier,\n            onChange: e => setMultiplier(parseInt(e) || 1),\n            placeholder: \"Multiplier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            ref: countRef,\n            type: \"number\",\n            value: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: shouldLoad ? true : false,\n          onClick: handleClick,\n          size: Button.sizes.SMALL,\n          color: Button.colors.POSITIVE,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: shouldLoad ? true : false,\n          onClick: handleDeductClick,\n          size: Button.sizes.SMALL,\n          color: Button.colors.NEGATIVE,\n          children: \"Deduct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: shouldLoad ? /*#__PURE__*/_jsxDEV(Loader, {\n          size: Loader.sizes.SMALL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 36\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        items: listItems,\n        handleDelete: handleItemDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 403,\n    columnNumber: 9\n  }, this);\n};\n_s(ListInputMod, \"gPSo7TmQOq6yMl2IzwwX3l3iUgk=\");\n_c = ListInputMod;\nexport default ListInputMod;\nvar _c;\n$RefreshReg$(_c, \"ListInputMod\");","map":{"version":3,"names":["React","TextField","Button","Label","Dropdown","Loader","Divider","mondaySdk","useState","useEffect","useRef","useMemo","List","jsxDEV","_jsxDEV","monday","setToken","storageInstance","storage","instance","ListInputMod","_ref","_s","dropdownHandler","printerHandler","clickFunction","resetTotalFunction","selectedVal","printerVal","disabledCheck","context","setContext","console","log","isInitialized","setIsInitialized","listItems","setListItems","totalCount","setTotalCount","selectedOption","setSelectedOption","printerOptions","setPrinterOptions","optionSelected","setOptionSelected","shouldLoad","setShouldLoad","initialShouldLoad","setInitialShouldLoad","colOptions","setColOptions","nameRef","countRef","multiplier","setMultiplier","printerList","label","value","execute","listen","res","data","getItem","itemId","then","result1","JSON","parse","result2","result3","parsedCount","parseInt","result4","result5","catch","error","finally","boardId","query","api","columns","boards","filter","cols","map","column","title","id","filteredCols","col","includes","setItem","stringify","err","columnId","columnValue","items","column_values","existingCount","e","isNaN","handleInput","name","count","countAsNum","newItems","i","totalToAdd","currentDate","Date","currentTime","toLocaleTimeString","timeStyle","hour12","uniqueKey","Math","random","toString","substr","printerDisplay","undefined","itemDisplayPos","length","getMonth","getDate","getFullYear","push","itemName","itemCount","prevTotalCount","handleTotalReset","handleOptionsSelection","evt","handlePrinterSelection","handleItemDelete","isChecked","prevListItems","newListItems","item","newTotalCount","changeTotalCount","setTimeout","handleClick","nameVal","current","countVal","handleDeductClick","className","children","onClick","size","sizes","SMALL","color","colors","NEGATIVE","fileName","_jsxFileName","lineNumber","columnNumber","style","text","placeholder","onChange","options","disabled","ref","type","POSITIVE","handleDelete","_c","$RefreshReg$"],"sources":["/Users/connor/Documents/batchtask/batchTask/src/modules/ListInputMod.js"],"sourcesContent":["import React from \"react\";\nimport { TextField, Button, Label, Dropdown, Loader, Divider } from \"monday-ui-react-core\"\nimport mondaySdk from \"monday-sdk-js\";\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport List from \"./List\"\n\nconst monday = mondaySdk();\n// monday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTI1MjEwNSwiYWFpIjoxMSwidWlkIjo1MDY1MzM4MSwiaWFkIjoiMjAyMy0xMC0yM1QyMToyNzo1Ni4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTkzNTI3OTYsInJnbiI6InVzZTEifQ.IxSCkDC63caJ9dP_HobxQpVMEWXSJUDi-vcyRozQnKA\");\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\") // rally essentials key\nconst storageInstance = monday.storage.instance;\n\nconst ListInputMod = ({dropdownHandler, printerHandler, clickFunction, resetTotalFunction, selectedVal, printerVal, disabledCheck}) => {\n    const [context, setContext] = useState()\n    console.log(\"Context from parent: \", context)\n    const [isInitialized, setIsInitialized] = useState(false); // NEW\n    const [listItems, setListItems] = useState([]);\n    const [totalCount, setTotalCount] = useState(0);\n    const [selectedOption, setSelectedOption] = useState({}); \n    const [printerOptions, setPrinterOptions] = useState({})\n    const [optionSelected, setOptionSelected] = useState(false);\n    const [shouldLoad, setShouldLoad] = useState(false);\n    const [initialShouldLoad, setInitialShouldLoad] = useState(false);\n    const [colOptions, setColOptions] = useState([])\n    const nameRef = useRef();\n    const countRef = useRef();\n    const [multiplier, setMultiplier] = useState(1);\n    const printerList = useMemo(() => ([\n        {\n            label: \"Printer 1 (LEC2-640)\",\n            value: \"printer1\"\n        },\n        {\n            label: \"Printer 2 (LEC2-640)\",\n            value: \"printer2\",\n        },\n        {\n            label: \"Printer 3 (LEC2-640)\",\n            value: \"printer3\"\n        },\n        {\n            label: \"Printer 4 (LEC2-640)\",\n            value: \"printer4\"\n        },\n        {\n            label: \"Printer 5 (LEC2-640)\",\n            value: \"printer5\"\n        },\n        {\n            label: \"Printer 6 (MG-640)\",\n            value: \"printer6\"\n        },\n        {\n          label: \"Printer 7 (MG-640)\",\n          value: \"printer7\"\n        },\n        {\n            label: \"Printer 8 (MG-640)\",\n            value: \"printer8\"\n        },\n        {\n          label: \"Printer 9 (MG-640)\",\n          value: \"printer9\"\n        },\n        {\n          label: \"Printer 10 (MG-640)\",\n          value: \"printer10\"\n        },\n        {\n          label: \"Printer 11 (LG-640)\",\n          value: \"printer11\"\n        },\n        {\n          label: \"Printer 12 (LG-540)\",\n          value: \"printer12\"\n        },\n        {\n          label: \"Printer 13 (LG-640)\",\n          value: \"printer13\"\n        },\n        {\n          label: \"Printer 14 (LG-640)\",\n          value: \"printer14\"\n        },\n    ]), []);\n    \n    \n    useEffect(() => {\n        console.log(\"----App.js UseEffect #1----\")\n        // Notice this method notifies the monday platform that user gains a first value in an app.\n        // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n        monday.execute(\"valueCreatedForUser\");\n    \n        monday.listen(\"context\", (res) => {\n          console.log(\"useEffect storage res: \", res)\n          setContext(res.data);\n    \n          // setShouldLoad(true)\n    \n          storageInstance.getItem('listItems_' + res.data.itemId).then(result1 => {\n            setListItems(JSON.parse(result1.data.value) || []);  \n            return storageInstance.getItem('listItems_' + res.data.itemId)\n          }).then(result2 => {\n            console.log(\"Loading Initial...\")\n            setListItems(JSON.parse(result2.data.value) || []);\n            return storageInstance.getItem('totalCount_' + res.data.itemId)\n          }).then(result3 => {\n            const parsedCount = parseInt(result3.data.value)\n            setTotalCount(parsedCount || 0);\n            return storageInstance.getItem('selectedOption_'/* + res.data.itemId*/)\n          }).then(result4 => { \n            setSelectedOption(JSON.parse(result4.data.value) || []);\n            return storageInstance.getItem('printerOption_' + res.data.itemId)\n          }).then(result5 => { \n            setPrinterOptions(JSON.parse(result5.data.value) || []);\n          }).catch(error => { \n            console.log(error)\n            // setShouldLoad(false)\n          }).finally(() => { \n            // setShouldLoad(false)\n          })\n\n        console.log(\"ListInput: \", context)\n    \n        });\n    \n        \n      }, []);\n\n      useEffect(() => {\n        if (context) {\n          console.log(\"Parent Context 2\", context)\n\n            console.log(\"Context: \", context)\n            const boardId = context.boardId;\n            console.log(\"using boardID: \", context.boardId)\n            \n            const query = `query {\n            boards(ids: ${boardId}) {\n                columns {\n                    id\n                    title\n                }\n            }\n            }`;\n            monday.api(query).then((res) => {\n                console.log(\"ListInput res: \", res);\n                const columns = res.data.boards[0].columns;\n                console.log(\"Columns: \", columns);\n                const filter = 'numbers'\n                const cols = columns.map(column => {                      \n                    return {label: column.title, value: column.id}\n                })\n                console.log(\"cols: \", cols)\n                const filteredCols = cols\n                .filter(col => col.value.includes(filter))\n                .map(col => {\n                    return {label: col.label, value: col.value}\n                })\n                setColOptions(filteredCols)\n                storageInstance.setItem(`colOptions`, JSON.stringify(cols)).then((res) => {\n                    console.log(\"colOptions stored in board storage: \", res);\n                })\n            }).catch((err) => {\n                console.log(\"Error fetching columns: \", err);\n            }).finally(() => {\n                // setShouldLoad(false)\n            });\n        }\n        \n      }, [context])\n\n    // NEW\n    // New useEffect to fetch existing value from the output column\n    useEffect(() => {\n      if (selectedOption && context) {\n        // Fetch the existing value from the selected output column for the current item\n        const itemId = context.itemId;\n        const columnId = selectedOption.value;\n\n        // Build the query to get the column value\n        const query = `query {\n          items (ids: ${itemId}) {\n            column_values (ids: \"${columnId}\") {\n              value\n              text\n            }\n          }\n        }`;\n\n        monday.api(query)\n          .then((res) => {\n            console.log(\"Output Column Value: \", res)\n            const columnValue = res.data.items[0].column_values[0].value;\n            if (columnValue) {\n              // Parse the value (it might be JSON)\n              let existingCount = 0;\n              try {\n                existingCount = JSON.parse(columnValue);\n              } catch (e) {\n                existingCount = parseInt(columnValue);\n              }\n              if (isNaN(existingCount)) {\n                existingCount = 0;\n              }\n              setTotalCount(existingCount);\n            } else {\n              setTotalCount(0);\n            }\n          })\n          .catch((err) => {\n            console.error(\"Error fetching column value: \", err);\n          })\n          .finally(() => {\n            setIsInitialized(true);\n          });\n      }\n    }, [selectedOption, context]);\n\n\n\n      const handleInput = (name, count) => {\n        console.log(\"count: \", totalCount);\n        const countAsNum = parseInt(count);\n        \n        // Loop to add multiple batches\n        const newItems = [];\n        for (let i = 0; i < multiplier; i++) { // NEW: Loop based on multiplier\n            const totalToAdd = countAsNum; // Each batch will have the same quantity\n            const currentDate = new Date();\n            const currentTime = currentDate.toLocaleTimeString('en-US', {timeStyle: 'short', hour12: true});\n            const uniqueKey = Math.random().toString(36).substr(2, 9);\n            const printerDisplay = printerOptions.label == undefined ? \"Printer N/A\" : printerOptions.label;\n            const itemDisplayPos = \"B\" + (listItems.length + (i + 1)) + \" | \" + currentTime + \" - \" + \n                (currentDate.getMonth() + 1) + \"/\" + currentDate.getDate() + \"/\" + currentDate.getFullYear() + \"\\n | \" + printerDisplay;\n            \n            newItems.push({ uniqueKey, itemName: itemDisplayPos, itemCount: totalToAdd }); // Create new item for each batch\n        }\n    \n        setListItems([...listItems, ...newItems]); // Add all new items at once\n    \n        setTotalCount(prevTotalCount => {\n            console.log(\"new total: \", prevTotalCount);\n            return parseInt(prevTotalCount) + (countAsNum * multiplier); // Update total count\n        });\n    \n        console.log(\"handleInput Option: \", selectedOption);\n      }\n    \n      const handleTotalReset = () => {\n        setTotalCount(0)\n      }\n    \n      const handleOptionsSelection = (evt) => {\n        setSelectedOption(evt) \n      }\n    \n      const handlePrinterSelection = (evt) => {\n        setPrinterOptions(evt)\n      }\n    \n      const handleItemDelete = (itemName, itemCount, isChecked) => {\n    \n        setListItems(prevListItems => {\n          const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n          prevListItems.map(item => console.log(item.itemName))\n          // Update localStorage to store the new list items\n          console.log(\"New Items\", itemName)\n          return newListItems;\n        });\n      \n        setTotalCount(prevTotalCount => {\n          let newTotalCount;\n          if (!isChecked) {\n            newTotalCount = prevTotalCount - parseInt(itemCount);\n          } else {\n            newTotalCount = prevTotalCount;\n          }\n          // Update localStorage to store the new total count\n          return newTotalCount;\n        });\n      }\n    \n      const changeTotalCount = (isChecked, itemCount) => {\n        console.log(\"isChecked type: \", typeof(isChecked))\n        console.log(\"itemCount type: \", typeof(itemCount))\n        setTotalCount(prevTotalCount => {\n          if (isChecked) {\n            return parseInt(prevTotalCount) - parseInt(itemCount);\n          } else {\n            return parseInt(prevTotalCount) + parseInt(itemCount);\n          }\n        })\n    \n        console.log(\"changeTotal Option: \", selectedOption)  \n      }\n    \n      useEffect(() => {\n        console.log(\"----App.js UseEffect #3----\")\n        if (context) {\n          console.log(\"Context: \", context)\n          setShouldLoad(true)\n          storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems)\n          ).catch(error => { \n            console.log(error)\n            setShouldLoad(false)\n          }).finally(() => { \n            console.log(\"Loading...\")\n            setTimeout(() => {\n                setShouldLoad(false)\n            }, 1000)\n          });\n          \n        }\n    \n        \n        \n      }, [listItems]);\n\n      useEffect(() => {\n        if (isInitialized) {\n          if (context) {\n            // setShouldLoad(true)\n            storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString())\n            .catch(error => { \n                console.log(error)\n                // setShouldLoad(false)\n            }).finally(() => { \n                // setShouldLoad(false)\n            });\n        }\n\n        if (selectedOption && context && totalCount != null) {\n            console.log(\"Inner Context: \", selectedOption)\n            const boardId = context.boardId\n            console.log(\"using boardID: \", boardId)\n            const query = `mutation {\n              change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n                id\n              }\n            }`;\n            \n            monday.api(query)\n              .then((res) => {\n                console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n              })\n              .catch((err) => {\n                console.log(\"Error updating column: \", err);\n              });\n          }\n        }        \n      }, [totalCount, isInitialized])\n    \n      // Update selectedOption in the board storage when it changes\n      useEffect(() => {\n        console.log(\"----App.js UseEffect #5----\")\n        if (context) {\n          console.log(\"Context: \", context)\n        //   setShouldLoad(true)\n          storageInstance.setItem('selectedOption_'/* + context.itemId*/, JSON.stringify(selectedOption)\n          ).catch(error => { \n            console.log(error)\n            setShouldLoad(false)\n          }).finally(() => { \n            // setShouldLoad(false)\n          });\n          console.log(\"Option: \", selectedOption.value)\n        }\n        \n        \n      }, [selectedOption]);\n    \n      // Update printerOptions in the board storage when it changes\n      useEffect(() => {\n        console.log(\"----App.js UseEffect #6----\")\n        if (context) {\n          console.log(\"Context: \", context)\n        //   setShouldLoad(true)\n          storageInstance.setItem('printerOption_' + context.itemId, JSON.stringify(printerOptions)\n          ).catch(error => { \n            console.log(error)\n            setShouldLoad(false)\n          }).finally(() => { \n            // setShouldLoad(false)\n          });\n          console.log(\"Option: \", printerOptions.value)\n        }\n      }, [printerOptions])\n    \n\n    const handleClick = () => {\n        const nameVal = nameRef.current.value\n        const countVal = parseInt(countRef.current.value)\n        handleInput(nameVal, countVal)\n    }\n\n    const handleDeductClick = () => {\n      const nameVal = nameRef.current.value\n      const countVal = parseInt(countRef.current.value)\n      handleInput(nameVal, -countVal)\n    }\n\n    return (\n        <div className=\"container\">\n            {console.log(\"Loading Remount\")}\n            <div className=\"row pb-3\">\n                <div className=\"col\">\n                    <Button onClick={handleTotalReset} size={Button.sizes.SMALL} color={Button.colors.NEGATIVE}>Reset Total</Button>\n                </div>\n                <div className=\"col\">\n                    <p style={{color: \"grey\"}}>Version 2.1.1</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <h4>Enter Batches</h4>\n                </div>  \n                <div className=\"col-3\">\n                    <div className=\"row\">\n                        {/* <div className=\"col\">\n                            <h4>Total</h4>\n                        </div> */}\n                        <div className=\"col\">\n                            <Label text={totalCount}></Label>\n                        </div>\n                    </div>\n                    \n                    \n                </div>\n                <div className=\"col-6\">\n                    <Dropdown placeholder=\"Target column\" onChange={evt => handleOptionsSelection(evt)} options={colOptions} value={selectedOption}></Dropdown>\n                </div>\n            </div>\n            <div className=\"row pt-4\">\n                <div className=\"col-4\">\n                    <Dropdown placeholder=\"Printer\" onChange={evt => handlePrinterSelection(evt)} options={printerList} value={printerOptions}></Dropdown>\n                    <TextField disabled={true} ref={nameRef} type=\"text\" placeholder=\"Batch name\" />\n                </div>\n                <div className=\"col\">\n                  <div className=\"row\">\n                    <p>Multiplier</p>\n                  </div>\n                  <div className=\"row\">\n                    <TextField type=\"number\" value={multiplier} onChange={e => setMultiplier(parseInt(e) || 1)} placeholder=\"Multiplier\" /> {/* NEW: Input for multiplier */}\n                  </div>\n                </div>\n                <div className=\"col\">\n                  <div className=\"row\">\n                    <p>Quantity</p>\n                  </div>\n                  <div className=\"row\">\n                    <TextField ref={countRef} type=\"number\" value=\"0\" />  \n                  </div>\n                </div>\n                <div className=\"col-1\">\n                    <Button disabled={shouldLoad ? true : false} onClick={handleClick} size={Button.sizes.SMALL} color={Button.colors.POSITIVE}>Add</Button>\n                </div>\n                <div className=\"col\">\n                    <Button disabled={shouldLoad ? true : false} onClick={handleDeductClick} size={Button.sizes.SMALL} color={Button.colors.NEGATIVE}>Deduct</Button>\n                </div>\n                <div className=\"col-1\">\n                    { shouldLoad ? <Loader size={Loader.sizes.SMALL}></Loader> : null }\n                </div>\n            </div>\n            <Divider></Divider>\n            <div className=\"col-12\">\n                <List items={listItems} handleDelete={handleItemDelete}></List>\n            </div> \n        </div>\n    );\n}\n\nexport default ListInputMod"],"mappings":"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"},"metadata":{},"sourceType":"module"}