{"ast":null,"code":"var _jsxFileName = \"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"./modules/List.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Divider } from \"monday-ui-react-core\";\nimport { debounce } from \"lodash\";\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTI1MjEwNSwiYWFpIjoxMSwidWlkIjo1MDY1MzM4MSwiaWFkIjoiMjAyMy0xMC0yM1QyMToyNzo1Ni40NTBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTkzNTI3OTYsInJnbiI6InVzZTEifQ.6IFWFt7JJq7-tQjaLIPa2rLB8kGFRxp0bA6lrb564BI\");\nconst storageInstance = monday.storage.instance;\nconst App = () => {\n  _s();\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [nameInput, setNameInput] = useState(\"\");\n  const [countInput, setCountInput] = useState();\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({});\n  const [optionSelected, setOptionSelected] = useState(false);\n  const debounce = (func, delay) => {\n    let timer;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput));\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const newItem = {\n      uniqueKey: Math.random().toString(36).substr(2, 9),\n      itemName: nameInput,\n      itemCount: countInput\n    };\n    console.log(\"Key: \", uniqueKey);\n    setListItems([...listItems, newItem]);\n    // setListItems([...listItems, <ListItem key={uniqueKey} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n    setNameInput(\"\");\n    setCountInput();\n    console.log(\"handleInput Option: \", selectedOption);\n  };\n  const handleTotalReset = () => {\n    setTotalCount(0);\n  };\n  const handleOptionsSelection = evt => {\n    setSelectedOption(evt);\n    storageInstance.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt);\n  };\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    // setListItems(prevListItems => prevListItems.filter(item => item.itemName !== itemName));\n    // setTotalCount(prevTotalCount => {\n    //   console.log(\"PrevTotal Count: \", prevTotalCount)\n    //   if (!isChecked) {\n    //     return prevTotalCount - parseInt(itemCount)\n    //   } else if (isChecked) {\n    //     return prevTotalCount\n    //   }\n\n    // });\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName));\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName);\n      storageInstance.setItem('listItems', JSON.stringify(newListItems));\n      // localStorage.setItem('listItems', JSON.stringify(newListItems));\n      return newListItems;\n    });\n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      storageInstance.setItem('totalCount', newTotalCount);\n      // localStorage.setItem('totalCount', newTotalCount);\n      return newTotalCount;\n    });\n  };\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    });\n    console.log(\"changeTotal Option: \", selectedOption);\n  };\n  const updateNameValue = evt => {\n    setNameInput(evt);\n  };\n  const updateCountValue = evt => {\n    setCountInput(evt);\n  };\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", res => {\n      console.log(\"useEffect storage res: \", res);\n      setContext(res.data);\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        console.log(\"Response: \", response);\n        setListItems(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        setTotalCount(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('selectedOption_' + res.data.itemId).then(response => {\n        setSelectedOption(JSON.parse(response.data.value) || []);\n      });\n\n      // const localListItems = JSON.parse(localStorage.getItem('listItems_' + res.data.itemId)) || []\n      // setListItems(localListItems)\n      // const localTotalCount = parseInt(localStorage.getItem('totalCount_' + res.data.itemId)) || 0\n      // setTotalCount(localTotalCount)\n      // const localSelectedOption = JSON.parse(localStorage.getItem('selectedOption_' + res.data.itemId)) || {}\n      // setSelectedOption(localSelectedOption)\n    });\n\n    if (context) {\n      // console.log(\"Context: \", context)\n      // const boardId = context.boardId;\n\n      // const query = `query {\n      //   boards(ids: ${boardId}) {\n      //     columns {\n      //       id\n      //       title\n      //     }\n      //   }\n      // }`;\n      // monday.api(query).then((res) => {\n      //   console.log(\"res: \", res);\n      //   const columns = res.data.boards[0].columns;\n      //   console.log(\"Columns: \", columns);\n      //   const cols = columns.map(column => {\n      //       return {label: column.title, value: column.id}\n      //   })\n      //   console.log(\"cols: \", cols)\n      //   setColOptions(cols)\n      // }).catch((err) => {\n      //   console.log(\"Error fetching columns: \", err);\n      // });\n    }\n\n    // console.log(\"inputTotal:\", parseInt(totalCount))\n  }, [/*listItems, colOptions*/]);\n  useEffect(() => {\n    // Need to make it so that the add item deletes the previous item input and so that the subitems can be selected rather than just items\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption);\n      const boardId = context.boardId;\n      console.log(\"using boardID: \", boardId);\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      monday.api(query).then(res => {\n        console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n      }).catch(err => {\n        console.log(\"Error updating column: \", err);\n      });\n    }\n  }, [/*totalCount, selectedOption,*/context]);\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n  }, [listItems /*, context*/]);\n\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n      // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n  }, [totalCount /*, context*/]);\n\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context);\n      storageInstance.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value);\n    }\n  }, [selectedOption /*, context*/]);\n\n  useEffect(() => {\n    if (context) {\n      // const storedSelectedOption = localStorage.getItem('selectedOption_' + context.itemId);\n      const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n      if (storedSelectedOption) {\n        // Set it as the default selected option\n        // You may need to adapt this part to match the data structure of your `Dropdown` component\n        const defaultSelectedOption = JSON.parse(storedSelectedOption);\n        handleOptionsSelection(defaultSelectedOption);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 py-3\",\n        children: /*#__PURE__*/_jsxDEV(ListInput, {\n          nameHandler: evt => updateNameValue(evt),\n          nameValue: nameInput,\n          countHandler: evt => updateCountValue(evt),\n          countValue: countInput,\n          totalCount: totalCount,\n          dropdownHandler: evt => handleOptionsSelection(evt),\n          clickFunction: handleInput,\n          resetTotalFunction: handleTotalReset,\n          disabledCheck: selectedOption.value !== undefined ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          items: listItems,\n          handleDelete: handleItemDelete,\n          handleTotalCount: changeTotalCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QLU3Uwb4MA6y1YG1J/uZElHqKVw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mondaySdk","List","ListInput","Divider","debounce","jsxDEV","_jsxDEV","monday","setToken","storageInstance","storage","instance","App","_s","context","setContext","listItems","setListItems","nameInput","setNameInput","countInput","setCountInput","totalCount","setTotalCount","selectedOption","setSelectedOption","optionSelected","setOptionSelected","func","delay","timer","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","handleInput","parseInt","uniqueKey","Math","random","toString","substr","newItem","itemName","itemCount","console","log","handleTotalReset","handleOptionsSelection","evt","setItem","itemId","JSON","stringify","handleItemDelete","isChecked","prevListItems","newListItems","filter","item","map","prevTotalCount","newTotalCount","changeTotalCount","updateNameValue","updateCountValue","execute","listen","res","data","getItem","then","response","parse","value","boardId","query","api","catch","err","storedSelectedOption","defaultSelectedOption","className","children","nameHandler","nameValue","countHandler","countValue","dropdownHandler","clickFunction","resetTotalFunction","disabledCheck","undefined","fileName","_jsxFileName","lineNumber","columnNumber","items","handleDelete","handleTotalCount","_c","$RefreshReg$"],"sources":["/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport List from \"./modules/List.js\"\nimport ListInput from \"./modules/ListInput.js\";\nimport { Divider } from \"monday-ui-react-core\"\nimport { debounce } from \"lodash\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI5MTI1MjEwNSwiYWFpIjoxMSwidWlkIjo1MDY1MzM4MSwiaWFkIjoiMjAyMy0xMC0yM1QyMToyNzo1Ni40NTBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTkzNTI3OTYsInJnbiI6InVzZTEifQ.6IFWFt7JJq7-tQjaLIPa2rLB8kGFRxp0bA6lrb564BI\");\nconst storageInstance = monday.storage.instance;\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([]);\n  const [nameInput, setNameInput] = useState(\"\")\n  const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0);\n  // const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({}); \n  const [optionSelected, setOptionSelected] = useState(false);\n\n  const debounce = (func, delay) => {\n    let timer;\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput))\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    const newItem = { uniqueKey: Math.random().toString(36).substr(2, 9), itemName: nameInput, itemCount: countInput };\n    console.log(\"Key: \", uniqueKey)\n    setListItems([...listItems, newItem])\n    // setListItems([...listItems, <ListItem key={uniqueKey} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n    setNameInput(\"\")\n    setCountInput()\n    console.log(\"handleInput Option: \", selectedOption)\n  }\n\n  const handleTotalReset = () => {\n    setTotalCount(0)\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt) \n    storageInstance.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n    console.log(\"handleOptions Option: \", evt) \n  }\n\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    // setListItems(prevListItems => prevListItems.filter(item => item.itemName !== itemName));\n    // setTotalCount(prevTotalCount => {\n    //   console.log(\"PrevTotal Count: \", prevTotalCount)\n    //   if (!isChecked) {\n    //     return prevTotalCount - parseInt(itemCount)\n    //   } else if (isChecked) {\n    //     return prevTotalCount\n    //   }\n      \n    // });\n    setListItems(prevListItems => {\n      const newListItems = prevListItems.filter(item => item.itemName !== itemName);\n      prevListItems.map(item => console.log(item.itemName))\n      // Update localStorage to store the new list items\n      console.log(\"New Items\", itemName)\n      storageInstance.setItem('listItems', JSON.stringify(newListItems));\n      // localStorage.setItem('listItems', JSON.stringify(newListItems));\n      return newListItems;\n    });\n  \n    setTotalCount(prevTotalCount => {\n      let newTotalCount;\n      if (!isChecked) {\n        newTotalCount = prevTotalCount - parseInt(itemCount);\n      } else {\n        newTotalCount = prevTotalCount;\n      }\n      // Update localStorage to store the new total count\n      storageInstance.setItem('totalCount', newTotalCount);\n      // localStorage.setItem('totalCount', newTotalCount);\n      return newTotalCount;\n    });\n  }\n\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    })\n\n    console.log(\"changeTotal Option: \", selectedOption)  \n  }\n\n\n  const updateNameValue = (evt) => {\n    setNameInput(evt);\n  }\n\n\n  const updateCountValue = (evt) => {\n    setCountInput(evt);\n  }\n\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      console.log(\"useEffect storage res: \", res)\n      setContext(res.data);\n\n      storageInstance.getItem('listItems_' + res.data.itemId).then(response => {\n        console.log(\"Response: \", response)\n        setListItems(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('totalCount_' + res.data.itemId).then(response => {\n        setTotalCount(JSON.parse(response.data.value) || []);\n      });\n      storageInstance.getItem('selectedOption_' + res.data.itemId).then(response => {\n        setSelectedOption(JSON.parse(response.data.value) || []);\n      });\n\n      // const localListItems = JSON.parse(localStorage.getItem('listItems_' + res.data.itemId)) || []\n      // setListItems(localListItems)\n      // const localTotalCount = parseInt(localStorage.getItem('totalCount_' + res.data.itemId)) || 0\n      // setTotalCount(localTotalCount)\n      // const localSelectedOption = JSON.parse(localStorage.getItem('selectedOption_' + res.data.itemId)) || {}\n      // setSelectedOption(localSelectedOption)\n    });\n\n    if (context) {\n      // console.log(\"Context: \", context)\n      // const boardId = context.boardId;\n      \n      // const query = `query {\n      //   boards(ids: ${boardId}) {\n      //     columns {\n      //       id\n      //       title\n      //     }\n      //   }\n      // }`;\n      // monday.api(query).then((res) => {\n      //   console.log(\"res: \", res);\n      //   const columns = res.data.boards[0].columns;\n      //   console.log(\"Columns: \", columns);\n      //   const cols = columns.map(column => {\n      //       return {label: column.title, value: column.id}\n      //   })\n      //   console.log(\"cols: \", cols)\n      //   setColOptions(cols)\n      // }).catch((err) => {\n      //   console.log(\"Error fetching columns: \", err);\n      // });\n    }\n    \n    \n    // console.log(\"inputTotal:\", parseInt(totalCount))\n    \n  }, [/*listItems, colOptions*/]);\n\n  useEffect(() => { // Need to make it so that the add item deletes the previous item input and so that the subitems can be selected rather than just items\n    if (selectedOption && context && totalCount != null) {\n      console.log(\"Inner Context: \", selectedOption)\n      const boardId = context.boardId\n      console.log(\"using boardID: \", boardId)\n      const query = `mutation {\n        change_simple_column_value (board_id: ${boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n      \n      monday.api(query)\n        .then((res) => {\n          console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n        })\n        .catch((err) => {\n          console.log(\"Error updating column: \", err);\n        });\n    }\n  }, [/*totalCount, selectedOption,*/ context]);\n\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n      // localStorage.setItem('listItems_' + context.itemId, JSON.stringify(listItems));\n    }\n    \n  }, [listItems/*, context*/]);\n\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('totalCount_' + context.itemId, totalCount.toString());\n      // localStorage.setItem('totalCount_' + context.itemId, totalCount.toString());\n    }\n    \n  }, [totalCount/*, context*/]);\n\n  useEffect(() => {\n    if (context) {\n      console.log(\"Context: \", context)\n      storageInstance.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      // localStorage.setItem('selectedOption_' + context.itemId, JSON.stringify(selectedOption));\n      console.log(\"Option: \", selectedOption.value)\n    }\n    \n    \n  }, [selectedOption/*, context*/]);\n\n  useEffect(() => {\n    if (context) {\n      // const storedSelectedOption = localStorage.getItem('selectedOption_' + context.itemId);\n      const storedSelectedOption = storageInstance.getItem('selectedOption_' + context.itemId);\n      if (storedSelectedOption) {\n        // Set it as the default selected option\n        // You may need to adapt this part to match the data structure of your `Dropdown` component\n        const defaultSelectedOption = JSON.parse(storedSelectedOption);\n        handleOptionsSelection(defaultSelectedOption);\n      }\n    }\n    \n  }, [])\n\n\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <div className=\"col-12 py-3\">\n          <ListInput \n            nameHandler={evt => updateNameValue(evt)} \n            nameValue={nameInput}\n            countHandler={evt => updateCountValue(evt)} \n            countValue={countInput}\n            totalCount={totalCount} \n            dropdownHandler={evt => handleOptionsSelection(evt)}\n            clickFunction={handleInput}\n            resetTotalFunction={handleTotalReset}\n            disabledCheck={selectedOption.value !== undefined ? false : true }>\n          </ListInput>\n        </div>\n        <Divider></Divider>\n        <div className=\"col-12\">\n          <List items={listItems} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></List>\n        </div> \n      </div>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}