[{"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/index.js":"1","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js":"2","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/serviceWorker.js":"3","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/List.js":"4","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/ListItem.js":"5","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/ListInput.js":"6"},{"size":527,"mtime":1697693108164,"results":"7","hashOfConfig":"8"},{"size":5799,"mtime":1698007656567,"results":"9","hashOfConfig":"8"},{"size":5085,"mtime":1697579041844,"results":"10","hashOfConfig":"8"},{"size":619,"mtime":1697840021809,"results":"11","hashOfConfig":"8"},{"size":1528,"mtime":1697771236814,"results":"12","hashOfConfig":"8"},{"size":4297,"mtime":1698007068024,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1egxa5j",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/index.js",[],[],[],"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/App.js",["36","37","38","39","40","41","42","43"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\n//Explore more Monday React Components here: https://style.monday.com/\nimport AttentionBox from \"monday-ui-react-core/dist/AttentionBox.js\";\nimport List from \"./modules/List.js\"\nimport ListItem from \"./modules/ListItem.js\";\nimport ListInput from \"./modules/ListInput.js\";\nimport { Row, Col } from 'react-bootstrap';\nimport { Box, Divider } from \"monday-ui-react-core\"\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\nmonday.setToken(\"eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjI3Mjk5MDQ5NiwiYWFpIjoxMSwidWlkIjozNjI5NTI0NywiaWFkIjoiMjAyMy0wOC0wM1QyMToyMjozNy4wMDBaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MTI3MTA0ODYsInJnbiI6InVzZTEifQ.XIrSWOWgg3U7oRd9zrKzL0WAr8Peo5b4ZIU1vfw0T2w\");\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [listItems, setListItems] = useState([])\n  const [nameInput, setNameInput] = useState(\"\")\n  const [countInput, setCountInput] = useState()\n  const [totalCount, setTotalCount] = useState(0)\n  const [colOptions, setColOptions] = useState([])\n  const [selectedOption, setSelectedOption] = useState({})  \n\n  const handleInput = () => {\n    setTotalCount(totalCount + parseInt(countInput))\n    const uniqueKey = Math.random().toString(36).substr(2, 9);\n    console.log(\"Key: \", uniqueKey)\n    setListItems([...listItems, <ListItem key={uniqueKey} itemName={nameInput} itemCount={countInput} handleDelete={handleItemDelete} handleTotalCount={changeTotalCount}></ListItem>])\n    setNameInput(\"\")\n    setCountInput()\n    console.log(\"Option: \", selectedOption)\n  }\n\n  const handleOptionsSelection = (evt) => {\n    setSelectedOption(evt) \n    console.log(\"Option: \", evt) \n  }\n\n  const handleItemDelete = (itemName, itemCount, isChecked) => {\n    setListItems(prevListItems => prevListItems.filter(item => item.key !== itemName));\n    setTotalCount(prevTotalCount => {\n      if (!isChecked) {\n        return prevTotalCount - parseInt(itemCount)\n      } else if (isChecked) {\n        return prevTotalCount\n      }\n      \n    });\n  }\n\n\n  const changeTotalCount = (isChecked, itemCount) => {\n    setTotalCount(prevTotalCount => {\n      if (isChecked) {\n        return prevTotalCount - parseInt(itemCount);\n      } else {\n        return prevTotalCount + parseInt(itemCount);\n      }\n    })\n\n    console.log(\"Option: \", selectedOption)  \n  }\n\n\n  const updateNameValue = (evt) => {\n    setNameInput(evt);\n  }\n\n\n  const updateCountValue = (evt) => {\n    setCountInput(evt);\n  }\n\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      // console.log(\"res: \", res)\n      setContext(res.data);\n    });\n\n    if (context) {\n      // console.log(\"Context: \", context)\n      // const boardId = context.boardId;\n      \n      // const query = `query {\n      //   boards(ids: ${boardId}) {\n      //     columns {\n      //       id\n      //       title\n      //     }\n      //   }\n      // }`;\n      // monday.api(query).then((res) => {\n      //   console.log(\"res: \", res);\n      //   const columns = res.data.boards[0].columns;\n      //   console.log(\"Columns: \", columns);\n      //   const cols = columns.map(column => {\n      //       return {label: column.title, value: column.id}\n      //   })\n      //   console.log(\"cols: \", cols)\n      //   setColOptions(cols)\n      // }).catch((err) => {\n      //   console.log(\"Error fetching columns: \", err);\n      // });\n    }\n    \n    \n    // console.log(\"inputTotal:\", parseInt(totalCount))\n    \n  }, [listItems, colOptions]);\n\n  useEffect(() => { // Need to make it so that the add item deletes the previous item input and so that the subitems can be selected rather than just items\n    if (selectedOption && context && totalCount != null) {\n      const query = `mutation {\n        change_simple_column_value (board_id: ${context.boardId}, item_id: ${context.itemId}, column_id: \"${selectedOption.value}\", value: \"${JSON.stringify(totalCount)}\") {\n          id\n        }\n      }`;\n  \n      monday.api(query)\n        .then((res) => {\n          console.log(\"Column updated successfully: \", res, \"with \", totalCount);\n        })\n        .catch((err) => {\n          console.log(\"Error updating column: \", err);\n        });\n    }\n  }, [totalCount, selectedOption]);\n\n\n\n  //Some example what you can do with context, read more here: https://developer.monday.com/apps/docs/mondayget#requesting-context-and-settings-data\n  const attentionBoxText = `Hello, your user_id is: ${\n    context ? context.user.id : \"still loading\"\n  }.\n  Let's start building your amazing app, which will change the world!`;\n\n\n  \n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <div className=\"col-12 py-3\">\n          <ListInput \n            nameHandler={evt => updateNameValue(evt)} \n            nameValue={nameInput}\n            countHandler={evt => updateCountValue(evt)} \n            countValue={countInput}\n            totalCount={totalCount} \n            dropdownHandler={evt => handleOptionsSelection(evt)}\n            clickFunction={handleInput}>\n          </ListInput>\n        </div>\n        <Divider></Divider>\n        <div className=\"col-12\">\n          <List items={listItems}></List>\n        </div> \n      </div>\n    </div>\n  );\n};\nexport default App;\n","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/serviceWorker.js",[],[],"/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/List.js",["44"],[],"import React from \"react\"\nimport { Box } from \"monday-ui-react-core\"\nimport ListItem from \"./ListItem.js\"\n\nconst List = ({items}) => {\n\n    return (\n        <div>\n            <Box textColor={Box.textColors.PRIMARY_TEXT_COLOR} border={Box.borders.DEFAULT} rounded={Box.roundeds.MEDIUM}>\n                {items.map((item) => (\n                    item\n                    ))\n                }\n            </Box>\n        </div>\n    );\n}\n// <ListItem key={item.key} itemName={item.itemName} itemCount={item.itemCount} handleDelete={item.handleDelete} handleTotalCount={item.changeTotalCount}></ListItem>\nexport default List","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/ListItem.js",["45","46"],[],"import React from \"react\"\nimport { Checkbox, Label, Divider, IconButton } from \"monday-ui-react-core\"\nimport { Erase } from \"monday-ui-react-core/icons\" \nimport { useState, useEffect } from \"react\";\n\nconst ListItem = ({itemName, itemCount, handleDelete, handleTotalCount}) => {\n    const [isChecked, setIsChecked] = useState(false);\n\n    const getSome = () => {\n        console.log(\"test\")\n    }\n\n\n    return (\n        <div className=\"container align-middle\">\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <Checkbox className=\"align-middle\" onChange={() => {setIsChecked(!isChecked); handleTotalCount(!isChecked, parseInt(itemCount));}} label={itemName}></Checkbox>\n                </div>                \n                <div className=\"col-5\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Label text={itemCount} color={Label.colors.Dark} kind={Label.kinds.LINE}></Label>\n                        </div>\n                        <div className=\"col\">\n                            <IconButton icon={Erase} color onClick={() => handleDelete(itemName, itemCount, isChecked)}></IconButton>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    <Divider></Divider>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ListItem","/home/nenwam/Documents/rallyessentials/batchtask/quickstart-react/src/modules/ListInput.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":7,"column":8,"nodeType":"49","messageId":"50","endLine":7,"endColumn":20},{"ruleId":"47","severity":1,"message":"51","line":11,"column":10,"nodeType":"49","messageId":"50","endLine":11,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":11,"column":15,"nodeType":"49","messageId":"50","endLine":11,"endColumn":18},{"ruleId":"47","severity":1,"message":"53","line":12,"column":10,"nodeType":"49","messageId":"50","endLine":12,"endColumn":13},{"ruleId":"47","severity":1,"message":"54","line":24,"column":22,"nodeType":"49","messageId":"50","endLine":24,"endColumn":35},{"ruleId":"55","severity":1,"message":"56","line":118,"column":6,"nodeType":"57","endLine":118,"endColumn":29,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"56","line":136,"column":6,"nodeType":"57","endLine":136,"endColumn":34,"suggestions":"59"},{"ruleId":"47","severity":1,"message":"60","line":141,"column":9,"nodeType":"49","messageId":"50","endLine":141,"endColumn":25},{"ruleId":"47","severity":1,"message":"61","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":16},{"ruleId":"47","severity":1,"message":"62","line":4,"column":20,"nodeType":"49","messageId":"50","endLine":4,"endColumn":29},{"ruleId":"47","severity":1,"message":"63","line":9,"column":11,"nodeType":"49","messageId":"50","endLine":9,"endColumn":18},"no-unused-vars","'AttentionBox' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Box' is defined but never used.","'setColOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["64"],["65"],"'attentionBoxText' is assigned a value but never used.","'ListItem' is defined but never used.","'useEffect' is defined but never used.","'getSome' is assigned a value but never used.",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [listItems, colOptions, context]",{"range":"70","text":"71"},"Update the dependencies array to be: [totalCount, selectedOption, context]",{"range":"72","text":"73"},[4032,4055],"[listItems, colOptions, context]",[4762,4790],"[totalCount, selectedOption, context]"]