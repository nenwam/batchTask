import{__rest as o}from"../../../_virtual/_tslib.js";import t,{forwardRef as s,useContext as e,useRef as r}from"react";import i from"classnames";import l from"../../hooks/useMergeRef.js";import{getTestId as a}from"../../tests/testIds.js";import{ComponentDefaultTestId as m}from"../../tests/constants.js";import{useEllipsisClass as p,useTooltipProps as n}from"./TypographyHooks.js";import d from"../Tooltip/Tooltip.js";import{TypographyContext as c}from"./utils/TypographyContext.js";import f from"./Typography.module.scss.js";var v=s((function(s,v){var y=s.className,j=s.id,u=s.children,T=s.tooltipProps,g=s["data-testid"],h=void 0===g?a(m.TEXT,j):g,x=s.element,b=void 0===x?"span":x,w=s.color,E=void 0===w?"primary":w,N=s.align,k=void 0===N?"start":N,L=s.ellipsis,O=void 0===L||L,P=s.maxLines,_=void 0===P?1:P,C=s.withoutTooltip,H=void 0!==C&&C,I=s.role,M=o(s,["className","id","children","tooltipProps","data-testid","element","color","align","ellipsis","maxLines","withoutTooltip","role"]),R=e(c).overflowTolerance,X=r(null),q=l(v,X),z=1===_,A=p(O,_),B=A.class,D=A.style,F=n(X,H,O,T,u,z,R);return t.createElement(d,Object.assign({},F),t.createElement(b,Object.assign({id:j,style:D,"data-testid":h,className:i(f.typography,f[E],f[k],B,y),ref:q,role:I},M),u))}));export{v as default};
//# sourceMappingURL=Typography.js.map
