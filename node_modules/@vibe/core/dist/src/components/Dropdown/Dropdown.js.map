{"version":3,"file":"Dropdown.js","sources":["../../../../src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport { BaseSizes, SIZES_VALUES } from \"../../constants\";\nimport React, { forwardRef, useCallback, useMemo, useRef, useState, useEffect } from \"react\";\nimport Select, { InputProps, components, createFilter, ActionMeta } from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport BaseSelect from \"react-select/base\";\nimport { noop as NOOP } from \"lodash-es\";\nimport MenuComponent from \"./components/menu/menu\";\nimport DropdownIndicatorComponent from \"./components/DropdownIndicator/DropdownIndicator\";\nimport OptionComponent from \"./components/option/option\";\nimport SingleValueComponent from \"./components/singleValue/singleValue\";\nimport ClearIndicatorComponent from \"./components/ClearIndicator/ClearIndicator\";\nimport MultiValueContainer from \"./components/MultiValueContainer/MultiValueContainer\";\nimport { isClient } from \"../../utils/ssr-utils\";\nimport {\n  ADD_AUTO_HEIGHT_COMPONENTS,\n  defaultCustomStyles,\n  DROPDOWN_CHIP_COLORS,\n  DROPDOWN_ID,\n  DROPDOWN_INPUT_ARIA_LABEL,\n  DROPDOWN_MENU_ARIA_LABEL,\n  DROPDOWN_MENU_ID,\n  DROPDOWN_MENU_PLACEMENT,\n  DROPDOWN_MENU_POSITION\n} from \"./DropdownConstants\";\nimport generateBaseStyles, { customTheme } from \"./Dropdown.styles\";\nimport Control from \"./components/Control/Control\";\nimport menuStyles from \"./components/menu/menu.module.scss\";\nimport styles from \"./Dropdown.module.scss\";\nimport {\n  DropdownOption,\n  DropdownState,\n  CustomMenuProps,\n  CustomOptionProps,\n  CustomSingleValueProps,\n  DropdownComponentProps\n} from \"./Dropdown.types\";\nimport { VibeComponent, withStaticProps } from \"../../types\";\n\nconst Dropdown: VibeComponent<DropdownComponentProps, HTMLElement> & {\n  sizes?: typeof BaseSizes;\n  chipColors?: typeof DROPDOWN_CHIP_COLORS;\n  menuPlacements?: typeof DROPDOWN_MENU_PLACEMENT;\n  menuPositions?: typeof DROPDOWN_MENU_POSITION;\n  createFilter?: typeof createFilter;\n} = forwardRef(\n  (\n    {\n      className,\n      optionWrapperClassName,\n      singleValueWrapperClassName,\n      dropdownMenuWrapperClassName,\n      placeholder = \"\",\n      disabled = false,\n      readOnly = false,\n      onMenuOpen = NOOP,\n      onMenuClose = NOOP,\n      onFocus = NOOP,\n      onBlur = NOOP,\n      onScroll = NOOP,\n      onMenuScrollToBottom = NOOP,\n      onChange: customOnChange = NOOP,\n      searchable = true,\n      captureMenuScroll = false,\n      options = [],\n      defaultValue,\n      value: customValue,\n      noOptionsMessage,\n      openMenuOnFocus,\n      openMenuOnClick,\n      clearable = true,\n      OptionRenderer,\n      optionRenderer,\n      ValueRenderer,\n      valueRenderer,\n      menuRenderer,\n      menuPlacement = \"bottom\",\n      rtl,\n      size = \"medium\",\n      asyncOptions,\n      cacheOptions,\n      defaultOptions,\n      isVirtualized,\n      menuPortalTarget,\n      extraStyles = defaultCustomStyles,\n      maxMenuHeight,\n      menuIsOpen,\n      tabIndex = \"0\",\n      id = DROPDOWN_ID,\n      menuId = DROPDOWN_MENU_ID,\n      menuAriaLabel = DROPDOWN_MENU_ARIA_LABEL,\n      inputAriaLabel = DROPDOWN_INPUT_ARIA_LABEL,\n      autoFocus = false,\n      multi = false,\n      multiline = false,\n      onOptionRemove: customOnOptionRemove,\n      onOptionSelect,\n      onClear,\n      onInputChange = NOOP,\n      closeMenuOnSelect = !multi,\n      closeMenuOnScroll: customCloseMenuOnScroll = false,\n      withMandatoryDefaultOptions = false,\n      isOptionSelected,\n      insideOverflowContainer = false,\n      insideOverflowWithTransformContainer = false,\n      tooltipContent = \"\",\n      onKeyDown = NOOP,\n      isLoading = false,\n      loadingMessage,\n      ariaLabel,\n      tabSelectsValue = true,\n      popupsContainerSelector,\n      filterOption,\n      menuPosition = \"absolute\",\n      \"data-testid\": dataTestId,\n      withGroupDivider = false,\n      inputValue,\n      blurInputOnSelect\n    }: DropdownComponentProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const controlRef = useRef();\n    const overrideMenuPortalTarget =\n      menuPortalTarget || (popupsContainerSelector && document.querySelector(popupsContainerSelector));\n    const overrideDefaultValue = useMemo(() => {\n      if (defaultValue) {\n        return Array.isArray(defaultValue)\n          ? (defaultValue as DropdownOption[]).map(df => ({ ...df, isMandatory: true }))\n          : { ...(defaultValue as DropdownOption), isMandatory: true };\n      }\n\n      return defaultValue;\n    }, [defaultValue]);\n\n    BaseSelect.prototype.renderLiveRegion = (): null => {\n      return null;\n    };\n\n    // SSR support\n    const [WindowedMenuList, setWindowedMenuList] = useState(null);\n    useEffect(() => {\n      if (isClient()) {\n        if (process.env.NODE_ENV === \"test\") {\n          // eslint-disable-next-line @typescript-eslint/no-var-requires\n          const module = require(\"react-windowed-select\");\n          setWindowedMenuList(() => module.WindowedMenuList);\n        } else {\n          // Dynamically import the specific named export from react-windowed-select for SSR support\n          import(\"react-windowed-select\").then(module => {\n            setWindowedMenuList(() => module.WindowedMenuList);\n          });\n        }\n      }\n    }, []);\n\n    const [selected, setSelected] = useState(overrideDefaultValue || []);\n    const [focusedOptionId, setFocusedOptionId] = useState(\"\");\n    const finalOptionRenderer = optionRenderer || OptionRenderer;\n    const finalValueRenderer = valueRenderer || ValueRenderer;\n    const isControlled = !!customValue;\n    const selectedOptions = customValue ?? selected;\n    const selectedOptionsMap = useMemo(() => {\n      if (Array.isArray(selectedOptions)) {\n        return selectedOptions.reduce((acc, option) => ({ ...acc, [option.value]: option }), {});\n      }\n      return {};\n    }, [selectedOptions]);\n\n    const overrideAriaLabel = useMemo(() => {\n      return (\n        ariaLabel ||\n        `${readOnly ? \"Readonly \" : \"\"} ${tooltipContent} ${\n          Array.isArray(selectedOptions) ? `Selected: ${selectedOptions.map(o => o.label).join(\", \")}` : \"Select\"\n        }`\n      );\n    }, [ariaLabel, readOnly, selectedOptions, tooltipContent]);\n    const value = multi ? selectedOptions : customValue;\n\n    const inlineStyles = useMemo(() => {\n      // We first want to get the default stylized groups (e.g. \"container\", \"menu\").\n      const baseStyles = generateBaseStyles({\n        size,\n        rtl,\n        insideOverflowContainer,\n        controlRef,\n        insideOverflowWithTransformContainer,\n        withGroupDivider\n      });\n\n      type BaseStyles = typeof baseStyles;\n\n      // Then we want to run the consumer's root-level custom styles with our \"base\" override groups.\n      const customStyles = extraStyles(baseStyles);\n\n      // Lastly, we create a style groups object that makes sure we run each custom group with our basic overrides.\n      const mergedStyles: any = Object.entries(customStyles).reduce((accumulator, [stylesGroup, stylesFn]) => {\n        return {\n          ...accumulator,\n          [stylesGroup]: (defaultStyles: BaseStyles, state: DropdownState) => {\n            const providedFn = baseStyles[stylesGroup as keyof BaseStyles];\n            const provided = providedFn ? providedFn(defaultStyles, state) : defaultStyles;\n\n            return stylesFn(provided, state);\n          }\n        };\n      }, {} as BaseStyles);\n\n      if (multi) {\n        if (multiline) {\n          ADD_AUTO_HEIGHT_COMPONENTS.forEach((component: string) => {\n            const original = mergedStyles[component];\n            mergedStyles[component] = (provided: BaseStyles, state: DropdownState) => ({\n              ...original(provided, state),\n              height: \"auto\"\n            });\n          });\n        }\n\n        const originalValueContainer = mergedStyles.valueContainer;\n        mergedStyles.valueContainer = (provided: BaseStyles, state: DropdownState) => ({\n          ...originalValueContainer(provided, state),\n          paddingLeft: 6\n        });\n      }\n\n      return mergedStyles;\n    }, [size, rtl, insideOverflowContainer, insideOverflowWithTransformContainer, extraStyles, multi, multiline]);\n\n    const Menu = useCallback(\n      (props: CustomMenuProps) => (\n        <MenuComponent\n          {...props}\n          id={menuId}\n          ariaLabel={menuAriaLabel}\n          Renderer={menuRenderer}\n          dropdownMenuWrapperClassName={dropdownMenuWrapperClassName}\n          onScroll={onScroll}\n        />\n      ),\n      [dropdownMenuWrapperClassName, menuRenderer, menuId, menuAriaLabel, onScroll]\n    );\n\n    const DropdownIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <DropdownIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const Option = useCallback(\n      (props: CustomOptionProps) => (\n        <OptionComponent\n          setFocusedOptionId={setFocusedOptionId}\n          {...props}\n          Renderer={finalOptionRenderer}\n          optionWrapperClassName={optionWrapperClassName}\n        />\n      ),\n      [finalOptionRenderer, optionWrapperClassName, setFocusedOptionId]\n    );\n\n    const Input = useCallback(\n      (props: InputProps | any) => {\n        const { focusedOptionId, menuIsOpen } = props.selectProps;\n        const ariaActiveDescendant = focusedOptionId && menuIsOpen ? focusedOptionId : \"\";\n        return (\n          <components.Input\n            {...props}\n            aria-activedescendant={ariaActiveDescendant}\n            role=\"combobox\"\n            aria-expanded={!readOnly && menuIsOpen}\n            aria-label={inputAriaLabel}\n            aria-controls={menuId}\n          />\n        );\n      },\n      [menuId, readOnly]\n    );\n\n    const SingleValue = useCallback(\n      (props: CustomSingleValueProps) => (\n        <SingleValueComponent\n          {...props}\n          readOnly={readOnly}\n          Renderer={finalValueRenderer}\n          selectedOption={selectedOptions[0]}\n          singleValueWrapperClassName={singleValueWrapperClassName}\n        />\n      ),\n      [finalValueRenderer, readOnly, selectedOptions, singleValueWrapperClassName]\n    );\n\n    const ClearIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <ClearIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const onOptionRemove = useMemo(() => {\n      return function (optionValue: number, e: React.MouseEvent | React.KeyboardEvent) {\n        if (customOnOptionRemove) {\n          customOnOptionRemove(selectedOptionsMap[optionValue]);\n        }\n        const newSelectedOptions = Array.isArray(selectedOptions)\n          ? selectedOptions.filter(option => option.value !== optionValue)\n          : selectedOptions;\n\n        if (customOnChange) {\n          customOnChange(newSelectedOptions, e);\n        }\n        setSelected(newSelectedOptions);\n      };\n    }, [customOnChange, customOnOptionRemove, selectedOptions, selectedOptionsMap]);\n\n    const customProps = useMemo(\n      () => ({\n        selectedOptions,\n        onSelectedDelete: onOptionRemove,\n        isMultiline: multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        controlRef,\n        tooltipContent,\n        popupsContainerSelector,\n        size\n      }),\n      [\n        selectedOptions,\n        onOptionRemove,\n        multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        tooltipContent,\n        popupsContainerSelector,\n        size\n      ]\n    );\n    const onChange = (option: DropdownOption | DropdownOption[], meta: ActionMeta<DropdownOption>) => {\n      if (customOnChange) {\n        customOnChange(option, meta);\n      }\n\n      switch (meta.action) {\n        case \"select-option\": {\n          const selectedOption = multi ? meta.option : option;\n\n          if (onOptionSelect) {\n            onOptionSelect(selectedOption);\n          }\n\n          if (!isControlled) {\n            setSelected([...selectedOptions, selectedOption]);\n          }\n          break;\n        }\n\n        case \"clear\":\n          if (onClear) {\n            onClear();\n          }\n\n          if (!isControlled) {\n            if (withMandatoryDefaultOptions) setSelected(overrideDefaultValue);\n            else setSelected([]);\n          }\n          break;\n      }\n    };\n\n    const DropDownComponent: React.ElementType = asyncOptions ? AsyncSelect : Select;\n\n    const asyncAdditions = {\n      ...(asyncOptions && {\n        loadOptions: asyncOptions,\n        cacheOptions,\n        ...(defaultOptions && { defaultOptions })\n      })\n    };\n\n    const additions = {\n      ...(!asyncOptions && { options }),\n      ...(multi && {\n        isMulti: true\n      })\n    };\n\n    const closeMenuOnScroll = useCallback(\n      (event: React.FocusEvent) => {\n        const scrolledElement = event.target;\n        if (scrolledElement?.parentElement?.classList.contains(menuStyles.dropdownMenuWrapper)) {\n          return false;\n        }\n        return customCloseMenuOnScroll || insideOverflowContainer || insideOverflowWithTransformContainer;\n      },\n      [insideOverflowContainer, insideOverflowWithTransformContainer, customCloseMenuOnScroll]\n    );\n\n    return (\n      <DropDownComponent\n        className={cx(styles.dropdown, className)}\n        selectProps={customProps}\n        components={{\n          DropdownIndicator,\n          Menu,\n          ClearIndicator,\n          Input,\n          Option,\n          Control,\n          SingleValue,\n          ...(multi && {\n            MultiValue: NOOP, // We need it for react-select to behave nice with \"multi\"\n            ValueContainer: MultiValueContainer\n          }),\n          ...(isVirtualized && WindowedMenuList && { MenuList: WindowedMenuList })\n        }}\n        // When inside scroll we set the menu position by js and we can't follow the drop down location while use scrolling\n        closeMenuOnScroll={closeMenuOnScroll}\n        size={size}\n        noOptionsMessage={noOptionsMessage}\n        placeholder={placeholder}\n        isDisabled={disabled}\n        isClearable={!readOnly && clearable}\n        isSearchable={!readOnly && searchable}\n        readOnly={readOnly}\n        aria-readonly={readOnly}\n        aria-label={overrideAriaLabel}\n        aria-details={tooltipContent}\n        aria-haspopup=\"listbox\"\n        defaultValue={defaultValue}\n        value={value}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onMenuScrollToBottom={onMenuScrollToBottom}\n        captureMenuScroll={captureMenuScroll}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onInputChange={onInputChange}\n        openMenuOnFocus={openMenuOnFocus}\n        openMenuOnClick={openMenuOnClick}\n        focusedOptionId={focusedOptionId}\n        isRtl={rtl}\n        styles={inlineStyles}\n        theme={customTheme}\n        maxMenuHeight={maxMenuHeight}\n        menuPortalTarget={overrideMenuPortalTarget}\n        menuPlacement={menuPlacement}\n        menuPosition={menuPosition}\n        menuIsOpen={!readOnly && menuIsOpen}\n        tabIndex={tabIndex}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.DROPDOWN, id)}\n        autoFocus={autoFocus}\n        closeMenuOnSelect={closeMenuOnSelect}\n        ref={ref as React.Ref<any>}\n        withMandatoryDefaultOptions={withMandatoryDefaultOptions}\n        isOptionSelected={isOptionSelected}\n        isLoading={isLoading}\n        loadingMessage={loadingMessage}\n        tabSelectsValue={tabSelectsValue}\n        filterOption={filterOption}\n        inputValue={inputValue}\n        blurInputOnSelect={blurInputOnSelect}\n        {...asyncAdditions}\n        {...additions}\n      />\n    );\n  }\n);\n\nexport default withStaticProps(Dropdown, {\n  sizes: BaseSizes,\n  chipColors: DROPDOWN_CHIP_COLORS,\n  menuPlacements: DROPDOWN_MENU_PLACEMENT,\n  menuPositions: DROPDOWN_MENU_POSITION,\n  createFilter: createFilter\n});\n"],"names":["withStaticProps","forwardRef","_ref","ref","className","optionWrapperClassName","singleValueWrapperClassName","dropdownMenuWrapperClassName","_ref$placeholder","placeholder","_ref$disabled","disabled","_ref$readOnly","readOnly","_ref$onMenuOpen","onMenuOpen","NOOP","_ref$onMenuClose","onMenuClose","_ref$onFocus","onFocus","_ref$onBlur","onBlur","_ref$onScroll","onScroll","_ref$onMenuScrollToBo","onMenuScrollToBottom","_ref$onChange","onChange","customOnChange","_ref$searchable","searchable","_ref$captureMenuScrol","captureMenuScroll","_ref$options","options","defaultValue","customValue","value","noOptionsMessage","openMenuOnFocus","openMenuOnClick","_ref$clearable","clearable","OptionRenderer","optionRenderer","ValueRenderer","valueRenderer","menuRenderer","_ref$menuPlacement","menuPlacement","rtl","_ref$size","size","asyncOptions","cacheOptions","defaultOptions","isVirtualized","menuPortalTarget","_ref$extraStyles","extraStyles","defaultCustomStyles","maxMenuHeight","menuIsOpen","_ref$tabIndex","tabIndex","_ref$id","id","DROPDOWN_ID","_ref$menuId","menuId","DROPDOWN_MENU_ID","_ref$menuAriaLabel","menuAriaLabel","DROPDOWN_MENU_ARIA_LABEL","_ref$inputAriaLabel","inputAriaLabel","DROPDOWN_INPUT_ARIA_LABEL","_ref$autoFocus","autoFocus","_ref$multi","multi","_ref$multiline","multiline","customOnOptionRemove","onOptionRemove","onOptionSelect","onClear","_ref$onInputChange","onInputChange","_ref$closeMenuOnSelec","closeMenuOnSelect","_ref$closeMenuOnScrol","closeMenuOnScroll","customCloseMenuOnScroll","_ref$withMandatoryDef","withMandatoryDefaultOptions","isOptionSelected","_ref$insideOverflowCo","insideOverflowContainer","_ref$insideOverflowWi","insideOverflowWithTransformContainer","_ref$tooltipContent","tooltipContent","_ref$onKeyDown","onKeyDown","_ref$isLoading","isLoading","loadingMessage","ariaLabel","_ref$tabSelectsValue","tabSelectsValue","popupsContainerSelector","filterOption","_ref$menuPosition","menuPosition","dataTestId","_ref$withGroupDivider","withGroupDivider","inputValue","blurInputOnSelect","controlRef","useRef","overrideMenuPortalTarget","document","querySelector","overrideDefaultValue","useMemo","Array","isArray","map","df","Object","assign","isMandatory","BaseSelect","prototype","renderLiveRegion","_useState","useState","_useState2","_slicedToArray","WindowedMenuList","setWindowedMenuList","useEffect","isClient","process","env","NODE_ENV","module","require","import","then","_useState3","_useState4","selected","setSelected","_useState5","_useState6","focusedOptionId","setFocusedOptionId","finalOptionRenderer","finalValueRenderer","isControlled","selectedOptions","selectedOptionsMap","reduce","acc","option","_defineProperty","overrideAriaLabel","concat","o","label","join","inlineStyles","baseStyles","generateBaseStyles","customStyles","mergedStyles","entries","accumulator","_ref2","_ref3","stylesGroup","stylesFn","defaultStyles","state","providedFn","provided","ADD_AUTO_HEIGHT_COMPONENTS","forEach","component","original","height","originalValueContainer","valueContainer","paddingLeft","Menu","useCallback","props","React","createElement","MenuComponent","Renderer","DropdownIndicator","DropdownIndicatorComponent","Option","OptionComponent","Input","_props$selectProps","selectProps","components","role","SingleValue","SingleValueComponent","selectedOption","ClearIndicator","ClearIndicatorComponent","optionValue","e","newSelectedOptions","filter","customProps","onSelectedDelete","isMultiline","DropDownComponent","AsyncSelect","Select","asyncAdditions","loadOptions","additions","isMulti","event","scrolledElement","target","parentElement","_a","classList","contains","menuStyles","dropdownMenuWrapper","cx","styles","dropdown","Control","MultiValue","ValueContainer","MultiValueContainer","MenuList","isDisabled","isClearable","isSearchable","meta","action","_toConsumableArray","isRtl","theme","customTheme","getTestId","ComponentDefaultTestId","DROPDOWN","sizes","BaseSizes","chipColors","DROPDOWN_CHIP_COLORS","menuPlacements","DROPDOWN_MENU_PLACEMENT","menuPositions","DROPDOWN_MENU_POSITION","createFilter"],"mappings":"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"}