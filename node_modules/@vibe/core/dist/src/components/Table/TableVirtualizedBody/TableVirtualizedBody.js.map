{"version":3,"file":"TableVirtualizedBody.js","sources":["../../../../../src/components/Table/TableVirtualizedBody/TableVirtualizedBody.tsx"],"sourcesContent":["import React, { ComponentType, forwardRef, useCallback, useEffect } from \"react\";\nimport { VibeComponentProps } from \"../../../types\";\nimport TableBody from \"../TableBody/TableBody\";\nimport styles from \"./TableVirtualizedBody.module.scss\";\nimport { FixedSizeList as List, ListChildComponentProps, ScrollDirection } from \"react-window\";\nimport { useTable } from \"../context/TableContext/TableContext\";\nimport cx from \"classnames\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { RowHeights } from \"../Table/TableConsts\";\nimport AutoSizer, { Size as AutoSizerSize } from \"react-virtualized-auto-sizer\";\nimport { useTableRowMenu } from \"../context/TableRowMenuContext/TableRowMenuContext\";\nimport { TableColumn } from \"../Table/Table\";\n\nexport type TableVirtualizedRow = Record<string, unknown> & { id: string };\n\nexport interface TableVirtualizedBodyProps<T extends TableVirtualizedRow = TableVirtualizedRow>\n  extends VibeComponentProps {\n  items: T[];\n  rowRenderer: (item: T) => JSX.Element;\n  onScroll?: (horizontalScrollDirection: ScrollDirection, scrollTop: number, scrollUpdateWasRequested: boolean) => void;\n  columns?: TableColumn[];\n  headerRenderer?: (columns: TableColumn[]) => JSX.Element;\n}\n\nconst TableVirtualizedBody = forwardRef(\n  <T extends TableVirtualizedRow = TableVirtualizedRow>(\n    {\n      items,\n      rowRenderer,\n      onScroll,\n      columns,\n      headerRenderer,\n      id,\n      className,\n      \"data-testid\": dataTestId\n    }: TableVirtualizedBodyProps<T>,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const { size, virtualizedListRef, onVirtualizedListScroll, markTableAsVirtualized } = useTable();\n    const { resetHoveredRow } = useTableRowMenu();\n    const virtualizedWithHeader = !!columns && !!headerRenderer;\n\n    const handleOuterScroll = useCallback(\n      (e: Event) => {\n        const target = e.target as HTMLDivElement;\n        resetHoveredRow();\n        onVirtualizedListScroll({\n          target,\n          currentTarget: target\n        } as unknown as React.UIEvent<HTMLDivElement>);\n      },\n      [resetHoveredRow, onVirtualizedListScroll]\n    );\n\n    useEffect(() => {\n      const scrollElement = virtualizedListRef.current;\n      if (!scrollElement) return;\n\n      scrollElement.addEventListener(\"scroll\", handleOuterScroll);\n\n      return () => {\n        scrollElement.removeEventListener(\"scroll\", handleOuterScroll);\n      };\n    }, [handleOuterScroll, virtualizedListRef]);\n\n    const handleVirtualizedVerticalScroll = useCallback(\n      ({\n        scrollDirection,\n        scrollOffset,\n        scrollUpdateWasRequested\n      }: {\n        scrollDirection: ScrollDirection;\n        scrollOffset: number;\n        scrollUpdateWasRequested: boolean;\n      }) => {\n        if (virtualizedWithHeader) return;\n        onScroll?.(scrollDirection, scrollOffset, scrollUpdateWasRequested);\n      },\n      [onScroll, virtualizedWithHeader]\n    );\n\n    const itemRenderer = useCallback<ComponentType<ListChildComponentProps<TableVirtualizedRow>>>(\n      ({ index, style: { width: _width, ...style } }) => {\n        if (virtualizedWithHeader && index === 0) {\n          return null; //placeholder for virtualized with header\n        }\n        const currentIndex = virtualizedWithHeader ? index - 1 : index;\n        const currentItem = items[currentIndex];\n        const element = rowRenderer(currentItem);\n\n        return React.cloneElement(element, {\n          style: { ...style, ...element.props?.style },\n          key: index\n        });\n      },\n      [items, rowRenderer, virtualizedWithHeader]\n    );\n\n    useEffect(() => {\n      if (!virtualizedWithHeader) markTableAsVirtualized();\n    }, [markTableAsVirtualized, virtualizedWithHeader]);\n\n    return (\n      <TableBody\n        className={cx(\n          styles.tableBody,\n          {\n            [styles.withHeader]: virtualizedWithHeader\n          },\n          className\n        )}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE_VIRTUALIZED_BODY, id)}\n        ref={ref}\n      >\n        {items?.length && (\n          <AutoSizer>\n            {({ height, width }: AutoSizerSize) => (\n              <List\n                itemSize={RowHeights[size]}\n                height={height}\n                itemCount={virtualizedWithHeader ? items.length + 1 : items.length}\n                width={width}\n                onScroll={handleVirtualizedVerticalScroll}\n                outerRef={element => {\n                  virtualizedListRef.current = element;\n                }}\n                innerElementType={\n                  virtualizedWithHeader\n                    ? forwardRef(({ children, ...rest }, ref) => (\n                        <div ref={ref} {...rest}>\n                          {headerRenderer(columns)}\n                          {children}\n                        </div>\n                      ))\n                    : undefined\n                }\n              >\n                {itemRenderer}\n              </List>\n            )}\n          </AutoSizer>\n        )}\n      </TableBody>\n    );\n  }\n);\n\nexport default TableVirtualizedBody;\n"],"names":["TableVirtualizedBody","forwardRef","_ref","ref","items","rowRenderer","onScroll","columns","headerRenderer","id","className","dataTestId","_useTable","useTable","size","virtualizedListRef","onVirtualizedListScroll","markTableAsVirtualized","resetHoveredRow","useTableRowMenu","virtualizedWithHeader","handleOuterScroll","useCallback","e","target","currentTarget","useEffect","scrollElement","current","addEventListener","removeEventListener","handleVirtualizedVerticalScroll","_ref2","scrollDirection","scrollOffset","scrollUpdateWasRequested","itemRenderer","_a","index","_c","style","__rest","element","React","cloneElement","Object","assign","_b","props","key","createElement","TableBody","cx","styles","tableBody","_defineProperty","withHeader","getTestId","ComponentDefaultTestId","TABLE_VIRTUALIZED_BODY","length","AutoSizer","_ref3","List","itemSize","RowHeights","height","itemCount","width","outerRef","innerElementType","children","rest","undefined"],"mappings":"6uBAyBMA,IAAAA,EAAuBC,GAC3B,SAAAC,EAWEC,GACE,IAVAC,EAAKF,EAALE,MACAC,EAAWH,EAAXG,YACAC,EAAQJ,EAARI,SACAC,EAAOL,EAAPK,QACAC,EAAcN,EAAdM,eACAC,EAAEP,EAAFO,GACAC,EAASR,EAATQ,UACeC,EAAUT,EAAzB,eAIFU,EAAsFC,IAA9EC,EAAIF,EAAJE,KAAMC,EAAkBH,EAAlBG,mBAAoBC,EAAuBJ,EAAvBI,wBAAyBC,EAAsBL,EAAtBK,uBACnDC,EAAoBC,IAApBD,gBACFE,IAA0Bb,KAAaC,EAEvCa,EAAoBC,GACxB,SAACC,GACC,IAAMC,EAASD,EAAEC,OACjBN,IACAF,EAAwB,CACtBQ,OAAAA,EACAC,cAAeD,GAEnB,GACA,CAACN,EAAiBF,IAGpBU,GAAU,WACR,IAAMC,EAAgBZ,EAAmBa,QACzC,GAAKD,EAIL,OAFAA,EAAcE,iBAAiB,SAAUR,GAElC,WACLM,EAAcG,oBAAoB,SAAUT,GAEhD,GAAG,CAACA,EAAmBN,IAEvB,IAAMgB,EAAkCT,GACtC,SAAAU,GASMZ,GACJd,SAAAA,EATe0B,EAAfC,gBACYD,EAAZE,aACwBF,EAAxBG,yBAQF,GACA,CAAC7B,EAAUc,IAGPgB,EAAed,GACnB,SAACe,SAAEC,EAAKD,EAALC,MAAOC,EAAAF,EAAAG,MAA2BA,EAAKC,EAAAF,EAAzB,WACf,GAAInB,GAAmC,IAAVkB,EAC3B,OAAO,KAET,IAEMI,EAAUrC,EADID,EADCgB,EAAwBkB,EAAQ,EAAIA,IAIzD,OAAOK,EAAMC,aAAaF,EAAS,CACjCF,MAAKK,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAON,GAAyB,QAAfO,EAAAL,EAAQM,aAAO,IAAAD,OAAA,EAAAA,EAAAP,OACrCS,IAAKX,GAER,GACD,CAAClC,EAAOC,EAAae,IAOvB,OAJAM,GAAU,WACHN,GAAuBH,GAC9B,GAAG,CAACA,EAAwBG,IAG1BuB,EAACO,cAAAC,EACC,CAAAzC,UAAW0C,EACTC,EAAOC,UAASC,EAEbF,GAAAA,EAAOG,WAAapC,GAEvBV,GAEFD,GAAIA,gBACSE,GAAc8C,EAAUC,EAAuBC,uBAAwBlD,GACpFN,IAAKA,IAEJC,eAAAA,EAAOwD,SACNjB,gBAACkB,EAAS,MACP,SAAAC,GAAgB,OACfnB,EAAAO,cAACa,EACC,CAAAC,SAAUC,EAAWnD,GACrBoD,OAHMJ,EAANI,OAIAC,UAAW/C,EAAwBhB,EAAMwD,OAAS,EAAIxD,EAAMwD,OAC5DQ,MALaN,EAALM,MAMR9D,SAAUyB,EACVsC,SAAU,SAAA3B,GACR3B,EAAmBa,QAAUc,CAC9B,EACD4B,iBACElD,EACInB,GAAW,SAACoC,EAAuBlC,GAAvB,IAAEoE,EAAmBlC,EAAnBkC,SAAaC,EAAI/B,EAAAJ,EAAnB,cAA+B,OACzCM,EAAKO,cAAA,MAAAL,OAAAC,OAAA,CAAA3C,IAAKA,GAASqE,GAChBhE,EAAeD,GACfgE,EAEJ,SACDE,GAGLrC,EAEJ,IAKX"}