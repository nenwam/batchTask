import e,{useRef as n,useMemo as o}from"react";import t from"../../../../DialogContentContainer/DialogContentContainer.js";import i from"../../../../../hooks/usePopover.js";import{Placement as s}from"../../../../../hooks/popoverConstants.js";import r from"../../../../../hooks/ssr/useIsomorphicLayoutEffect.js";var l=function(l){var u,c=l.anchorRef,a=l.open,p=l.autoFocusOnMount,m=l.onClose,v=l.children,f=l.submenuPosition,d=n(null),b=n(null);r((function(){p&&a&&(null==d?void 0:d.current)&&requestAnimationFrame((function(){d.current.focus()}))}),[p,a]);var h=o((function(){return"left"===f?s.LEFT_START:void 0}),[f]),j=i(null==c?void 0:c.current,null==b?void 0:b.current,{isOpen:a,placement:h}),C=j.styles,g=j.attributes,y=v&&e.Children.only(v);return(null===(u=null==y?void 0:y.type)||void 0===u?void 0:u.isMenu)?e.createElement("div",Object.assign({style:Object.assign(Object.assign({},C.popper),{visibility:a?"visible":"hidden"})},g.popper,{ref:b}),y&&a&&e.createElement(t,null,e.cloneElement(y,Object.assign(Object.assign({},null==y?void 0:y.props),{isVisible:a,isSubMenu:!0,onClose:m,ref:d,useDocumentEventListeners:!p})))):(console.error("MenuItem can accept only Menu element as first level child, this element is not valid: ",y),null)};export{l as default};
//# sourceMappingURL=MenuItemSubMenu.js.map
